// frontend/src/components/games/crash/CrashHistory.js
import React from 'react';
import '../../../styles/CrashHistory.css';

const CrashHistory = ({ history }) => {
  
  // –ü–æ–ª—É—á–µ–Ω–∏–µ —Ü–≤–µ—Ç–∞ –¥–ª—è –º–Ω–æ–∂–∏—Ç–µ–ª—è
  const getMultiplierColor = (multiplier) => {
    if (multiplier < 1.5) return '#ff3b30'; // –ö—Ä–∞—Å–Ω—ã–π
    if (multiplier < 2) return '#ff9500'; // –û—Ä–∞–Ω–∂–µ–≤—ã–π
    if (multiplier < 5) return '#ffcc00'; // –ñ–µ–ª—Ç—ã–π
    if (multiplier < 10) return '#34c759'; // –ó–µ–ª–µ–Ω—ã–π
    return '#0ba84a'; // –¢–µ–º–Ω–æ-–∑–µ–ª–µ–Ω—ã–π
  };
  
  // –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–ª–∞—Å—Å–∞ –¥–ª—è –º–Ω–æ–∂–∏—Ç–µ–ª—è
  const getMultiplierClass = (multiplier) => {
    if (multiplier < 1.5) return 'very-low';
    if (multiplier < 2) return 'low';
    if (multiplier < 5) return 'medium';
    if (multiplier < 10) return 'high';
    return 'very-high';
  };
  
  // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏
  const formatTime = (timestamp) => {
    const date = new Date(timestamp);
    return date.toLocaleTimeString('ru-RU', { 
      hour: '2-digit', 
      minute: '2-digit', 
      second: '2-digit' 
    });
  };
  
  return (
    <div className="crash-history">
      <div className="history-header">
        <h3 className="history-title">–ò—Å—Ç–æ—Ä–∏—è —Ä–∞—É–Ω–¥–æ–≤</h3>
        {history.length > 0 && (
          <span className="history-count">{history.length} —Ä–∞—É–Ω–¥–æ–≤</span>
        )}
      </div>
      
      <div className="history-content">
        {history.length === 0 ? (
          <div className="no-history">
            <span className="no-history-icon">üìà</span>
            <span className="no-history-text">–ò—Å—Ç–æ—Ä–∏—è —Ä–∞—É–Ω–¥–æ–≤ –ø–æ—è–≤–∏—Ç—Å—è –∑–¥–µ—Å—å</span>
          </div>
        ) : (
          <>
            {/* –ö–æ–º–ø–∞–∫—Ç–Ω—ã–π –≤–∏–¥ - –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Ä–∞—É–Ω–¥–æ–≤ –≤ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–µ */}
            <div className="history-compact">
              <div className="compact-title">–ü–æ—Å–ª–µ–¥–Ω–∏–µ —Ä–∞—É–Ω–¥—ã:</div>
              <div className="compact-list">
                {history.slice(0, 10).map((round, index) => (
                  <div
                    key={round.roundId || index}
                    className={`compact-item ${getMultiplierClass(round.crashPoint)}`}
                    style={{ color: getMultiplierColor(round.crashPoint) }}
                    title={`–†–∞—É–Ω–¥ ${round.roundId}: ${round.crashPoint.toFixed(2)}x`}
                  >
                    {round.crashPoint.toFixed(2)}x
                  </div>
                ))}
              </div>
            </div>
            
            {/* –î–µ—Ç–∞–ª—å–Ω—ã–π —Å–ø–∏—Å–æ–∫ */}
            <div className="history-detailed">
              {history.slice(0, 20).map((round, index) => (
                <div key={round.roundId || index} className="history-item">
                  <div className="round-info">
                    <div className="round-id">#{round.roundId}</div>
                    <div className="round-time">{formatTime(round.timestamp)}</div>
                  </div>
                  
                  <div className="round-result">
                    <div 
                      className={`crash-multiplier ${getMultiplierClass(round.crashPoint)}`}
                      style={{ color: getMultiplierColor(round.crashPoint) }}
                    >
                      {round.crashPoint.toFixed(2)}x
                    </div>
                  </div>
                  
                  <div className="round-stats">
                    <div className="stat">
                      <span className="stat-label">–°—Ç–∞–≤–æ–∫:</span>
                      <span className="stat-value">{round.totalBets || 0}</span>
                    </div>
                    <div className="stat">
                      <span className="stat-label">–°—É–º–º–∞:</span>
                      <span className="stat-value">{(round.totalAmount || 0).toFixed(1)} USDT</span>
                    </div>
                  </div>
                </div>
              ))}
            </div>
          </>
        )}
      </div>
      
      {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∏—Å—Ç–æ—Ä–∏–∏ */}
      {history.length > 0 && (
        <div className="history-stats">
          <div className="stats-title">–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</div>
          <div className="stats-grid">
            <div className="stat-item">
              <span className="stat-label">–°—Ä–µ–¥–Ω–∏–π –∫—Ä–∞—à:</span>
              <span className="stat-value">
                {(history.reduce((sum, round) => sum + round.crashPoint, 0) / history.length).toFixed(2)}x
              </span>
            </div>
            <div className="stat-item">
              <span className="stat-label">–ú–∞–∫—Å. –∫—Ä–∞—à:</span>
              <span className="stat-value">
                {Math.max(...history.map(round => round.crashPoint)).toFixed(2)}x
              </span>
            </div>
            <div className="stat-item">
              <span className="stat-label">–ú–∏–Ω. –∫—Ä–∞—à:</span>
              <span className="stat-value">
                {Math.min(...history.map(round => round.crashPoint)).toFixed(2)}x
              </span>
            </div>
            <div className="stat-item">
              <span className="stat-label"> 2x:</span>
              <span className="stat-value">
                {Math.round((history.filter(round => round.crashPoint >= 2).length / history.length) * 100)}%
              </span>
            </div>
          </div>
        </div>
      )}
    </div>
  );
};

export default CrashHistory;
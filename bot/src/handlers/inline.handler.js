// inline.handler.js
const config = require('../config');

/**
 * –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ inline query (–±–µ–∑ –¥—É—ç–ª–µ–π)
 */
function registerInlineHandlers(bot) {
  console.log('üîç –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è inline –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ (–±–µ–∑ –¥—É—ç–ª–µ–π)...');
  
  bot.on('inline_query', async (ctx) => {
    try {
      const query = ctx.inlineQuery.query.trim();
      const results = [];
      
      console.log(`üì• Inline query –ø–æ–ª—É—á–µ–Ω: {
  query: '${query}',
  user: '${ctx.from.username}',
  userId: '${ctx.from.id}'
}`);
      
      // –ï—Å–ª–∏ –∑–∞–ø—Ä–æ—Å –Ω–µ —Å–≤—è–∑–∞–Ω —Å –¥—É—ç–ª—è–º–∏, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø—Ä–∞–≤–∫—É
      if (query && !query.startsWith('duel')) {
        results.push({
          type: 'article',
          id: 'inline_help',
          title: '‚ùì –°–ø—Ä–∞–≤–∫–∞ –ø–æ inline –∫–æ–º–∞–Ω–¥–∞–º',
          description: '–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã',
          input_message_content: {
            message_text: `ü§ñ **–°–ø—Ä–∞–≤–∫–∞ –ø–æ inline –∫–æ–º–∞–Ω–¥–∞–º**\n\n` +
                         `**–î—É—ç–ª–∏:**\n` +
                         `\`@bot duel @username —Å—É–º–º–∞ –∏–≥—Ä–∞ —Ñ–æ—Ä–º–∞—Ç\`\n` +
                         `–ü—Ä–∏–º–µ—Ä: \`@bot duel @player 100 üé≤ bo3\`\n\n` +
                         `**–î–æ—Å—Ç—É–ø–Ω—ã–µ –∏–≥—Ä—ã:**\n` +
                         `üé≤ –ö–æ—Å—Ç–∏ ‚Ä¢ üéØ –î–∞—Ä—Ç—Å ‚Ä¢ ‚öΩ –§—É—Ç–±–æ–ª\n` +
                         `üèÄ –ë–∞—Å–∫–µ—Ç–±–æ–ª ‚Ä¢ üé≥ –ë–æ—É–ª–∏–Ω–≥ ‚Ä¢ üé∞ –°–ª–æ—Ç—ã`,
            parse_mode: 'Markdown'
          }
        });
      }
      
      // –ï—Å–ª–∏ –∑–∞–ø—Ä–æ—Å –ø—É—Å—Ç–æ–π –∏–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
      if (results.length === 0) {
        results.push({
          type: 'article',
          id: 'default_help',
          title: 'üéÆ Greenlight Bot',
          description: '–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è',
          input_message_content: {
            message_text: `üéÆ **Greenlight Bot**\n\n` +
                         `–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è inline —Ä–µ–∂–∏–º–∞.\n\n` +
                         `–ù–∞–ø—Ä–∏–º–µ—Ä: \`duel @username 100 üé≤ bo3\``,
            parse_mode: 'Markdown'
          }
        });
      }
      
      console.log(`üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º inline —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã: {
  resultsCount: ${results.length}
}`);
      
      await ctx.answerInlineQuery(results, {
        cache_time: 5,
        is_personal: true
      });
      
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ inline query:', error);
      await ctx.answerInlineQuery([]);
    }
  });
  
  console.log('‚úÖ Inline –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã');
}

module.exports = {
  registerInlineHandlers
};
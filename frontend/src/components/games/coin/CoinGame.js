// frontend/src/components/games/coin/CoinGame.js - –£–ü–†–û–©–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø
import React, { useState, useEffect } from 'react';
import CoinFlip from './CoinFlip';
import CoinControls from './CoinControls';
import '../../../styles/CoinGame.css';

const CoinGame = ({ 
  balance, 
  setBalance, 
  gameStats, 
  setGameResult, 
  setError,
  onFlip, // –ü—Ä–∏–Ω–∏–º–∞–µ–º onFlip –∏–∑ GameScreen
  isFlipping, // –ü—Ä–∏–Ω–∏–º–∞–µ–º isFlipping –∏–∑ GameScreen
  result, // –ü—Ä–∏–Ω–∏–º–∞–µ–º result –∏–∑ GameScreen
  lastResults, // –ü—Ä–∏–Ω–∏–º–∞–µ–º lastResults –∏–∑ GameScreen
  onAnimationComplete // –ü—Ä–∏–Ω–∏–º–∞–µ–º onAnimationComplete –∏–∑ GameScreen
}) => {
  const [isInitializing, setIsInitializing] = useState(true);
  
  useEffect(() => {
    const initializeGame = async () => {
      try {
        console.log('=== –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –ò–ì–†–´ –ú–û–ù–ï–¢–ö–ê ===');
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–æ—á–Ω—ã–π —ç–∫—Ä–∞–Ω 1.5 —Å–µ–∫—É–Ω–¥—ã
        await new Promise(resolve => setTimeout(resolve, 1500));
        
        setIsInitializing(false);
        console.log('–ò–≥—Ä–∞ –º–æ–Ω–µ—Ç–∫–∞ –≥–æ—Ç–æ–≤–∞');
        
      } catch (err) {
        console.error('–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –º–æ–Ω–µ—Ç–∫–∏:', err);
        setError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–≥—Ä—ã');
        setIsInitializing(false);
      }
    };
    
    initializeGame();
  }, [setError]);
  
  // –ü—Ä–æ—Å—Ç–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–≥—Ä—ã - –ø—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ–¥–∞–µ–º –∑–∞–ø—Ä–æ—Å –≤ GameScreen
  const handleFlip = async (betData) => {
    console.log('ü™ô COIN GAME: –ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–¥–±—Ä–∞—Å—ã–≤–∞–Ω–∏–µ:', betData);
    
    if (!onFlip) {
      console.error('ü™ô COIN GAME: –û—à–∏–±–∫–∞ - —Ñ—É–Ω–∫—Ü–∏—è onFlip –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω–∞ –∏–∑ GameScreen!');
      setError('–û—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∏–≥—Ä—ã');
      return;
    }
    
    try {
      setError(null);
      
      // –ü—Ä–æ—Å—Ç–æ –≤—ã–∑—ã–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑ GameScreen
      await onFlip(betData);
      
    } catch (err) {
      console.error('ü™ô COIN GAME: –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ:', err);
      setError(err.message || '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∏–≥—Ä–µ');
    }
  };
  
  // –ó–∞–≥—Ä—É–∑–æ—á–Ω—ã–π —ç–∫—Ä–∞–Ω
  if (isInitializing) {
    return (
      <div className="coin-loading-screen">
        <div className="coin-loading-content">
          <div className="greenlight-logo">
            <div className="logo-icon coin-icon">ü™ô</div>
            <div className="logo-text">Greenlight</div>
            <div className="logo-subtitle">Coin Flip</div>
          </div>
          
          <div className="coin-demo-container">
            <div className="coin-demo">
              <div className="coin-demo-side coin-demo-heads">
                <span>‚Çø</span>
              </div>
              <div className="coin-demo-side coin-demo-tails">
                <span>üíé</span>
              </div>
            </div>
          </div>
          
          <div className="vs-container-demo">
            <div className="side-option-demo">
              <div className="side-emoji-demo">‚Çø</div>
              <div className="side-label-demo">–û—Ä—ë–ª</div>
            </div>
            <div className="vs-text-demo">VS</div>
            <div className="side-option-demo">
              <div className="side-emoji-demo">üíé</div>
              <div className="side-label-demo">–†–µ—à–∫–∞</div>
            </div>
          </div>
          
          <div className="loading-spinner">
            <div className="spinner-ring"></div>
            <div className="spinner-ring"></div>
            <div className="spinner-ring"></div>
          </div>
          <div className="loading-text">–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –º–æ–Ω–µ—Ç—ã...</div>
        </div>
      </div>
    );
  }
  
  return (
    <div className="coin-game">
      {/* –ì–ª–∞–≤–Ω–∞—è –∏–≥—Ä–æ–≤–∞—è –æ–±–ª–∞—Å—Ç—å */}
      <div className="coin-main-area">
        <CoinFlip 
          flipping={isFlipping}
          result={result}
          onAnimationComplete={onAnimationComplete}
        />
        
        {/* –ò—Å—Ç–æ—Ä–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ */}
        <div className="results-section">
          <div className="results-header">
            <h3>–ü–æ—Å–ª–µ–¥–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã</h3>
          </div>
          
          <div className="results-container">
            {(!lastResults || lastResults.length === 0) ? (
              <div className="no-results">
                <span className="no-results-icon">üéØ</span>
                <span className="no-results-text">–ò—Å—Ç–æ—Ä–∏—è –ø—É—Å—Ç–∞</span>
              </div>
            ) : (
              <div className="results-list">
                {lastResults.slice().reverse().map((result, index) => (
                  <div 
                    key={index} 
                    className={`result-item ${result}`}
                    title={result === 'heads' ? '–û—Ä—ë–ª' : '–†–µ—à–∫–∞'}
                  >
                    <span className="result-icon">
                      {result === 'heads' ? '‚Çø' : 'üíé'}
                    </span>
                  </div>
                ))}
              </div>
            )}
          </div>
        </div>
      </div>
      
      {/* –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–≥—Ä–æ–π */}
      <CoinControls 
        onFlip={handleFlip}
        isFlipping={isFlipping}
        balance={balance}
        lastResults={lastResults || []}
      />
    </div>
  );
};

export default CoinGame;

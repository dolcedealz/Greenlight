// frontend/src/components/games/crash/CrashBetsList.js
import React, { useState } from 'react';
import '../../../styles/CrashBetsList.css';

const CrashBetsList = ({ activeBets, cashedOutBets, gameState }) => {
  const [activeTab, setActiveTab] = useState('active'); // active, cashed
  
  // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–ª—å–∫–æ —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
  const getDisplayBets = () => {
    if (activeTab === 'active') {
      return (activeBets || []).slice(0, 50); // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–∞–∫—Å–∏–º—É–º 50 –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å—Ç–∞–≤–æ–∫
    } else {
      return (cashedOutBets || []).slice(0, 50); // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–∞–∫—Å–∏–º—É–º 50 –≤—ã–≤–µ–¥–µ–Ω–Ω—ã—Ö —Å—Ç–∞–≤–æ–∫
    }
  };
  
  // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –º–∞—Å–∫–∏—Ä–æ–≤–∞–Ω–∏–µ–º
  const formatUsername = (username, isCurrentUser = false) => {
    if (!username) return '–ò–≥—Ä–æ–∫';
    
    // –ï—Å–ª–∏ —ç—Ç–æ —Ç–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª–Ω–æ–µ –∏–º—è
    if (isCurrentUser) {
      if (username.length > 8) {
        return username.slice(0, 6) + '...';
      }
      return username;
    }
    
    // –î–ª—è –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –º–∞—Å–∫–∏—Ä—É–µ–º –∏–º—è
    if (username.length <= 3) {
      return username.charAt(0) + '*'.repeat(username.length - 1);
    } else if (username.length <= 6) {
      return username.charAt(0) + '*'.repeat(username.length - 2) + username.charAt(username.length - 1);
    } else {
      return username.slice(0, 2) + '*'.repeat(3) + username.slice(-1);
    }
  };
  
  // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ü–≤–µ—Ç–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const getUserColor = (userId) => {
    const colors = [
      '#ff6b6b', '#4ecdc4', '#45b7d1', '#f9ca24', 
      '#f0932b', '#eb4d4b', '#6c5ce7', '#a29bfe',
      '#fd79a8', '#e84393', '#00b894', '#00cec9'
    ];
    
    if (!userId) return colors[0];
    
    const hash = userId.toString().split('').reduce((a, b) => {
      a = ((a << 5) - a) + b.charCodeAt(0);
      return a & a;
    }, 0);
    
    return colors[Math.abs(hash) % colors.length];
  };
  
  // –¢–æ–ª—å–∫–æ —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
  const displayBets = getDisplayBets();
  const realActiveBets = activeBets || [];
  const realCashedBets = cashedOutBets || [];
  
  return (
    <div className="crash-bets-list">
      <div className="bets-header">
        <div className="bets-tabs">
          <button 
            className={`tab-btn ${activeTab === 'active' ? 'active' : ''}`}
            onClick={() => setActiveTab('active')}
          >
            –°—Ç–∞–≤–∫–∏ ({realActiveBets.length})
          </button>
          <button 
            className={`tab-btn ${activeTab === 'cashed' ? 'active' : ''}`}
            onClick={() => setActiveTab('cashed')}
          >
            üí∞ –í—ã–≤–µ–¥–µ–Ω–æ ({realCashedBets.length})
          </button>
        </div>
      </div>
      
      <div className="bets-content">
        {displayBets.length === 0 ? (
          <div className="no-bets">
            <span className="no-bets-icon">üìä</span>
            <span className="no-bets-text">
              {activeTab === 'active' 
                ? '–ü–æ–∫–∞ –Ω–µ—Ç —Å—Ç–∞–≤–æ–∫ –≤ —ç—Ç–æ–º —Ä–∞—É–Ω–¥–µ' 
                : '–ü–æ–∫–∞ –Ω–∏–∫—Ç–æ –Ω–µ –≤—ã–≤–µ–ª —Å—Ä–µ–¥—Å—Ç–≤–∞'}
            </span>
            <span className="no-bets-subtext">
              {activeTab === 'active' 
                ? '–°—Ç–∞–Ω—å—Ç–µ –ø–µ—Ä–≤—ã–º, –∫—Ç–æ —Å–¥–µ–ª–∞–µ—Ç —Å—Ç–∞–≤–∫—É!' 
                : '–í—ã–≤–æ–¥—ã –ø–æ—è–≤—è—Ç—Å—è –∑–¥–µ—Å—å –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏'}
            </span>
          </div>
        ) : (
          <div className="bets-list">
            {displayBets.map((bet, index) => (
              <div 
                key={bet.id || `${bet.userId}-${index}`} 
                className={`bet-item ${bet.isCurrentUser ? 'current-user' : ''}`}
              >
                <div className="bet-user">
                  <div 
                    className="user-avatar"
                    style={{ backgroundColor: getUserColor(bet.userId) }}
                  >
                    {formatUsername(bet.username, bet.isCurrentUser).charAt(0).toUpperCase()}
                  </div>
                  <span className="username">
                    {formatUsername(bet.username, bet.isCurrentUser)}
                    {bet.isCurrentUser && <span className="you-label">(–í—ã)</span>}
                  </span>
                </div>
                
                <div className="bet-details">
                  <div className="bet-amount">
                    {bet.amount ? bet.amount.toFixed(2) : '0.00'} USDT
                  </div>
                  
                  {activeTab === 'active' && (
                    <div className="bet-auto">
                      {bet.autoCashOut && bet.autoCashOut > 0 ? (
                        <span className="auto-cashout" title={`–ê–≤—Ç–æ–≤—ã–≤–æ–¥ –ø—Ä–∏ ${bet.autoCashOut.toFixed(2)}x`}>
                          ü§ñ {bet.autoCashOut.toFixed(2)}x
                        </span>
                      ) : (
                        <span className="manual" title="–†—É—á–Ω–æ–π –≤—ã–≤–æ–¥">
                          ‚úã –†—É—á–Ω–æ–π
                        </span>
                      )}
                    </div>
                  )}
                  
                  {activeTab === 'cashed' && bet.cashOutMultiplier && (
                    <div className="cashout-info">
                      <div className="cashout-multiplier" title={`–í—ã–≤–µ–ª –ø—Ä–∏ –º–Ω–æ–∂–∏—Ç–µ–ª–µ ${bet.cashOutMultiplier.toFixed(2)}x`}>
                        üöÄ {bet.cashOutMultiplier.toFixed(2)}x
                      </div>
                      <div className="win-amount" title={`–í—ã–∏–≥—Ä—ã—à: ${bet.winAmount ? bet.winAmount.toFixed(2) : '0.00'} USDT`}>
                        üí∞ +{bet.winAmount ? bet.winAmount.toFixed(2) : '0.00'} USDT
                      </div>
                    </div>
                  )}
                </div>
              </div>
            ))}
          </div>
        )}
      </div>
      
      {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è —Ä–µ–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö */}
      {(realActiveBets.length > 0 || realCashedBets.length > 0) && (
        <div className="bets-stats">
          <div className="stat-item">
            <span className="stat-label">–í—Å–µ–≥–æ —Å—Ç–∞–≤–æ–∫:</span>
            <span className="stat-value">{realActiveBets.length + realCashedBets.length}</span>
          </div>
          <div className="stat-item">
            <span className="stat-label">üí∞ –û–±—â–∞—è —Å—É–º–º–∞:</span>
            <span className="stat-value">
              {(realActiveBets.reduce((sum, bet) => sum + (bet.amount || 0), 0) + 
                realCashedBets.reduce((sum, bet) => sum + (bet.amount || 0), 0)).toFixed(2)} USDT
            </span>
          </div>
          {realCashedBets.length > 0 && (
            <div className="stat-item">
              <span className="stat-label">üéâ –í—ã–≤–µ–¥–µ–Ω–æ:</span>
              <span className="stat-value">
                {realCashedBets.reduce((sum, bet) => sum + (bet.winAmount || 0), 0).toFixed(2)} USDT
              </span>
            </div>
          )}
        </div>
      )}
      
      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –∏–≥—Ä—ã */}
      <div className="game-status">
        <div className="status-indicator">
          <span className="status-dot" data-state={gameState}></span>
          <span className="status-text">
            {gameState === 'waiting' && '‚è≥ –ü—Ä–∏–µ–º —Å—Ç–∞–≤–æ–∫'}
            {gameState === 'flying' && 'üöÄ –ü–æ–ª–µ—Ç –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ'}
            {gameState === 'crashed' && 'üí• –†–∞—É–Ω–¥ –∑–∞–≤–µ—Ä—à–µ–Ω'}
            {!gameState && '‚ö° –ó–∞–≥—Ä—É–∑–∫–∞ –∏–≥—Ä—ã...'}
          </span>
        </div>
      </div>
    </div>
  );
};

export default CrashBetsList;
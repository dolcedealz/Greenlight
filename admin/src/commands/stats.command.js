// admin/src/commands/stats.command.js
const axios = require('axios');
const config = require('../config');

async function statsCommand(ctx) {
  try {
    const message = ctx.message.text.split(' ');
    const command = message[1] || 'finance'; // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —Ñ–∏–Ω–∞–Ω—Å–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    
    switch (command) {
      case 'finance':
      case '—Ñ–∏–Ω–∞–Ω—Å—ã':
        await showFinanceStats(ctx);
        break;
        
      case 'users':
      case '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏':
        await showUserStats(ctx);
        break;
        
      case 'games':
      case '–∏–≥—Ä—ã':
        await showGameStats(ctx);
        break;
        
      case 'commission':
      case '–∫–æ–º–∏—Å—Å–∏–∏':
        await showCommissionStats(ctx);
        break;
        
      default:
        const { Markup } = require('telegraf');
        await ctx.reply(
          'üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–∞–∑–∏–Ω–æ</b>\n\n' +
          '–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n' +
          '‚Ä¢ /stats finance - –§–∏–Ω–∞–Ω—Å–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞\n' +
          '‚Ä¢ /stats commission - –î–µ—Ç–∞–ª–∏ –ø–æ –∫–æ–º–∏—Å—Å–∏—è–º\n' +
          '‚Ä¢ /stats users - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π\n' +
          '‚Ä¢ /stats games - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–≥—Ä',
          { 
            parse_mode: 'HTML',
            ...Markup.inlineKeyboard([
              [
                Markup.button.callback('üìä –§–∏–Ω–∞–Ω—Å—ã', 'finances_stats'),
                Markup.button.callback('üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏', 'users_stats')
              ],
              [
                Markup.button.callback('üéÆ –ò–≥—Ä—ã', 'finances_games'),
                Markup.button.callback('üí∞ –ö–æ–º–∏—Å—Å–∏–∏', 'stats_commission')
              ],
              [Markup.button.callback('üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'main_menu')]
            ])
          }
        );
    }
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –∫–æ–º–∞–Ω–¥—ã /stats:', error);
    await ctx.reply('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
  }
}

async function showFinanceStats(ctx) {
  try {
    const response = await axios.get(`${config.apiUrl}/admin/finance/report`, {
      headers: { 'Authorization': `Bearer ${config.adminToken}` },
      timeout: 10000
    });
    
    const finance = response.data.data.current;
    
    let message = 'üìä <b>–§–ò–ù–ê–ù–°–û–í–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê</b>\n\n';
    
    // –û—Å–Ω–æ–≤–Ω—ã–µ –±–∞–ª–∞–Ω—Å—ã
    message += 'üè¶ <b>–û—Å–Ω–æ–≤–Ω—ã–µ –±–∞–ª–∞–Ω—Å—ã:</b>\n';
    message += `üí∞ –ë–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: <code>${finance.totalUserBalance.toFixed(2)} USDT</code>\n`;
    message += `üí∞ –û–ø–µ—Ä–∞—Ç–∏–≤–Ω—ã–π –±–∞–ª–∞–Ω—Å: <code>${finance.operationalBalance.toFixed(2)} USDT</code>\n`;
    message += `üí∞ –†–µ–∑–µ—Ä–≤ (${finance.reservePercentage}%): <code>${finance.reserveBalance.toFixed(2)} USDT</code>\n`;
    message += `‚úÖ –î–æ—Å—Ç—É–ø–Ω–æ –¥–ª—è –≤—ã–≤–æ–¥–∞: <code>${finance.availableForWithdrawal.toFixed(2)} USDT</code>\n\n`;
    
    // –î–æ—Ö–æ–¥—ã –∏ —Ä–∞—Å—Ö–æ–¥—ã
    message += 'üìà <b>–î–æ—Ö–æ–¥—ã –∏ —Ä–∞—Å—Ö–æ–¥—ã:</b>\n';
    message += `üí∞ –û–±—â–∏–µ –∫–æ–º–∏—Å—Å–∏–∏: <code>${finance.totalCommissions?.toFixed(2) || '0.00'} USDT</code>\n`;
    if (finance.commissionBreakdown) {
      message += `  ‚öîÔ∏è –î—É—ç–ª–∏: <code>${finance.commissionBreakdown.duels?.toFixed(2) || '0.00'} USDT</code>\n`;
      message += `  ‚ö° –°–æ–±—ã—Ç–∏—è: <code>${finance.commissionBreakdown.events?.toFixed(2) || '0.00'} USDT</code>\n`;
    }
    message += `‚¨áÔ∏è –ü—Ä–æ–º–æ–∫–æ–¥—ã: <code>-${finance.totalPromocodeExpenses?.toFixed(2) || '0.00'} USDT</code>\n\n`;
    
    // –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è
    if (finance.warnings) {
      const warningsList = [];
      if (finance.warnings.lowReserve) warningsList.push('‚ö†Ô∏è –ù–∏–∑–∫–∏–π —Ä–µ–∑–µ—Ä–≤');
      if (finance.warnings.highRiskRatio) warningsList.push('üî¥ –í—ã—Å–æ–∫–∏–π —Ä–∏—Å–∫');
      if (finance.warnings.negativeOperational) warningsList.push('‚ö†Ô∏è –û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å');
      
      if (warningsList.length > 0) {
        message += '‚ö†Ô∏è <b>–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è:</b>\n';
        warningsList.forEach(warning => {
          message += `‚Ä¢ ${warning}\n`;
        });
        message += '\n';
      }
    }
    
    // –§–æ—Ä–º—É–ª–∞ —Ä–∞—Å—á–µ—Ç–∞
    message += 'üìä <b>–§–æ—Ä–º—É–ª–∞ –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ–≥–æ –±–∞–ª–∞–Ω—Å–∞:</b>\n';
    message += '<i>–°—Ç–∞–≤–∫–∏ - –í—ã–∏–≥—Ä—ã—à–∏ + –ö–æ–º–∏—Å—Å–∏–∏ - –ü—Ä–æ–º–æ–∫–æ–¥—ã</i>\n\n';
    
    message += 'üìä /stats commission - –¥–µ—Ç–∞–ª–∏ –ø–æ –∫–æ–º–∏—Å—Å–∏—è–º';
    
    const { Markup } = require('telegraf');
    await ctx.reply(message, { 
      parse_mode: 'HTML',
      ...Markup.inlineKeyboard([
        [
          Markup.button.callback('üí∞ –ö–æ–º–∏—Å—Å–∏–∏', 'stats_commission'),
          Markup.button.callback('üîÑ –û–±–Ω–æ–≤–∏—Ç—å', 'finances_stats')
        ],
        [Markup.button.callback('üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'main_menu')]
      ])
    });
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', error);
    await ctx.reply('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏');
  }
}

async function showCommissionStats(ctx) {
  try {
    const response = await axios.get(`${config.apiUrl}/admin/finance/report`, {
      headers: { 'Authorization': `Bearer ${config.adminToken}` },
      timeout: 10000
    });
    
    const { current, allTime } = response.data.data;
    
    let message = 'üìä <b>–î–ï–¢–ê–õ–ò –ü–û –ö–û–ú–ò–°–°–ò–Ø–ú</b>\n\n';
    
    // –†–∞–∑–±–∏–≤–∫–∞ –∫–æ–º–∏—Å—Å–∏–π
    message += 'üìä <b>–ò—Å—Ç–æ—á–Ω–∏–∫–∏ –∫–æ–º–∏—Å—Å–∏–π:</b>\n';
    if (current.commissionBreakdown) {
      const duels = current.commissionBreakdown.duels || 0;
      const events = current.commissionBreakdown.events || 0;
      const total = duels + events;
      
      message += `‚öîÔ∏è PvP –î—É—ç–ª–∏: <code>${duels.toFixed(2)} USDT</code>`;
      if (total > 0) message += ` (${((duels/total)*100).toFixed(1)}%)`;
      message += '\n';
      
      message += `  ‚ö° 5% —Å –∫–∞–∂–¥–æ–π –¥—É—ç–ª–∏\n`;
      
      message += `‚ö° –°–æ–±—ã—Ç–∏—è: <code>${events.toFixed(2)} USDT</code>`;
      if (total > 0) message += ` (${((events/total)*100).toFixed(1)}%)`;
      message += '\n';
      
      message += `  ‚ö° –ú–∞—Ä–∂–∞ –≤ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–∞—Ö\n`;
      
      message += `‚úÖ –í—Å–µ–≥–æ: <code>${total.toFixed(2)} USDT</code>\n\n`;
    }
    
    // –†–∞—Å—Ö–æ–¥—ã –Ω–∞ –ø—Ä–æ–º–æ–∫–æ–¥—ã
    message += 'üí∏ <b>–†–∞—Å—Ö–æ–¥—ã –Ω–∞ –ø—Ä–æ–º–æ–∫–æ–¥—ã:</b>\n';
    message += `‚¨áÔ∏è –í—Å–µ–≥–æ: <code>${current.totalPromocodeExpenses?.toFixed(2) || '0.00'} USDT</code>\n\n`;
    
    // –ß–∏—Å—Ç–∞—è –ø—Ä–∏–±—ã–ª—å
    const netProfit = (current.totalCommissions || 0) - (current.totalPromocodeExpenses || 0);
    message += 'üí∞ <b>–ß–∏—Å—Ç–∞—è –ø—Ä–∏–±—ã–ª—å –æ—Ç –∫–æ–º–∏—Å—Å–∏–π:</b>\n';
    message += `üí∞ <code>${netProfit.toFixed(2)} USDT</code>\n\n`;
    
    // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–≥—Ä
    if (allTime.gameStats) {
      message += 'üí∏ <b>–ü—Ä–∏–±—ã–ª—å –ø–æ –∏–≥—Ä–∞–º:</b>\n';
      
      Object.entries(allTime.gameStats).forEach(([game, stats]) => {
        if (stats.profit > 0) {
          const gameNames = {
            coin: 'ü™ô –ú–æ–Ω–µ—Ç–∫–∞',
            mines: 'üí£ –ú–∏–Ω—ã',
            slots: 'üé∞ –°–ª–æ—Ç—ã',
            crash: 'üöÄ –ö—Ä–∞—à',
            events: '‚ö° –°–æ–±—ã—Ç–∏—è'
          };
          
          message += `üí∞ ${gameNames[game] || game}: <code>${stats.profit.toFixed(2)} USDT</code>\n`;
        }
      });
    }
    
    await ctx.reply(message, { parse_mode: 'HTML' });
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∫–æ–º–∏—Å—Å–∏–π:', error);
    await ctx.reply('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∫–æ–º–∏—Å—Å–∏–π');
  }
}

async function showUserStats(ctx) {
  try {
    const response = await axios.get(`${config.apiUrl}/admin/stats/users`, {
      headers: { 'Authorization': `Bearer ${config.adminToken}` },
      timeout: 10000
    });
    
    const stats = response.data.data;
    
    let message = 'üë• <b>–°–¢–ê–¢–ò–°–¢–ò–ö–ê –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô</b>\n\n';
    
    message += `üë§ –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: <code>${stats.totalUsers || 0}</code>\n`;
    message += `üíö –ê–∫—Ç–∏–≤–Ω—ã—Ö (–∑–∞ 24—á): <code>${stats.activeToday || 0}</code>\n`;
    message += `üíö –ê–∫—Ç–∏–≤–Ω—ã—Ö (–∑–∞ –Ω–µ–¥–µ–ª—é): <code>${stats.activeWeek || 0}</code>\n`;
    message += `üí∞ –° –¥–µ–ø–æ–∑–∏—Ç–∞–º–∏: <code>${stats.withDeposits || 0}</code>\n`;
    message += `üö´ –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö: <code>${stats.blocked || 0}</code>\n\n`;
    
    if (stats.averageBalance) {
      message += `üìä –°—Ä–µ–¥–Ω–∏–π –±–∞–ª–∞–Ω—Å: <code>${stats.averageBalance.toFixed(2)} USDT</code>\n`;
    }
    
    await ctx.reply(message, { parse_mode: 'HTML' });
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:', error);
    await ctx.reply('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π');
  }
}

async function showGameStats(ctx) {
  try {
    const response = await axios.get(`${config.apiUrl}/admin/finance/report`, {
      headers: { 'Authorization': `Bearer ${config.adminToken}` },
      timeout: 10000
    });
    
    const { allTime } = response.data.data;
    
    let message = 'üéÆ <b>–°–¢–ê–¢–ò–°–¢–ò–ö–ê –ò–ì–†</b>\n\n';
    
    if (allTime.gameStats) {
      Object.entries(allTime.gameStats).forEach(([game, stats]) => {
        const gameNames = {
          coin: 'ü™ô –ú–æ–Ω–µ—Ç–∫–∞',
          mines: 'üí£ –ú–∏–Ω—ã',
          slots: 'üé∞ –°–ª–æ—Ç—ã',
          crash: 'üöÄ –ö—Ä–∞—à',
          events: '‚ö° –°–æ–±—ã—Ç–∏—è'
        };
        
        if (stats.totalGames > 0) {
          message += `${gameNames[game] || game}\n`;
          message += `üéØ –ò–≥—Ä: <code>${stats.totalGames}</code>\n`;
          message += `üí∞ –°—Ç–∞–≤–æ–∫: <code>${stats.totalBets.toFixed(2)} USDT</code>\n`;
          message += `üí∏ –í—ã–ø–ª–∞—Ç: <code>${stats.totalWins.toFixed(2)} USDT</code>\n`;
          message += `üí∞ –ü—Ä–∏–±—ã–ª—å: <code>${stats.profit.toFixed(2)} USDT</code>\n`;
          
          if (stats.totalBets > 0) {
            const rtp = ((stats.totalWins / stats.totalBets) * 100);
            message += `‚¨áÔ∏è RTP: <code>${rtp.toFixed(1)}%</code>\n\n`;
          } else {
            message += '\n';
          }
        }
      });
    }
    
    await ctx.reply(message, { parse_mode: 'HTML' });
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∏–≥—Ä:', error);
    await ctx.reply('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∏–≥—Ä');
  }
}

module.exports = statsCommand;
module.exports.showCommissionStats = showCommissionStats;
module.exports.showFinanceStats = showFinanceStats;
module.exports.showUserStats = showUserStats;
module.exports.showGameStats = showGameStats;
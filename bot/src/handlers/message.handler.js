// message.handler.js
const { Markup } = require('telegraf');
const config = require('../config');

/**
 * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
 * @param {Object} bot - –≠–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ Telegraf
 */
function registerMessageHandlers(bot) {
  // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –∫–Ω–æ–ø–æ–∫
  bot.hears('üéÆ –ò–≥—Ä–∞—Ç—å', async (ctx) => {
    await ctx.reply(
      'üéÆ –í—ã–±–µ—Ä–∏—Ç–µ –∏–≥—Ä—É:',
      Markup.inlineKeyboard([
        [
          Markup.button.webApp('üé∞ –°–ª–æ—Ç—ã', `${config.webAppUrl}?game=slots`),
          Markup.button.webApp('üí£ –ú–∏–Ω—ã', `${config.webAppUrl}?game=mines`)
        ],
        [
          Markup.button.webApp('üìà –ö—Ä–∞—à', `${config.webAppUrl}?game=crash`),
          Markup.button.webApp('ü™ô –ú–æ–Ω–µ—Ç–∫–∞', `${config.webAppUrl}?game=coin`)
        ],
        [
          Markup.button.webApp('üîÆ –°–æ–±—ã—Ç–∏—è', `${config.webAppUrl}?screen=events`),
        ]
      ])
    );
  });
  
  bot.hears('üë§ –ü—Ä–æ—Ñ–∏–ª—å', async (ctx) => {
    await ctx.reply(
      'üë§ –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:',
      Markup.inlineKeyboard([
        Markup.button.webApp('–û—Ç–∫—Ä—ã—Ç—å –ø—Ä–æ—Ñ–∏–ª—å', `${config.webAppUrl}?screen=profile`)
      ])
    );
  });
  
  bot.hears('üí∞ –ü–æ–ø–æ–ª–Ω–∏—Ç—å', async (ctx) => {
    await ctx.reply(
      config.messages.deposit,
      Markup.inlineKeyboard([
        [
          Markup.button.callback('10 USDT', 'deposit:10'),
          Markup.button.callback('20 USDT', 'deposit:20'),
          Markup.button.callback('50 USDT', 'deposit:50')
        ],
        [
          Markup.button.callback('100 USDT', 'deposit:100'),
          Markup.button.callback('500 USDT', 'deposit:500'),
          Markup.button.callback('1000 USDT', 'deposit:1000')
        ],
        [
          Markup.button.callback('–î—Ä—É–≥–∞—è —Å—É–º–º–∞', 'deposit:custom')
        ]
      ])
    );
  });
  
  bot.hears('üí∏ –í—ã–≤–µ—Å—Ç–∏', async (ctx) => {
    await ctx.reply(
      config.messages.withdraw,
      Markup.inlineKeyboard([
        Markup.button.webApp('–ó–∞–ø—Ä–æ—Å–∏—Ç—å –≤—ã–≤–æ–¥', `${config.webAppUrl}?screen=withdraw`)
      ])
    );
  });
  
  bot.hears('üë• –†–µ—Ñ–µ—Ä–∞–ª—ã', async (ctx) => {
    // –ó–¥–µ—Å—å –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø–æ–ª—É—á–µ–Ω–∏–µ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–≥–æ –∫–æ–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —Å–µ—Ä–≤–µ—Ä–∞
    const referralCode = 'ABCD1234'; // –ü—Ä–∏–º–µ—Ä
    const referralLink = `https://t.me/${ctx.botInfo.username}?start=${referralCode}`;
    
    await ctx.reply(
      `${config.messages.referral}${referralLink}\n\n–ü—Ä–∏–≥–ª–∞—Å–∏—Ç–µ –¥—Ä—É–∑–µ–π –∏ –ø–æ–ª—É—á–∞–π—Ç–µ –±–æ–Ω—É—Å—ã!`,
      Markup.inlineKeyboard([
        Markup.button.webApp('–ü–æ–¥—Ä–æ–±–Ω–µ–µ', `${config.webAppUrl}?screen=referrals`)
      ])
    );
  });
  
  bot.hears('üìä –ò—Å—Ç–æ—Ä–∏—è', async (ctx) => {
    await ctx.reply(
      '–í–∞—à–∞ –∏—Å—Ç–æ—Ä–∏—è –∏–≥—Ä –∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π:',
      Markup.inlineKeyboard([
        Markup.button.webApp('–û—Ç–∫—Ä—ã—Ç—å –∏—Å—Ç–æ—Ä–∏—é', `${config.webAppUrl}?screen=history`)
      ])
    );
  });
  
  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
  bot.on('text', async (ctx) => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –∫–∞–∫–æ–º-–ª–∏–±–æ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
    // (–Ω–∞–ø—Ä–∏–º–µ—Ä, –≤–≤–æ–¥ —Å—É–º–º—ã –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è)
    
    // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–π –∫–æ–º–∞–Ω–¥–µ
    await ctx.reply(config.messages.invalidCommand);
  });
  
  return bot;
}

module.exports = {
  registerMessageHandlers
};
// admin/src/commands/events-extended.command.js - –û–ë–ù–û–í–õ–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø –° –ü–û–î–î–ï–†–ñ–ö–û–ô –ì–ò–ë–ö–ò–• –ö–û–≠–§–§–ò–¶–ò–ï–ù–¢–û–í
const { Markup } = require('telegraf');
const axios = require('axios');

// API URL –∏ —Ç–æ–∫–µ–Ω
const apiUrl = process.env.API_URL || 'https://greenlight-api-ghqh.onrender.com/api';
const adminToken = process.env.ADMIN_API_TOKEN;

// –°–æ–∑–¥–∞–µ–º axios instance
const apiClient = axios.create({
  baseURL: apiUrl,
  headers: {
    'Authorization': `Bearer ${adminToken}`,
    'Content-Type': 'application/json'
  },
  timeout: 30000
});

/**
 * –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ–±—ã—Ç–∏—è–º–∏ —Å –≥–∏–±–∫–∏–º–∏ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–∞–º–∏
 */
const eventsExtendedCommands = {
  /**
   * –ü–æ–∫–∞–∑–∞—Ç—å —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–µ –º–µ–Ω—é —Å–æ–±—ã—Ç–∏–π —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –≥–∏–±–∫–∏—Ö –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–≤
   */
  async showExtendedEventsMenu(ctx) {
    const keyboard = Markup.inlineKeyboard([
      [Markup.button.callback('üìã –°–ø–∏—Å–æ–∫ —Å–æ–±—ã—Ç–∏–π', 'events_list')],
      [Markup.button.callback('‚ûï –°–æ–∑–¥–∞—Ç—å —Å–æ–±—ã—Ç–∏–µ', 'events_create')],
      [
        Markup.button.callback('‚úÖ –ó–∞–≤–µ—Ä—à–∏—Ç—å —Å–æ–±—ã—Ç–∏–µ', 'events_finish'),
        Markup.button.callback('‚è∞ –ò–∑–º–µ–Ω–∏—Ç—å –≤—Ä–µ–º—è', 'events_edit_time')
      ],
      [
        Markup.button.callback('üéØ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏—Å—Ö–æ–¥', 'events_set_outcome'),
        Markup.button.callback('üîÑ –î–æ—Å—Ä–æ—á–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ', 'events_early_finish')
      ],
      [
        Markup.button.callback('üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–≤', 'events_odds_stats'),
        Markup.button.callback('üìà –ò—Å—Ç–æ—Ä–∏—è –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–≤', 'events_odds_history')
      ],
      [Markup.button.callback('‚óÄÔ∏è –ù–∞–∑–∞–¥', 'admin_menu')]
    ]);

    await ctx.editMessageText(
      'üîÆ *–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è–º–∏ —Å –≥–∏–±–∫–∏–º–∏ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–∞–º–∏*\n\n' +
      'üîÑ *–ì–∏–±–∫–∏–µ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã –∞–∫—Ç–∏–≤–Ω—ã*\n' +
      '–§–∏–Ω–∞–ª—å–Ω—ã–µ –≤—ã–ø–ª–∞—Ç—ã —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞—é—Ç—Å—è –ø–æ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–∞–º –Ω–∞ –º–æ–º–µ–Ω—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Å–æ–±—ã—Ç–∏—è\n\n' +
      '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:',
      {
        parse_mode: 'Markdown',
        ...keyboard
      }
    );
  },

  /**
   * –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–≤
   */
  async showOddsStatistics(ctx) {
    try {
      console.log('ADMIN: –ó–∞–ø—Ä–æ—Å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –≥–∏–±–∫–∏—Ö –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–≤');
      
      const response = await apiClient.get('/events/admin/flexible-odds-stats');
      
      if (!response.data.success) {
        return ctx.answerCbQuery('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏');
      }
      
      const stats = response.data.data;
      
      let message = 'üìä *–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≥–∏–±–∫–∏—Ö –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–≤*\n\n';
      message += `üéØ –í—Å–µ–≥–æ —Å–æ–±—ã—Ç–∏–π —Å –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–∞–º–∏: ${stats.totalEvents}\n`;
      message += `üîÑ –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–µ—Ä–µ—Å—á–µ—Ç–æ–≤: ${stats.totalRecalculations}\n`;
      message += `üìà –°—Ä–µ–¥–Ω–µ–µ –ø–µ—Ä–µ—Å—á–µ—Ç–æ–≤ –Ω–∞ —Å–æ–±—ã—Ç–∏–µ: ${stats.avgRecalculationsPerEvent.toFixed(1)}\n\n`;
      
      if (stats.topVolatileEvents && stats.topVolatileEvents.length > 0) {
        message += 'üå™Ô∏è *–°–∞–º—ã–µ –≤–æ–ª–∞—Ç–∏–ª—å–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è:*\n';
        stats.topVolatileEvents.slice(0, 5).forEach((event, index) => {
          message += `${index + 1}. ${event.title} - ${event.recalculations} –ø–µ—Ä–µ—Å—á–µ—Ç–æ–≤\n`;
        });
        message += '\n';
      }
      
      message += 'üí° *–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –≥–∏–±–∫–∏—Ö –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–≤:*\n';
      message += '‚Ä¢ –ë–æ–ª–µ–µ —Å–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –≤—ã–ø–ª–∞—Ç\n';
      message += '‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∏—Å–∫–æ–≤\n';
      message += '‚Ä¢ –ü–æ–≤—ã—à–µ–Ω–Ω–∞—è –≤–æ–≤–ª–µ—á–µ–Ω–Ω–æ—Å—Ç—å –∏–≥—Ä–æ–∫–æ–≤\n';
      message += '‚Ä¢ –ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å —Ä–∞—Å—á–µ—Ç–æ–≤';
      
      const keyboard = Markup.inlineKeyboard([
        [Markup.button.callback('üîÑ –û–±–Ω–æ–≤–∏—Ç—å', 'events_odds_stats')],
        [Markup.button.callback('‚óÄÔ∏è –ù–∞–∑–∞–¥', 'events_menu')]
      ]);
      
      await ctx.editMessageText(message, {
        parse_mode: 'Markdown',
        ...keyboard
      });
      
    } catch (error) {
      console.error('ADMIN: –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–≤:', error);
      await ctx.answerCbQuery('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏');
    }
  },

  /**
   * –ü–æ–∫–∞–∑–∞—Ç—å –∏—Å—Ç–æ—Ä–∏—é –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–≤ –¥–ª—è —Å–æ–±—ã—Ç–∏—è
   */
  async showOddsHistory(ctx) {
    ctx.session = ctx.session || {};
    ctx.session.oddsHistory = {
      step: 'eventId'
    };
    
    await ctx.editMessageText(
      'üìà *–ò—Å—Ç–æ—Ä–∏—è –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–≤ —Å–æ–±—ã—Ç–∏—è*\n\n' +
      '–í–≤–µ–¥–∏—Ç–µ ID —Å–æ–±—ã—Ç–∏—è –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏—Å—Ç–æ—Ä–∏–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–≤:',
      {
        parse_mode: 'Markdown',
        ...Markup.inlineKeyboard([[
          Markup.button.callback('‚ùå –û—Ç–º–µ–Ω–∞', 'events_menu')
        ]])
      }
    );
  },

  /**
   * –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∏—Å—Ç–æ—Ä–∏–∏ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–≤
   */
  async handleOddsHistory(ctx) {
    if (!ctx.session || !ctx.session.oddsHistory) {
      return;
    }
    
    const text = ctx.message.text.trim();
    
    try {
      console.log('ADMIN: –ü–æ–ª—É—á–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–≤ –¥–ª—è —Å–æ–±—ã—Ç–∏—è:', text);
      
      const response = await apiClient.get(`/events/admin/${text}/odds-history`);
      
      if (!response.data.success) {
        await ctx.reply('‚ùå –°–æ–±—ã—Ç–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –∏–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö');
        return;
      }
      
      const data = response.data.data;
      const event = data.event;
      const oddsStats = data.oddsStatistics;
      
      let message = `üìà *–ò—Å—Ç–æ—Ä–∏—è –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–≤*\n\n`;
      message += `üéØ –°–æ–±—ã—Ç–∏–µ: ${event.title}\n`;
      message += `üìä –°—Ç–∞—Ç—É—Å: ${event.status}\n`;
      message += `üí∞ –û–±—â–∏–π –ø—É–ª: ${event.totalPool.toFixed(2)} USDT\n\n`;
      
      if (oddsStats.hasHistory) {
        message += `üîÑ –ü–µ—Ä–µ—Å—á–µ—Ç–æ–≤: ${oddsStats.recalculations}\n`;
        message += `üìÖ –ü–µ—Ä–≤—ã–π —Ä–∞—Å—á–µ—Ç: ${new Date(oddsStats.firstCalculation).toLocaleString('ru-RU')}\n`;
        message += `‚è∞ –ü–æ—Å–ª–µ–¥–Ω–∏–π —Ä–∞—Å—á–µ—Ç: ${new Date(oddsStats.lastCalculation).toLocaleString('ru-RU')}\n\n`;
        
        message += 'üìä *–¢–µ–∫—É—â–∏–µ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã:*\n';
        Object.entries(oddsStats.currentOdds).forEach(([outcomeId, odds]) => {
          const outcome = event.outcomes.find(o => o.id === outcomeId);
          message += `‚Ä¢ ${outcome.name}: ${odds.toFixed(2)}\n`;
        });
        
        message += '\nüìà *–°—Ä–µ–¥–Ω–∏–µ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã:*\n';
        Object.entries(oddsStats.averageOdds).forEach(([outcomeId, odds]) => {
          const outcome = event.outcomes.find(o => o.id === outcomeId);
          message += `‚Ä¢ ${outcome.name}: ${odds.toFixed(2)}\n`;
        });
        
        message += '\nüìä *–≠–∫—Å—Ç—Ä–µ–º–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è:*\n';
        Object.entries(oddsStats.extremeOdds).forEach(([outcomeId, extremes]) => {
          const outcome = event.outcomes.find(o => o.id === outcomeId);
          message += `‚Ä¢ ${outcome.name}: ${extremes.min.toFixed(2)} - ${extremes.max.toFixed(2)}\n`;
        });
        
      } else {
        message += '‚ùå –ò—Å—Ç–æ—Ä–∏—è –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–≤ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç\n';
        message += '–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:\n';
        message += '‚Ä¢ –°–æ–±—ã—Ç–∏–µ —Ç–æ–ª—å–∫–æ —Å–æ–∑–¥–∞–Ω–æ\n';
        message += '‚Ä¢ –ï—â–µ –Ω–µ –±—ã–ª–æ –Ω–∏ –æ–¥–Ω–æ–π —Å—Ç–∞–≤–∫–∏\n';
        message += '‚Ä¢ –î–∞–Ω–Ω—ã–µ –Ω–µ —Å–æ—Ö—Ä–∞–Ω–∏–ª–∏—Å—å';
      }
      
      const keyboard = Markup.inlineKeyboard([
        [Markup.button.callback('üîÑ –û–±–Ω–æ–≤–∏—Ç—å', `refresh_odds_history_${text}`)],
        [Markup.button.callback('‚óÄÔ∏è –ù–∞–∑–∞–¥', 'events_menu')]
      ]);
      
      await ctx.reply(message, {
        parse_mode: 'Markdown',
        ...keyboard
      });
      
      // –û—á–∏—â–∞–µ–º —Å–µ—Å—Å–∏—é
      delete ctx.session.oddsHistory;
      
    } catch (error) {
      console.error('ADMIN: –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–≤:', error);
      await ctx.reply(`‚ùå –û—à–∏–±–∫–∞: ${error.response?.data?.message || error.message}`);
      delete ctx.session.oddsHistory;
    }
  },

  /**
   * –ü–æ–∫–∞–∑–∞—Ç—å –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–æ–±—ã—Ç–∏–∏ —Å –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–∞–º–∏
   */
  async showEventDetails(ctx, eventId) {
    try {
      console.log('ADMIN: –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–æ–±—ã—Ç–∏–∏:', eventId);
      
      const response = await apiClient.get(`/events/admin/${eventId}`);
      
      if (!response.data.success) {
        return ctx.answerCbQuery('‚ùå –°–æ–±—ã—Ç–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
      }
      
      const event = response.data.data.event;
      
      let message = `üéØ *–î–µ—Ç–∞–ª–∏ —Å–æ–±—ã—Ç–∏—è*\n\n`;
      message += `üìù –ù–∞–∑–≤–∞–Ω–∏–µ: ${event.title}\n`;
      message += `üìã –û–ø–∏—Å–∞–Ω–∏–µ: ${event.description}\n`;
      message += `üìä –°—Ç–∞—Ç—É—Å: ${event.status}\n`;
      message += `üí∞ –û–±—â–∏–π –ø—É–ª: ${event.totalPool.toFixed(2)} USDT\n`;
      message += `üé≤ –°—Ç–∞–≤–æ–∫: ${event.outcomes.reduce((sum, o) => sum + o.betsCount, 0)}\n\n`;
      
      message += 'üéØ *–ò—Å—Ö–æ–¥—ã –∏ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã:*\n';
      event.outcomes.forEach((outcome, index) => {
        const odds = event.currentOdds[outcome.id] || event.initialOdds;
        message += `${index + 1}. ${outcome.name}\n`;
        message += `   üí∞ –°—Ç–∞–≤–æ–∫: ${outcome.totalBets.toFixed(2)} USDT (${outcome.betsCount} —à—Ç.)\n`;
        message += `   üìà –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç: ${odds.toFixed(2)}\n`;
        message += `   üìä –î–æ–ª—è: ${event.totalPool > 0 ? ((outcome.totalBets / event.totalPool) * 100).toFixed(1) : 0}%\n\n`;
      });
      
      // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≥–∏–±–∫–∏—Ö –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–∞—Ö
      if (event.metadata?.flexibleOddsStats) {
        const stats = event.metadata.flexibleOddsStats;
        message += 'üîÑ *–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≥–∏–±–∫–∏—Ö –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–≤:*\n';
        message += `üìä –ü–µ—Ä–µ—Å—á–µ—Ç–æ–≤: ${stats.oddsRecalculations || 0}\n`;
        message += `üìà –ó–∞–ø–∏—Å–µ–π –≤ –∏—Å—Ç–æ—Ä–∏–∏: ${stats.oddsHistory?.length || 0}\n`;
        
        if (stats.extremeOdds && Object.keys(stats.extremeOdds).length > 0) {
          message += '\nüìä *–≠–∫—Å—Ç—Ä–µ–º–∞–ª—å–Ω—ã–µ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã:*\n';
          Object.entries(stats.extremeOdds).forEach(([outcomeId, extremes]) => {
            const outcome = event.outcomes.find(o => o.id === outcomeId);
            message += `‚Ä¢ ${outcome.name}: ${extremes.min.toFixed(2)} - ${extremes.max.toFixed(2)}\n`;
          });
        }
      }
      
      // –í—Ä–µ–º–µ–Ω–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
      message += `\n‚è∞ *–í—Ä–µ–º—è:*\n`;
      message += `üìÖ –ù–∞—á–∞–ª–æ: ${new Date(event.startTime).toLocaleString('ru-RU')}\n`;
      message += `üîí –°—Ç–∞–≤–∫–∏ –¥–æ: ${new Date(event.bettingEndsAt).toLocaleString('ru-RU')}\n`;
      message += `üèÅ –û–∫–æ–Ω—á–∞–Ω–∏–µ: ${new Date(event.endTime).toLocaleString('ru-RU')}\n`;
      
      const keyboard = Markup.inlineKeyboard([
        [
          Markup.button.callback('üìà –ò—Å—Ç–æ—Ä–∏—è –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–≤', `show_odds_history_${eventId}`),
          Markup.button.callback('üéØ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ', `manage_event_${eventId}`)
        ],
        [Markup.button.callback('‚óÄÔ∏è –ù–∞–∑–∞–¥', 'events_list')]
      ]);
      
      await ctx.editMessageText(message, {
        parse_mode: 'Markdown',
        ...keyboard
      });
      
    } catch (error) {
      console.error('ADMIN: –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏:', error);
      await ctx.answerCbQuery('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–æ–±—ã—Ç–∏–∏');
    }
  },

  /**
   * –ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –æ –≤–ª–∏—è–Ω–∏–∏ –Ω–∞ –≥–∏–±–∫–∏–µ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã
   */
  async showFlexibleOddsWarning(ctx, action, eventId) {
    const warnings = {
      'finish': {
        title: '‚ö†Ô∏è –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è —Å –≥–∏–±–∫–∏–º–∏ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–∞–º–∏',
        text: '–ü—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —Å–æ–±—ã—Ç–∏—è –±—É–¥—É—Ç —Ä–∞—Å—Å—á–∏—Ç–∞–Ω—ã –§–ò–ù–ê–õ–¨–ù–´–ï –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã –∏ –≤—ã–ø–ª–∞—Ç—ã –∏–≥—Ä–æ–∫–∞–º.\n\n' +
              'üîÑ –í—ã–ø–ª–∞—Ç—ã –º–æ–≥—É—Ç –æ—Ç–ª–∏—á–∞—Ç—å—Å—è –æ—Ç –æ–∂–∏–¥–∞–µ–º—ã—Ö –∏–≥—Ä–æ–∫–∞–º–∏\n' +
              'üìä –§–∏–Ω–∞–ª—å–Ω—ã–µ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã –∑–∞–≤–∏—Å—è—Ç –æ—Ç –æ–±—â–µ–≥–æ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Å—Ç–∞–≤–æ–∫\n' +
              'üí∞ –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –∏–≥—Ä–æ–∫–∏ –º–æ–≥—É—Ç –ø–æ–ª—É—á–∏—Ç—å –±–æ–ª—å—à–µ, –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –º–µ–Ω—å—à–µ\n\n' +
              '–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∑–∞–≤–µ—Ä—à–∏—Ç—å —Å–æ–±—ã—Ç–∏–µ?'
      },
      'early_finish': {
        title: '‚ö†Ô∏è –î–æ—Å—Ä–æ—á–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Å –≥–∏–±–∫–∏–º–∏ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–∞–º–∏',
        text: '–î–æ—Å—Ä–æ—á–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è –ø–æ–≤–ª–∏—è–µ—Ç –Ω–∞ —Å–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ—Å—Ç—å –≥–∏–±–∫–∏—Ö –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–≤.\n\n' +
              '‚è∞ –ò–≥—Ä–æ–∫–∏ –º–æ–≥–ª–∏ —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞—Ç—å –Ω–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å—Ç–∞–≤–∫–∏\n' +
              'üìä –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã –º–æ–≥–ª–∏ –∏–∑–º–µ–Ω–∏—Ç—å—Å—è –ø—Ä–∏ –Ω–æ—Ä–º–∞–ª—å–Ω–æ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏\n' +
              'üí° –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∑–∞–≤–µ—Ä—à–∞—Ç—å —Å–æ–±—ã—Ç–∏—è –≤ –Ω–∞–∑–Ω–∞—á–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è\n\n' +
              '–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –¥–æ—Å—Ä–æ—á–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ?'
      },
      'edit_time': {
        title: '‚ö†Ô∏è –ò–∑–º–µ–Ω–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ —Å–æ–±—ã—Ç–∏—è —Å –≥–∏–±–∫–∏–º–∏ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–∞–º–∏',
        text: '–ò–∑–º–µ–Ω–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –º–æ–∂–µ—Ç –ø–æ–≤–ª–∏—è—Ç—å –Ω–∞ –¥–∏–Ω–∞–º–∏–∫—É –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–≤.\n\n' +
              'üìà –ë–æ–ª—å—à–µ –≤—Ä–µ–º–µ–Ω–∏ = –±–æ–ª—å—à–µ —Å—Ç–∞–≤–æ–∫ = –±–æ–ª—å—à–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–≤\n' +
              '‚è∞ –ú–µ–Ω—å—à–µ –≤—Ä–µ–º–µ–Ω–∏ = –º–µ–Ω—å—à–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∏\n' +
              'üéØ –ò–≥—Ä–æ–∫–∏ –º–æ–≥–ª–∏ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å —Å–≤–æ–∏ —Å—Ç–∞–≤–∫–∏ –∏—Å—Ö–æ–¥—è –∏–∑ —Ç–µ–∫—É—â–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏\n\n' +
              '–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏?'
      }
    };
    
    const warning = warnings[action];
    if (!warning) {
      return false;
    }
    
    const keyboard = Markup.inlineKeyboard([
      [
        Markup.button.callback('‚úÖ –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å', `confirm_${action}_${eventId}`),
        Markup.button.callback('‚ùå –û—Ç–º–µ–Ω–∞', 'events_menu')
      ]
    ]);
    
    await ctx.editMessageText(
      `${warning.title}\n\n${warning.text}`,
      {
        parse_mode: 'Markdown',
        ...keyboard
      }
    );
    
    return true;
  },

  /**
   * –ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Å–æ–±—ã—Ç–∏—è —Å –∞–Ω–∞–ª–∏–∑–æ–º –≥–∏–±–∫–∏—Ö –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–≤
   */
  async showEventFinishResult(ctx, result) {
    let message = '‚úÖ *–°–æ–±—ã—Ç–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!*\n\n';
    
    const event = result.event;
    const settlement = result.settlementResults;
    const flexibleOddsImpact = result.flexibleOddsImpact;
    
    // –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    message += `üìù –°–æ–±—ã—Ç–∏–µ: ${event.title}\n`;
    message += `üèÜ –ü–æ–±–µ–¥–∏—Ç–µ–ª—å: ${event.outcomes.find(o => o.id === event.winningOutcome)?.name}\n\n`;
    
    // –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ä–∞—Å—á–µ—Ç–∞
    message += 'üìä *–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ä–∞—Å—á–µ—Ç–∞:*\n';
    message += `üí∞ –í—ã–∏–≥—Ä—ã—à–Ω—ã—Ö —Å—Ç–∞–≤–æ–∫: ${settlement.winningBets}\n`;
    message += `üìâ –ü—Ä–æ–∏–≥—Ä—ã—à–Ω—ã—Ö —Å—Ç–∞–≤–æ–∫: ${settlement.losingBets}\n`;
    message += `üíµ –û–±—â–∏–µ –≤—ã–ø–ª–∞—Ç—ã: ${settlement.totalPayout.toFixed(2)} USDT\n`;
    message += `üè¶ –ü—Ä–∏–±—ã–ª—å –∫–∞–∑–∏–Ω–æ: ${result.houseProfit.toFixed(2)} USDT\n\n`;
    
    // –ê–Ω–∞–ª–∏–∑ –≤–ª–∏—è–Ω–∏—è –≥–∏–±–∫–∏—Ö –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–≤
    if (flexibleOddsImpact && flexibleOddsImpact.enabled) {
      message += 'üîÑ *–í–ª–∏—è–Ω–∏–µ –≥–∏–±–∫–∏—Ö –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–≤:*\n';
      message += `üìä –í—Å–µ–≥–æ —Å—Ç–∞–≤–æ–∫: ${flexibleOddsImpact.totalBets}\n`;
      
      if (flexibleOddsImpact.avgOddsAtBet) {
        message += `üìà –°—Ä–µ–¥–Ω–∏–π –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –ø—Ä–∏ —Å—Ç–∞–≤–∫–∞—Ö: ${flexibleOddsImpact.avgOddsAtBet.toFixed(2)}\n`;
      }
      
      if (flexibleOddsImpact.finalOdds) {
        message += `üéØ –§–∏–Ω–∞–ª—å–Ω—ã–π –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç: ${flexibleOddsImpact.finalOdds.toFixed(2)}\n`;
      }
      
      message += `‚úÖ –ò–≥—Ä–æ–∫–æ–≤ –ø–æ–ª—É—á–∏–ª–∏ –±–æ–ª—å—à–µ –æ–∂–∏–¥–∞–µ–º–æ–≥–æ: ${flexibleOddsImpact.winnersBenefited}\n`;
      message += `‚ùå –ò–≥—Ä–æ–∫–æ–≤ –ø–æ–ª—É—á–∏–ª–∏ –º–µ–Ω—å—à–µ –æ–∂–∏–¥–∞–µ–º–æ–≥–æ: ${flexibleOddsImpact.winnersLost}\n\n`;
      
      if (flexibleOddsImpact.summary) {
        message += `üí° ${flexibleOddsImpact.summary}\n\n`;
      }
      
      // –û—Ü–µ–Ω–∫–∞ —Å–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ—Å—Ç–∏
      const totalWinners = flexibleOddsImpact.winnersBenefited + flexibleOddsImpact.winnersLost;
      if (totalWinners > 0) {
        const benefitRate = (flexibleOddsImpact.winnersBenefited / totalWinners * 100).toFixed(1);
        message += `üìä –ü—Ä–æ—Ü–µ–Ω—Ç –∏–≥—Ä–æ–∫–æ–≤, –≤—ã–∏–≥—Ä–∞–≤—à–∏—Ö –æ—Ç –≥–∏–±–∫–∏—Ö –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–≤: ${benefitRate}%\n`;
        
        if (benefitRate >= 40 && benefitRate <= 60) {
          message += '‚úÖ –û—Ç–ª–∏—á–Ω—ã–π –±–∞–ª–∞–Ω—Å –≥–∏–±–∫–∏—Ö –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–≤!\n';
        } else if (benefitRate >= 30 && benefitRate <= 70) {
          message += 'üëç –•–æ—Ä–æ—à–∏–π –±–∞–ª–∞–Ω—Å –≥–∏–±–∫–∏—Ö –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–≤\n';
        } else {
          message += '‚ö†Ô∏è –ù–µ—Ä–∞–≤–Ω–æ–º–µ—Ä–Ω–æ–µ –≤–ª–∏—è–Ω–∏–µ –≥–∏–±–∫–∏—Ö –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–≤\n';
        }
      }
    }
    
    const keyboard = Markup.inlineKeyboard([
      [Markup.button.callback('üìã –ö —Å–ø–∏—Å–∫—É —Å–æ–±—ã—Ç–∏–π', 'events_list')],
      [Markup.button.callback('üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–≤', 'events_odds_stats')]
    ]);
    
    await ctx.editMessageText(message, {
      parse_mode: 'Markdown',
      ...keyboard
    });
  },

  /**
   * –≠–∫—Å–ø–æ—Ä—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –≥–∏–±–∫–∏—Ö –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–≤
   */
  async exportFlexibleOddsStats(ctx) {
    try {
      console.log('ADMIN: –≠–∫—Å–ø–æ—Ä—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –≥–∏–±–∫–∏—Ö –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–≤');
      
      const response = await apiClient.get('/events/admin/flexible-odds-export');
      
      if (!response.data.success) {
        return ctx.answerCbQuery('‚ùå –û—à–∏–±–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞ –¥–∞–Ω–Ω—ã—Ö');
      }
      
      const stats = response.data.data;
      
      // –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç
      let report = 'üìä –û–¢–ß–ï–¢ –ü–û –ì–ò–ë–ö–ò–ú –ö–û–≠–§–§–ò–¶–ò–ï–ù–¢–ê–ú\n';
      report += `–î–∞—Ç–∞: ${new Date().toLocaleString('ru-RU')}\n\n`;
      
      report += 'üìà –û–ë–©–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:\n';
      report += `‚Ä¢ –í—Å–µ–≥–æ —Å–æ–±—ã—Ç–∏–π: ${stats.totalEvents}\n`;
      report += `‚Ä¢ –°–æ–±—ã—Ç–∏—è —Å –≥–∏–±–∫–∏–º–∏ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–∞–º–∏: ${stats.eventsWithFlexibleOdds}\n`;
      report += `‚Ä¢ –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–µ—Ä–µ—Å—á–µ—Ç–æ–≤: ${stats.totalRecalculations}\n`;
      report += `‚Ä¢ –°—Ä–µ–¥–Ω–µ–µ –ø–µ—Ä–µ—Å—á–µ—Ç–æ–≤ –Ω–∞ —Å–æ–±—ã—Ç–∏–µ: ${stats.avgRecalculationsPerEvent}\n\n`;
      
      if (stats.benefitAnalysis) {
        report += 'üí∞ –ê–ù–ê–õ–ò–ó –í–´–ì–û–î–´ –ò–ì–†–û–ö–û–í:\n';
        report += `‚Ä¢ –ò–≥—Ä–æ–∫–æ–≤ –ø–æ–ª—É—á–∏–ª–∏ –±–æ–ª—å—à–µ: ${stats.benefitAnalysis.totalBenefited}\n`;
        report += `‚Ä¢ –ò–≥—Ä–æ–∫–æ–≤ –ø–æ–ª—É—á–∏–ª–∏ –º–µ–Ω—å—à–µ: ${stats.benefitAnalysis.totalLost}\n`;
        report += `‚Ä¢ –°—Ä–µ–¥–Ω—è—è —Ä–∞–∑–Ω–∏—Ü–∞ –≤ –≤—ã–ø–ª–∞—Ç–∞—Ö: ${stats.benefitAnalysis.avgDifference.toFixed(2)} USDT\n\n`;
      }
      
      if (stats.topEvents && stats.topEvents.length > 0) {
        report += 'üèÜ –¢–û–ü –°–û–ë–´–¢–ò–Ø –ü–û –í–û–õ–ê–¢–ò–õ–¨–ù–û–°–¢–ò:\n';
        stats.topEvents.forEach((event, index) => {
          report += `${index + 1}. ${event.title} - ${event.recalculations} –ø–µ—Ä–µ—Å—á–µ—Ç–æ–≤\n`;
        });
      }
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞–∫ —Ñ–∞–π–ª
      await ctx.replyWithDocument({
        source: Buffer.from(report, 'utf8'),
        filename: `flexible_odds_report_${new Date().toISOString().split('T')[0]}.txt`
      }, {
        caption: 'üìä –û—Ç—á–µ—Ç –ø–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–µ –≥–∏–±–∫–∏—Ö –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–≤',
        reply_markup: Markup.inlineKeyboard([[
          Markup.button.callback('‚óÄÔ∏è –ù–∞–∑–∞–¥', 'events_menu')
        ]])
      });
      
    } catch (error) {
      console.error('ADMIN: –û—à–∏–±–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', error);
      await ctx.answerCbQuery('‚ùå –û—à–∏–±–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞ –¥–∞–Ω–Ω—ã—Ö');
    }
  }
};

module.exports = eventsExtendedCommands;

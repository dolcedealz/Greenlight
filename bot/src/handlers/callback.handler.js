// callback.handler.js
const { Markup } = require('telegraf');
const config = require('../config');
const apiService = require('../services/api.service');

/**
 * –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ callback query (–±–µ–∑ –¥—É—ç–ª–µ–π)
 */
function registerCallbackHandlers(bot) {
  console.log('üéØ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è callback –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ (–±–µ–∑ –¥—É—ç–ª–µ–π)...');
  
  // –î–ï–ü–û–ó–ò–¢–´ - –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Å—É–º–º –¥–µ–ø–æ–∑–∏—Ç–æ–≤
  const depositAmounts = [10, 20, 50, 100, 500, 1000];
  
  depositAmounts.forEach(amount => {
    bot.action(`deposit:${amount}`, async (ctx) => {
      try {
        console.log(`üí∞ –î–µ–ø–æ–∑–∏—Ç ${amount} USDT –∑–∞–ø—Ä–æ—à–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ${ctx.from.username} (${ctx.from.id})`);
        
        await ctx.answerCbQuery(`–°–æ–∑–¥–∞–Ω–∏–µ —Å—á–µ—Ç–∞ –Ω–∞ ${amount} USDT...`);
        
        const depositData = await apiService.createDeposit(ctx.from, amount, {
          source: 'bot_button',
          description: `–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –±–æ—Ç: ${amount} USDT`
        });
        
        const netAmount = Math.round((amount * 0.97) * 100) / 100;
        await ctx.editMessageText(
          `üí∞ –°—á–µ—Ç —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!\n\n` +
          `üíµ –°—É–º–º–∞ –¥–µ–ø–æ–∑–∏—Ç–∞: ${amount} USDT\n` +
          `üí∏ –ö–æ–º–∏—Å—Å–∏—è CryptoBot: ${(amount * 0.03).toFixed(2)} USDT (3%)\n` +
          `üí∞ –ö –∑–∞—á–∏—Å–ª–µ–Ω–∏—é: ${netAmount} USDT\n` +
          `üÜî ID: ${depositData.depositId}\n` +
          `‚è∞ –î–µ–π—Å—Ç–≤—É–µ—Ç: 1 —á–∞—Å\n\n` +
          `üëá –ù–∞–∂–º–∏—Ç–µ –¥–ª—è –æ–ø–ª–∞—Ç—ã:`,
          Markup.inlineKeyboard([
            [Markup.button.url('üí≥ –û–ø–ª–∞—Ç–∏—Ç—å', depositData.payUrl)],
            [Markup.button.callback('üìã –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å', `check_deposit_status:${depositData.depositId}`)],
            [Markup.button.callback('‚¨ÖÔ∏è –ù–∞–∑–∞–¥', 'back_to_deposit_menu')]
          ])
        );
      } catch (error) {
        console.error(`–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –¥–µ–ø–æ–∑–∏—Ç–∞ ${amount} USDT:`, error);
        await ctx.answerCbQuery('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å—á–µ—Ç–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
        
        await ctx.editMessageText(
          `‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Å—á–µ—Ç –Ω–∞ ${amount} USDT\n\n` +
          `–ü—Ä–∏—á–∏–Ω–∞: ${error.message}\n\n` +
          `–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π.`,
          Markup.inlineKeyboard([
            [Markup.button.callback('üîÑ –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞', `deposit:${amount}`)],
            [Markup.button.callback('‚¨ÖÔ∏è –ù–∞–∑–∞–¥', 'back_to_deposit_menu')]
          ])
        );
      }
    });
  });
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è "–î—Ä—É–≥–∞—è —Å—É–º–º–∞"
  bot.action('deposit:custom', async (ctx) => {
    try {
      console.log(`üí∞ –î–µ–ø–æ–∑–∏—Ç (–¥—Ä—É–≥–∞—è —Å—É–º–º–∞) –∑–∞–ø—Ä–æ—à–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ${ctx.from.username} (${ctx.from.id})`);
      
      await ctx.answerCbQuery('–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è...');
      
      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ –æ–∂–∏–¥–∞–Ω–∏—è —Å—É–º–º—ã
      ctx.session = ctx.session || {};
      ctx.session.waitingForDepositAmount = true;
      
      await ctx.editMessageText(
        `üí∞ –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞\n\n` +
        `üíµ –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è:\n\n` +
        `üìã –£—Å–ª–æ–≤–∏—è:\n` +
        `‚Ä¢ –ú–∏–Ω–∏–º—É–º: 1 USDT\n` +
        `‚Ä¢ –ú–∞–∫—Å–∏–º—É–º: 10,000 USDT\n` +
        `‚Ä¢ –í–∞–ª—é—Ç–∞: —Ç–æ–ª—å–∫–æ USDT\n` +
        `‚Ä¢ –ö–æ–º–∏—Å—Å–∏—è CryptoBot: 3%\n\n` +
        `‚ÑπÔ∏è –í—ã –ø–æ–ª—É—á–∏—Ç–µ 97% –æ—Ç —Å—É–º–º—ã –Ω–∞ –±–∞–ª–∞–Ω—Å\n\n` +
        `‚úçÔ∏è –ù–∞–ø–∏—à–∏—Ç–µ —Å—É–º–º—É —á–∏—Å–ª–æ–º (–Ω–∞–ø—Ä–∏–º–µ—Ä: 25):`,
        Markup.inlineKeyboard([
          [Markup.button.callback('‚ùå –û—Ç–º–µ–Ω–∞', 'cancel_deposit')]
        ])
      );
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ deposit:custom:', error);
      await ctx.answerCbQuery('‚ùå –û—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
    }
  });
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –¥–µ–ø–æ–∑–∏—Ç–∞
  bot.action(/^check_deposit_status:(.+)$/, async (ctx) => {
    try {
      const depositId = ctx.match[1];
      console.log(`üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –¥–µ–ø–æ–∑–∏—Ç–∞ ${depositId} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ${ctx.from.username}`);
      
      await ctx.answerCbQuery('–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å...');
      
      const depositInfo = await apiService.getDepositInfo(ctx.from, depositId);
      
      let statusText = '';
      let statusEmoji = '';
      
      switch (depositInfo.status) {
        case 'pending':
          statusEmoji = '‚è≥';
          statusText = '–û–∂–∏–¥–∞–µ—Ç –æ–ø–ª–∞—Ç—ã';
          break;
        case 'paid':
          statusEmoji = '‚úÖ';
          statusText = '–û–ø–ª–∞—á–µ–Ω, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è';
          break;
        case 'completed':
          statusEmoji = 'üéâ';
          statusText = '–ó–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ';
          break;
        case 'expired':
          statusEmoji = '‚è∞';
          statusText = '–ò—Å—Ç–µ–∫ —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è';
          break;
        case 'cancelled':
          statusEmoji = '‚ùå';
          statusText = '–û—Ç–º–µ–Ω–µ–Ω';
          break;
        default:
          statusEmoji = '‚ùì';
          statusText = '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Å—Ç–∞—Ç—É—Å';
      }
      
      const keyboard = [];
      
      if (depositInfo.status === 'pending') {
        keyboard.push([Markup.button.url('üí≥ –û–ø–ª–∞—Ç–∏—Ç—å', depositInfo.payUrl)]);
        keyboard.push([Markup.button.callback('üîÑ –û–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å', `check_deposit_status:${depositId}`)]);
      } else if (depositInfo.status === 'completed') {
        keyboard.push([Markup.button.callback('üí∞ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –±–∞–ª–∞–Ω—Å', 'check_balance')]);
      }
      
      keyboard.push([Markup.button.callback('‚¨ÖÔ∏è –ù–∞–∑–∞–¥', 'back_to_deposit_menu')]);
      
      await ctx.editMessageText(
        `${statusEmoji} –°—Ç–∞—Ç—É—Å –¥–µ–ø–æ–∑–∏—Ç–∞\n\n` +
        `üÜî ID: ${depositId}\n` +
        `üíµ –°—É–º–º–∞: ${depositInfo.amount} USDT\n` +
        `üìä –°—Ç–∞—Ç—É—Å: ${statusText}\n` +
        `‚è∞ –°–æ–∑–¥–∞–Ω: ${new Date(depositInfo.createdAt).toLocaleString('ru-RU')}\n` +
        (depositInfo.paidAt ? `‚úÖ –û–ø–ª–∞—á–µ–Ω: ${new Date(depositInfo.paidAt).toLocaleString('ru-RU')}\n` : '') +
        (depositInfo.completedAt ? `üéâ –ó–∞–≤–µ—Ä—à–µ–Ω: ${new Date(depositInfo.completedAt).toLocaleString('ru-RU')}\n` : ''),
        Markup.inlineKeyboard(keyboard)
      );
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –¥–µ–ø–æ–∑–∏—Ç–∞:', error);
      await ctx.answerCbQuery('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞');
      
      await ctx.editMessageText(
        `‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å –¥–µ–ø–æ–∑–∏—Ç–∞\n\n` +
        `–ü—Ä–∏—á–∏–Ω–∞: ${error.message}`,
        Markup.inlineKeyboard([
          [Markup.button.callback('üîÑ –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞', ctx.callbackQuery.data)],
          [Markup.button.callback('‚¨ÖÔ∏è –ù–∞–∑–∞–¥', 'back_to_deposit_menu')]
        ])
      );
    }
  });
  
  // –í–´–í–û–î–´ - –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –≤—ã–≤–æ–¥–∞ —Å—Ä–µ–¥—Å—Ç–≤
  
  const withdrawAmounts = [10, 20, 50, 100, 500, 1000];
  
  withdrawAmounts.forEach(amount => {
    bot.action(`withdraw:${amount}`, async (ctx) => {
      try {
        console.log(`üí∏ –í—ã–≤–æ–¥ ${amount} USDT –∑–∞–ø—Ä–æ—à–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ${ctx.from.username} (${ctx.from.id})`);
        
        await ctx.answerCbQuery(`–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –≤—ã–≤–æ–¥–∞ ${amount} USDT...`);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const balance = await apiService.getUserBalance(ctx.from);
        
        if (balance < amount) {
          await ctx.answerCbQuery(`‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤. –ë–∞–ª–∞–Ω—Å: ${balance} USDT`);
          return;
        }
        
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—É–º–º—É –≤ —Å–µ—Å—Å–∏—é –∏ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ–ª—É—á–∞—Ç–µ–ª—è
        ctx.session = ctx.session || {};
        ctx.session.withdrawAmount = amount;
        ctx.session.waitingForWithdrawRecipient = true;
        
        const netAmount = Math.round((amount * 0.97) * 100) / 100;
        await ctx.editMessageText(
          `üí∏ –í—ã–≤–æ–¥ ${amount} USDT\n\n` +
          `üí∞ –í–∞—à –±–∞–ª–∞–Ω—Å: ${balance} USDT\n` +
          `üí∏ –ö–æ–º–∏—Å—Å–∏—è CryptoBot: ${(amount * 0.03).toFixed(2)} USDT (3%)\n` +
          `üí∞ –í—ã –ø–æ–ª—É—á–∏—Ç–µ: ${netAmount} USDT\n\n` +
          `üë§ –£–∫–∞–∂–∏—Ç–µ –ø–æ–ª—É—á–∞—Ç–µ–ª—è:\n` +
          `‚Ä¢ @username - –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é Telegram\n` +
          `‚Ä¢ –ê–¥—Ä–µ—Å –∫–æ—à–µ–ª—å–∫–∞ - –¥–ª—è –≤–Ω–µ—à–Ω–µ–≥–æ –ø–µ—Ä–µ–≤–æ–¥–∞\n\n` +
          `‚úçÔ∏è –ù–∞–ø–∏—à–∏—Ç–µ –ø–æ–ª—É—á–∞—Ç–µ–ª—è:`,
          Markup.inlineKeyboard([
            [Markup.button.callback('‚ùå –û—Ç–º–µ–Ω–∞', 'cancel_withdraw')]
          ])
        );
      } catch (error) {
        console.error(`–û—à–∏–±–∫–∞ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –≤—ã–≤–æ–¥–∞ ${amount} USDT:`, error);
        await ctx.answerCbQuery('‚ùå –û—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
      }
    });
  });
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è "–î—Ä—É–≥–∞—è —Å—É–º–º–∞" –≤—ã–≤–æ–¥–∞
  bot.action('withdraw:custom', async (ctx) => {
    try {
      console.log(`üí∏ –í—ã–≤–æ–¥ (–¥—Ä—É–≥–∞—è —Å—É–º–º–∞) –∑–∞–ø—Ä–æ—à–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ${ctx.from.username} (${ctx.from.id})`);
      
      await ctx.answerCbQuery('–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –≤—ã–≤–æ–¥–∞...');
      
      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ –æ–∂–∏–¥–∞–Ω–∏—è —Å—É–º–º—ã
      ctx.session = ctx.session || {};
      ctx.session.waitingForWithdrawAmount = true;
      
      const balance = await apiService.getUserBalance(ctx.from);
      
      await ctx.editMessageText(
        `üí∏ –í—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤\n\n` +
        `üí∞ –í–∞—à –±–∞–ª–∞–Ω—Å: ${balance} USDT\n\n` +
        `üíµ –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –¥–ª—è –≤—ã–≤–æ–¥–∞:\n\n` +
        `üìã –£—Å–ª–æ–≤–∏—è:\n` +
        `‚Ä¢ –ú–∏–Ω–∏–º—É–º: 1 USDT\n` +
        `‚Ä¢ –ú–∞–∫—Å–∏–º—É–º: 10,000 USDT\n` +
        `‚Ä¢ –î–æ 300 USDT - –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏\n` +
        `‚Ä¢ –°–≤—ã—à–µ 300 USDT - —Ç—Ä–µ–±—É–µ—Ç –æ–¥–æ–±—Ä–µ–Ω–∏—è\n` +
        `‚Ä¢ –ö–æ–º–∏—Å—Å–∏—è CryptoBot: 3%\n\n` +
        `‚ÑπÔ∏è –í—ã –ø–æ–ª—É—á–∏—Ç–µ 97% –æ—Ç –∑–∞–ø—Ä–æ—à–µ–Ω–Ω–æ–π —Å—É–º–º—ã\n\n` +
        `‚úçÔ∏è –ù–∞–ø–∏—à–∏—Ç–µ —Å—É–º–º—É —á–∏—Å–ª–æ–º (–Ω–∞–ø—Ä–∏–º–µ—Ä: 25):`,
        Markup.inlineKeyboard([
          [Markup.button.callback('‚ùå –û—Ç–º–µ–Ω–∞', 'cancel_withdraw')]
        ])
      );
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ withdraw:custom:', error);
      await ctx.answerCbQuery('‚ùå –û—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
    }
  });
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –≤—ã–≤–æ–¥–∞
  bot.action(/^confirm_withdraw:(\d+):(.+)$/, async (ctx) => {
    try {
      const amount = parseInt(ctx.match[1]);
      const recipient = ctx.match[2];
      
      console.log(`üí∏ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –≤—ã–≤–æ–¥–∞ ${amount} USDT –¥–ª—è ${recipient} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ${ctx.from.username} (${ctx.from.id})`);
      
      await ctx.answerCbQuery('–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤—ã–≤–æ–¥...');
      
      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –ø–æ–ª—É—á–∞—Ç–µ–ª—è (username –µ—Å–ª–∏ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å –±—É–∫–≤—ã, –∏–Ω–∞—á–µ wallet)
      const recipientType = /^[a-zA-Z]/.test(recipient) ? 'username' : 'wallet';
      
      // –°–æ–∑–¥–∞–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –≤—ã–≤–æ–¥ —á–µ—Ä–µ–∑ API
      const withdrawalData = await apiService.createWithdrawal(ctx.from, {
        amount: amount,
        recipient: recipient,
        recipientType: recipientType,
        source: 'bot_button',
        description: `–í—ã–≤–æ–¥ —á–µ—Ä–µ–∑ –±–æ—Ç: ${amount} USDT –Ω–∞ ${recipient}`
      });
      
      let statusText = '';
      let statusEmoji = '';
      
      switch (withdrawalData.status) {
        case 'pending':
          statusEmoji = '‚è≥';
          statusText = '–ù–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞';
          break;
        case 'processing':
          statusEmoji = 'üîÑ';
          statusText = '–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è';
          break;
        case 'completed':
          statusEmoji = '‚úÖ';
          statusText = '–ó–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ';
          break;
        default:
          statusEmoji = 'üìã';
          statusText = '–ü—Ä–∏–Ω—è—Ç –≤ –æ–±—Ä–∞–±–æ—Ç–∫—É';
      }
      
      const netAmount = Math.round((amount * 0.97) * 100) / 100;
      await ctx.editMessageText(
        `${statusEmoji} –ó–∞–ø—Ä–æ—Å –Ω–∞ –≤—ã–≤–æ–¥ —Å–æ–∑–¥–∞–Ω\\n\\n` +
        `üí∞ –ó–∞–ø—Ä–æ—à–µ–Ω–æ: ${amount} USDT\\n` +
        `üí∏ –ö–æ–º–∏—Å—Å–∏—è: ${(amount * 0.03).toFixed(2)} USDT (3%)\\n` +
        `üí∞ –ö –ø–æ–ª—É—á–µ–Ω–∏—é: ${netAmount} USDT\\n` +
        `üë§ –ü–æ–ª—É—á–∞—Ç–µ–ª—å: ${recipient}\\n` +
        `üÜî ID: ${withdrawalData.withdrawalId}\\n` +
        `üìä –°—Ç–∞—Ç—É—Å: ${statusText}\\n` +
        `‚è∞ –°–æ–∑–¥–∞–Ω: ${new Date().toLocaleString('ru-RU')}\\n\\n` +
        (amount <= 300 ? 
          `‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ (–¥–æ 300 USDT)` : 
          `‚ö†Ô∏è –¢—Ä–µ–±—É–µ—Ç –æ–¥–æ–±—Ä–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ (—Å–≤—ã—à–µ 300 USDT)`) +
        `\\n\\n–í—ã –ø–æ–ª—É—á–∏—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –æ–ø–µ—Ä–∞—Ü–∏–∏.`,
        Markup.inlineKeyboard([
          [Markup.button.callback('üí∞ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –±–∞–ª–∞–Ω—Å', 'check_balance')],
          [Markup.button.callback('üìã –ò—Å—Ç–æ—Ä–∏—è –≤—ã–≤–æ–¥–æ–≤', 'withdrawal_history')],
          [Markup.button.callback('üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'main_menu')]
        ])
      );
      
      // –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å–µ—Å—Å–∏–∏
      ctx.session = ctx.session || {};
      delete ctx.session.waitingForWithdrawAmount;
      delete ctx.session.waitingForWithdrawRecipient;
      delete ctx.session.withdrawAmount;
      delete ctx.session.withdrawRecipient;
      
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –≤—ã–≤–æ–¥–∞:', error);
      await ctx.answerCbQuery('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –≤—ã–≤–æ–¥');
      
      await ctx.editMessageText(
        `‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∑–∞–ø—Ä–æ—Å –Ω–∞ –≤—ã–≤–æ–¥\\n\\n` +
        `–ü—Ä–∏—á–∏–Ω–∞: ${error.message}\\n\\n` +
        `–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π.`,
        Markup.inlineKeyboard([
          [Markup.button.callback('üîÑ –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞', 'withdraw:custom')],
          [Markup.button.callback('‚ùå –û—Ç–º–µ–Ω–∞', 'cancel_withdraw')]
        ])
      );
    }
  });
  
  // –°–õ–£–ñ–ï–ë–ù–´–ï –ö–ù–û–ü–ö–ò
  
  // –í–æ–∑–≤—Ä–∞—Ç –≤ –º–µ–Ω—é –¥–µ–ø–æ–∑–∏—Ç–æ–≤
  bot.action('back_to_deposit_menu', async (ctx) => {
    await ctx.answerCbQuery();
    
    await ctx.editMessageText(
      config.messages.deposit,
      Markup.inlineKeyboard([
        [
          Markup.button.callback('10 USDT', 'deposit:10'),
          Markup.button.callback('20 USDT', 'deposit:20'),
          Markup.button.callback('50 USDT', 'deposit:50')
        ],
        [
          Markup.button.callback('100 USDT', 'deposit:100'),
          Markup.button.callback('500 USDT', 'deposit:500'),
          Markup.button.callback('1000 USDT', 'deposit:1000')
        ],
        [
          Markup.button.callback('–î—Ä—É–≥–∞—è —Å—É–º–º–∞', 'deposit:custom')
        ]
      ])
    );
  });
  
  // –û—Ç–º–µ–Ω–∞ –¥–µ–ø–æ–∑–∏—Ç–∞
  bot.action('cancel_deposit', async (ctx) => {
    ctx.session = ctx.session || {};
    delete ctx.session.waitingForDepositAmount;
    
    await ctx.answerCbQuery('‚ùå –î–µ–ø–æ–∑–∏—Ç –æ—Ç–º–µ–Ω–µ–Ω');
    await ctx.editMessageText('‚ùå –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ');
  });
  
  // –û—Ç–º–µ–Ω–∞ –≤—ã–≤–æ–¥–∞
  bot.action('cancel_withdraw', async (ctx) => {
    ctx.session = ctx.session || {};
    delete ctx.session.waitingForWithdrawAmount;
    delete ctx.session.waitingForWithdrawRecipient;
    delete ctx.session.withdrawAmount;
    delete ctx.session.withdrawRecipient;
    
    await ctx.answerCbQuery('‚ùå –í—ã–≤–æ–¥ –æ—Ç–º–µ–Ω–µ–Ω');
    await ctx.editMessageText('‚ùå –í—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤ –æ—Ç–º–µ–Ω–µ–Ω');
  });
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–ª–∞–Ω—Å–∞
  bot.action('check_balance', async (ctx) => {
    try {
      await ctx.answerCbQuery('–ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–∞–Ω—Å...');
      
      const balance = await apiService.getUserBalance(ctx.from);
      
      await ctx.editMessageText(
        `üí∞ –í–∞—à –±–∞–ª–∞–Ω—Å\n\n` +
        `üíµ –û—Å–Ω–æ–≤–Ω–æ–π –±–∞–ª–∞–Ω—Å: ${balance} USDT\n` +
        `üí± ‚âà ${(balance * 95).toFixed(2)} ‚ÇΩ\n\n` +
        `‚è∞ –û–±–Ω–æ–≤–ª–µ–Ω–æ: ${new Date().toLocaleString('ru-RU')}`,
        Markup.inlineKeyboard([
          [Markup.button.callback('üîÑ –û–±–Ω–æ–≤–∏—Ç—å', 'check_balance')],
          [Markup.button.callback('üí∞ –ü–æ–ø–æ–ª–Ω–∏—Ç—å', 'back_to_deposit_menu')]
        ])
      );
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–∞–ª–∞–Ω—Å–∞:', error);
      await ctx.answerCbQuery('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–∞–ª–∞–Ω—Å–∞');
    }
  });
  
  // –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö callback (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ –∫–æ–Ω—Ü–µ)
  bot.on('callback_query', async (ctx) => {
    try {
      const data = ctx.callbackQuery.data;
      console.log(`üîò –ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π callback: ${data} –æ—Ç ${ctx.from.username} (${ctx.from.id})`);
      
      // –°–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ callback
      let message = 'ü§ñ –§—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ';
      
      if (data.includes('duel') || data.includes('accept') || data.includes('decline')) {
        message = '‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥—É—ç–ª–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –¥—É—ç–ª—å.';
      } else if (data.includes('deposit') || data.includes('withdraw')) {
        message = 'üí∞ –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–ª–∞—Ç–µ–∂–µ–π –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞';
      } else if (data.includes('game') || data.includes('play')) {
        message = 'üéÆ –ò–≥—Ä–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞';
      }
      
      await ctx.answerCbQuery(message);
      
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–≥–æ callback:', error);
      try {
        await ctx.answerCbQuery('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞');
      } catch (answerError) {
        console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ callback:', answerError);
      }
    }
  });
  
  console.log('‚úÖ Callback –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã');
}

module.exports = {
  registerCallbackHandlers
};
// MinesGrid.js
import React from 'react';
import '../../../styles/MinesGrid.css';

const MinesGrid = ({ grid, revealed, onCellClick, gameActive, gameOver, loading }) => {
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –ø–æ —è—á–µ–π–∫–µ
  const handleCellClick = (rowIndex, colIndex) => {
    // –ë–ª–æ–∫–∏—Ä—É–µ–º –∫–ª–∏–∫–∏ –µ—Å–ª–∏:
    // - –∏–≥—Ä–∞ –Ω–µ –∞–∫—Ç–∏–≤–Ω–∞
    // - –∏–≥—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞
    // - –∏–¥–µ—Ç –∑–∞–≥—Ä—É–∑–∫–∞
    // - —è—á–µ–π–∫–∞ —É–∂–µ –æ—Ç–∫—Ä—ã—Ç–∞
    const index = rowIndex * 5 + colIndex;
    if (!gameActive || gameOver || loading || revealed[index]) {
      return;
    }
    
    // –í—ã–∑—ã–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–≥–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
    onCellClick(rowIndex, colIndex);
  };

  return (
    <div className={`mines-grid ${gameOver ? 'game-over' : ''}`}>
      {loading && <div className="mines-overlay"><div className="mines-spinner"></div></div>}
      
      {grid.map((row, rowIndex) => (
        <div key={rowIndex} className="mines-row">
          {row.map((cell, colIndex) => {
            const index = rowIndex * 5 + colIndex;
            const isRevealed = revealed[index];
            
            return (
              <div
                key={colIndex}
                className={`mines-cell 
                  ${isRevealed ? 'revealed' : ''} 
                  ${isRevealed && cell === 'mine' ? 'mine' : ''} 
                  ${isRevealed && cell !== 'mine' ? 'gem' : ''}
                  ${!gameActive && !isRevealed ? 'disabled' : ''}
                `}
                onClick={() => handleCellClick(rowIndex, colIndex)}
              >
                {isRevealed && cell === 'mine' && <span className="mine-icon">üí£</span>}
                {isRevealed && cell !== 'mine' && <span className="gem-icon">üíé</span>}
              </div>
            );
          })}
        </div>
      ))}
    </div>
  );
};

export default React.memo(MinesGrid);
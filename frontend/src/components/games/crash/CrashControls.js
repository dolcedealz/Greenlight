// frontend/src/components/games/crash/CrashControls.js
import React from 'react';
import '../../../styles/CrashControls.css';

const CrashControls = ({
  betAmount,
  setBetAmount,
  autoCashOut,
  setAutoCashOut,
  balance,
  gameState,
  hasBet,
  cashedOut,
  userBet,
  userCashOutMultiplier,
  loading,
  currentMultiplier
}) => {
  
  // –ö–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞–≤–∫–∏
  const handleBetAmountChange = (e) => {
    const inputValue = e.target.value;
    
    // –†–∞–∑—Ä–µ—à–∞–µ–º –ø—É—Å—Ç–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª–Ω–æ–π –æ—á–∏—Å—Ç–∫–∏ –ø–æ–ª—è
    if (inputValue === '') {
      setBetAmount('');
      return;
    }
    
    const value = parseFloat(inputValue);
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∑–Ω–∞—á–µ–Ω–∏–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∏ –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö –±–∞–ª–∞–Ω—Å–∞
    if (!isNaN(value) && value >= 0 && value <= balance) {
      setBetAmount(value);
    }
  };
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∞–≤—Ç–æ–≤—ã–≤–æ–¥–∞
  const handleAutoCashOutChange = (e) => {
    const value = parseFloat(e.target.value) || 0;
    if (value >= 1.01) {
      setAutoCashOut(value);
    }
  };
  
  // –ë—ã—Å—Ç—Ä—ã–µ —Å—Ç–∞–≤–∫–∏
  const handleQuickBet = (multiplier) => {
    if (gameState !== 'waiting' || hasBet || loading) return;
    
    const quickBet = Math.min(balance, Math.max(0.1, Math.floor(balance * multiplier * 100) / 100));
    setBetAmount(quickBet);
  };
  
  // –ë—ã—Å—Ç—Ä—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –∞–≤—Ç–æ–≤—ã–≤–æ–¥–∞
  const handleQuickAutoCashOut = (value) => {
    if (gameState === 'flying' && hasBet) return;
    setAutoCashOut(value);
  };
  
  // –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–æ–≥–æ –≤—ã–∏–≥—Ä—ã—à–∞
  const getPotentialWin = () => {
    if (gameState === 'flying' && hasBet && !cashedOut) {
      // –ï—Å–ª–∏ –∏–≥—Ä–∞ –∏–¥–µ—Ç –∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å—Ç—å —Å—Ç–∞–≤–∫–∞ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π –≤–æ–∑–º–æ–∂–Ω—ã–π –≤—ã–∏–≥—Ä—ã—à
      return (userBet.amount * currentMultiplier).toFixed(2);
    }
    // –ò–Ω–∞—á–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–π –≤—ã–∏–≥—Ä—ã—à –ø—Ä–∏ –∞–≤—Ç–æ–≤—ã–≤–æ–¥–µ
    return (betAmount * autoCashOut).toFixed(2);
  };
  
  // –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–π –ø—Ä–∏–±—ã–ª–∏
  const getCurrentProfit = () => {
    if (gameState === 'flying' && hasBet && !cashedOut) {
      return (parseFloat(getPotentialWin()) - userBet.amount).toFixed(2);
    }
    return (parseFloat(getPotentialWin()) - betAmount).toFixed(2);
  };
  
  // –ú–æ–∂–Ω–æ –ª–∏ –∏–∑–º–µ–Ω—è—Ç—å —Å—Ç–∞–≤–∫—É
  const canEditBet = gameState === 'waiting' && !hasBet && !loading;
  
  // –ú–æ–∂–Ω–æ –ª–∏ –∏–∑–º–µ–Ω—è—Ç—å –∞–≤—Ç–æ–≤—ã–≤–æ–¥
  const canEditAutoCashOut = (gameState === 'waiting' || gameState === 'crashed') && !loading;
  
  return (
    <div className="crash-controls">
      <div className="controls-row">
        {/* –õ–µ–≤–∞—è –ø–∞–Ω–µ–ª—å - –°—Ç–∞–≤–∫–∞ */}
        <div className="control-panel bet-panel">
          <div className="panel-header">
            <span className="panel-title">üí∞ –°—Ç–∞–≤–∫–∞</span>
            <span className="balance-info">–ë–∞–ª–∞–Ω—Å: {balance.toFixed(2)} USDT</span>
          </div>
          
          <div className="input-group">
            <input
              type="number"
              min="0.1"
              max={balance}
              step="0.1"
              value={betAmount}
              onChange={handleBetAmountChange}
              disabled={!canEditBet}
              className="amount-input"
              placeholder="0.00"
            />
            <span className="input-suffix">USDT</span>
          </div>
          
          <div className="quick-buttons">
            <button 
              onClick={() => handleQuickBet(0.1)} 
              disabled={!canEditBet}
              className="quick-btn"
            >
              10%
            </button>
            <button 
              onClick={() => handleQuickBet(0.25)} 
              disabled={!canEditBet}
              className="quick-btn"
            >
              25%
            </button>
            <button 
              onClick={() => handleQuickBet(0.5)} 
              disabled={!canEditBet}
              className="quick-btn"
            >
              50%
            </button>
            <button 
              onClick={() => handleQuickBet(1)} 
              disabled={!canEditBet}
              className="quick-btn"
            >
              MAX
            </button>
          </div>
        </div>
        
        {/* –ü—Ä–∞–≤–∞—è –ø–∞–Ω–µ–ª—å - –ê–≤—Ç–æ–≤—ã–≤–æ–¥ */}
        <div className="control-panel auto-panel">
          <div className="panel-header">
            <span className="panel-title">üéØ –ê–≤—Ç–æ–≤—ã–≤–æ–¥</span>
            <span className="potential-win">
              {gameState === 'flying' && hasBet && !cashedOut 
                ? `–°–µ–π—á–∞—Å: ${getPotentialWin()} USDT`
                : `–ü—Ä–∏ ${autoCashOut}x: ${getPotentialWin()} USDT`
              }
            </span>
          </div>
          
          <div className="input-group">
            <input
              type="number"
              min="1.01"
              step="0.01"
              value={autoCashOut}
              onChange={handleAutoCashOutChange}
              disabled={!canEditAutoCashOut}
              className="multiplier-input"
              placeholder="2.00"
            />
            <span className="input-suffix">x</span>
          </div>
          
          <div className="quick-buttons">
            <button 
              onClick={() => handleQuickAutoCashOut(1.25)} 
              disabled={!canEditAutoCashOut}
              className="quick-btn"
            >
              1.25x
            </button>
            <button 
              onClick={() => handleQuickAutoCashOut(1.5)} 
              disabled={!canEditAutoCashOut}
              className="quick-btn"
            >
              1.5x
            </button>
            <button 
              onClick={() => handleQuickAutoCashOut(2)} 
              disabled={!canEditAutoCashOut}
              className="quick-btn"
            >
              2x
            </button>
            <button 
              onClick={() => handleQuickAutoCashOut(3)} 
              disabled={!canEditAutoCashOut}
              className="quick-btn"
            >
              3x
            </button>
          </div>
        </div>
      </div>
      
      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–µ–∫—É—â–µ–π —Å—Ç–∞–≤–∫–µ */}
      {hasBet && userBet && (
        <div className="current-bet-info">
          <div className="bet-info-row">
            <span>üí∞ –í–∞—à–∞ —Å—Ç–∞–≤–∫–∞:</span>
            <span className="bet-amount">{userBet.amount} USDT</span>
          </div>
          
          {/* –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π –≤—ã–∏–≥—Ä—ã—à —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –∏–≥—Ä–∞ –∏–¥–µ—Ç –∏ –Ω–µ –≤—ã–≤–µ–ª–∏ */}
          {gameState === 'flying' && !cashedOut && (
            <>
              <div className="bet-info-row">
                <span>üöÄ –¢–µ–∫—É—â–∏–π –≤—ã–∏–≥—Ä—ã—à:</span>
                <span className="current-win">{getPotentialWin()} USDT</span>
              </div>
              <div className="bet-info-row">
                <span>üíé –ü—Ä–∏–±—ã–ª—å:</span>
                <span className="current-win">+{getCurrentProfit()} USDT</span>
              </div>
              <div className="bet-info-row">
                <span>üìà –†–æ—Å—Ç –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏:</span>
                <span className="current-win">{currentMultiplier.toFixed(2)}x</span>
              </div>
            </>
          )}
          
          {/* –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∞–≤—Ç–æ–≤—ã–≤–æ–¥ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –Ω–µ –≤—ã–≤–µ–ª–∏ */}
          {userBet.autoCashOut > 0 && !cashedOut && (
            <div className="bet-info-row">
              <span>üéØ –ê–≤—Ç–æ–≤—ã–≤–æ–¥ –ø—Ä–∏:</span>
              <span className="auto-cashout">{userBet.autoCashOut}x</span>
            </div>
          )}
          
          {/* –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—ã–≤–æ–¥–µ –µ—Å–ª–∏ —É–∂–µ –≤—ã–≤–µ–ª–∏ */}
          {cashedOut && userCashOutMultiplier && (
            <>
              <div className="bet-info-row">
                <span>‚úÖ –í—ã–≤–µ–¥–µ–Ω–æ –ø—Ä–∏:</span>
                <span className="auto-cashout">{userCashOutMultiplier.toFixed(2)}x</span>
              </div>
              <div className="bet-info-row">
                <span>üí∞ –ü–æ–ª—É—á–µ–Ω–æ:</span>
                <span className="current-win">{(userBet.amount * userCashOutMultiplier).toFixed(2)} USDT</span>
              </div>
              <div className="bet-info-row">
                <span>üéâ –ü—Ä–∏–±—ã–ª—å:</span>
                <span className="current-win">+{(userBet.amount * userCashOutMultiplier - userBet.amount).toFixed(2)} USDT</span>
              </div>
              <div className="bet-info-row">
                <span>üìä –ò–≥—Ä–∞ –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç—Å—è:</span>
                <span className="multiplier-value">{currentMultiplier.toFixed(2)}x</span>
              </div>
            </>
          )}
        </div>
      )}
      
      {/* –ò–°–ü–†–ê–í–õ–ï–ù–û: –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –∏–≥—Ä—ã —Å —É—Ç–æ—á–Ω–µ–Ω–Ω—ã–º–∏ –æ–ø–∏—Å–∞–Ω–∏—è–º–∏ */}
      <div className="game-state-info">
        <div className="state-indicator">
          <span className="state-label">üéÆ –°–æ—Å—Ç–æ—è–Ω–∏–µ:</span>
          <span className={`state-value ${gameState}`}>
            {gameState === 'waiting' && '‚è≥ –ü—Ä–∏–µ–º —Å—Ç–∞–≤–æ–∫ (—Ä–æ–≤–Ω–æ 7 —Å–µ–∫)'}
            {gameState === 'flying' && 'üöÄ –ü–æ–ª–µ—Ç (–º–Ω–æ–∂–∏—Ç–µ–ª—å —Ä–∞—Å—Ç–µ—Ç –º–µ–¥–ª–µ–Ω–Ω–µ–µ)'}
            {gameState === 'crashed' && 'üí• –ö—Ä–∞—à (–Ω–æ–≤—ã–π —Ä–∞—É–Ω–¥ —á–µ—Ä–µ–∑ 3 —Å–µ–∫)'}
          </span>
        </div>
        
        {/* –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–Ω–æ–∂–∏—Ç–µ–ª—å –≤–æ –≤—Ä–µ–º—è –ø–æ–ª–µ—Ç–∞ */}
        {gameState === 'flying' && (
          <div className="multiplier-info">
            <span className="multiplier-label">üî• –¢–µ–∫—É—â–∏–π –º–Ω–æ–∂–∏—Ç–µ–ª—å:</span>
            <span className="multiplier-value">{currentMultiplier.toFixed(2)}x</span>
          </div>
        )}
        
        {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –±–µ–∑ —Å—Ç–∞–≤–æ–∫ */}
        {gameState === 'flying' && !hasBet && (
          <div className="multiplier-info">
            <span className="multiplier-label">‚ö†Ô∏è –í—ã –Ω–∞–±–ª—é–¥–∞–µ—Ç–µ:</span>
            <span className="multiplier-value">–°—Ç–∞–≤–∫–∞ –Ω–µ —Ä–∞–∑–º–µ—â–µ–Ω–∞</span>
          </div>
        )}
        
        {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–∏ –∏–≥—Ä—ã –ø–æ—Å–ª–µ –∫–µ—à–∞—É—Ç–∞ */}
        {gameState === 'flying' && cashedOut && (
          <div className="multiplier-info">
            <span className="multiplier-label">üëÄ –ù–∞–±–ª—é–¥–∞–µ—Ç–µ –∑–∞ –¥—Ä—É–≥–∏–º–∏:</span>
            <span className="multiplier-value">–ì—Ä–∞—Ñ–∏–∫ –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç —Ä–∞—Å—Ç–∏</span>
          </div>
        )}
      </div>
      
      {/* –ù–û–í–û–ï: –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä —Å–∫–æ—Ä–æ—Å—Ç–∏ —Ä–æ—Å—Ç–∞ —Å —É–ª—É—á—à–µ–Ω–∏—è–º–∏ */}
      {gameState === 'flying' && (
        <div className="game-state-info">
          <div className="state-indicator">
            <span className="state-label">‚ö° –°–∫–æ—Ä–æ—Å—Ç—å —Ä–æ—Å—Ç–∞:</span>
            <span className="state-value flying">
              {currentMultiplier < 2 ? 'üêå –ú–µ–¥–ª–µ–Ω–Ω–æ (–±–µ–∑–æ–ø–∞—Å–Ω–æ)' : 
               currentMultiplier < 5 ? 'üèÉ –£—Å–∫–æ—Ä—è–µ—Ç—Å—è (–æ—Å—Ç–æ—Ä–æ–∂–Ω–æ)' : 
               currentMultiplier < 10 ? 'üöÄ –ë—ã—Å—Ç—Ä–æ (–æ–ø–∞—Å–Ω–æ)' : '‚ö° –û—á–µ–Ω—å –±—ã—Å—Ç—Ä–æ (–†–ò–°–ö!)'}
            </span>
          </div>
        </div>
      )}
      
      {/* –ù–û–í–û–ï: –ü–æ–¥—Å–∫–∞–∑–∫–∏ –¥–ª—è –Ω–æ–≤—ã—Ö –∏–≥—Ä–æ–∫–æ–≤ */}
      {gameState === 'waiting' && !hasBet && (
        <div className="game-state-info">
          <div className="state-indicator">
            <span className="state-label">üí° –ü–æ–¥—Å–∫–∞–∑–∫–∞:</span>
            <span className="state-value">
              –ò–≥—Ä–∞ –∑–∞–º–µ–¥–ª–µ–Ω–∞ –¥–ª—è –ª—É—á—à–µ–≥–æ –æ–ø—ã—Ç–∞. –ú–Ω–æ–∂–∏—Ç–µ–ª—å —Ä–∞—Å—Ç–µ—Ç –ø–ª–∞–≤–Ω–µ–µ!
            </span>
          </div>
        </div>
      )}
    </div>
  );
};

export default CrashControls;

// analyze_commission_logic.js - –ê–Ω–∞–ª–∏–∑ –ª–æ–≥–∏–∫–∏ –∫–æ–º–∏—Å—Å–∏–π
require('dotenv').config();
const mongoose = require('mongoose');

const connectDB = async () => {
  try {
    await mongoose.connect(process.env.MONGODB_URI);
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ MongoDB:', error);
    process.exit(1);
  }
};

const { Transaction, Deposit, Withdrawal, User, CasinoFinance } = require('./src/models');

async function analyzeCommissionLogic() {
  try {
    console.log('üí∞ –ê–ù–ê–õ–ò–ó –õ–û–ì–ò–ö–ò –ö–û–ú–ò–°–°–ò–ô\n');

    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–π operationalBalance
    const finance = await CasinoFinance.findOne();
    if (finance) {
      console.log('üè¶ –¢–ï–ö–£–©–ò–ï –§–ò–ù–ê–ù–°–´ –ö–ê–ó–ò–ù–û:');
      console.log(`  –û–±—â–∏–π –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${finance.totalUserBalance?.toFixed(2) || 0} USDT`);
      console.log(`  –û–ø–µ—Ä–∞—Ç–∏–≤–Ω—ã–π –±–∞–ª–∞–Ω—Å: ${finance.operationalBalance?.toFixed(2) || 0} USDT`);
      console.log(`  –ö–æ–º–∏—Å—Å–∏–∏ CryptoBot: ${finance.totalCryptoBotFees?.toFixed(2) || 0} USDT`);
      console.log(`  –í—Å–µ–≥–æ —Å—Ç–∞–≤–æ–∫: ${finance.totalBets?.toFixed(2) || 0} USDT`);
      console.log(`  –í—Å–µ–≥–æ –≤—ã–∏–≥—Ä—ã—à–µ–π: ${finance.totalWins?.toFixed(2) || 0} USDT`);
      console.log(`  –ü—Ä–æ—Ñ–∏—Ç –æ—Ç –∏–≥—Ä: ${((finance.totalBets || 0) - (finance.totalWins || 0)).toFixed(2)} USDT\n`);
    }

    // 2. –°—á–∏—Ç–∞–µ–º —Ä–µ–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    const users = await User.find({ isBlocked: false });
    const realUserBalance = users.reduce((sum, user) => {
      const balance = user.balance || 0;
      const referralBalance = user.referralStats?.referralBalance || 0;
      return sum + balance + referralBalance;
    }, 0);

    console.log(`üí∏ –†–ï–ê–õ–¨–ù–´–ô –ë–ê–õ–ê–ù–° –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô: ${realUserBalance.toFixed(2)} USDT\n`);

    // 3. –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º CryptoBot –æ–ø–µ—Ä–∞—Ü–∏–∏
    console.log('üí≥ –ê–ù–ê–õ–ò–ó CRYPTOBOT –û–ü–ï–†–ê–¶–ò–ô:');
    
    // –î–µ–ø–æ–∑–∏—Ç—ã
    const deposits = await Deposit.find({ status: 'paid' });
    let depositsGross = 0, depositsNet = 0, depositFees = 0;
    
    deposits.forEach(deposit => {
      const gross = deposit.amount || 0;
      const fee = deposit.cryptoBotData?.fee || 0;
      const net = deposit.cryptoBotData?.netAmount || gross;
      
      depositsGross += gross;
      depositsNet += net;
      depositFees += fee;
    });

    console.log(`  –î–µ–ø–æ–∑–∏—Ç—ã (–≤–∞–ª–æ–≤—ã–µ): ${depositsGross.toFixed(2)} USDT`);
    console.log(`  –î–µ–ø–æ–∑–∏—Ç—ã (—á–∏—Å—Ç—ã–µ): ${depositsNet.toFixed(2)} USDT`);
    console.log(`  –ö–æ–º–∏—Å—Å–∏–∏ –¥–µ–ø–æ–∑–∏—Ç–æ–≤: ${depositFees.toFixed(2)} USDT`);

    // –í—ã–≤–æ–¥—ã
    const withdrawals = await Withdrawal.find({ status: 'completed' });
    let withdrawalsGross = 0, withdrawalsNet = 0, withdrawalFees = 0;
    
    withdrawals.forEach(withdrawal => {
      const gross = withdrawal.amount || 0;
      const fee = withdrawal.cryptoBotData?.fee || 0;
      const net = withdrawal.cryptoBotData?.netAmount || gross;
      
      withdrawalsGross += gross;
      withdrawalsNet += net;
      withdrawalFees += fee;
    });

    console.log(`  –í—ã–≤–æ–¥—ã (–≤–∞–ª–æ–≤—ã–µ): ${withdrawalsGross.toFixed(2)} USDT`);
    console.log(`  –í—ã–≤–æ–¥—ã (—á–∏—Å—Ç—ã–µ): ${withdrawalsNet.toFixed(2)} USDT`);
    console.log(`  –ö–æ–º–∏—Å—Å–∏–∏ –≤—ã–≤–æ–¥–æ–≤: ${withdrawalFees.toFixed(2)} USDT`);

    const totalCryptoBotFees = depositFees + withdrawalFees;
    console.log(`  –í–°–ï–ì–û –∫–æ–º–∏—Å—Å–∏–π CryptoBot: ${totalCryptoBotFees.toFixed(2)} USDT\n`);

    // 4. –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º —á—Ç–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –Ω–∞ CryptoBot
    const expectedCryptoBotBalance = depositsGross - withdrawalsNet;
    console.log('üßÆ –û–ñ–ò–î–ê–ï–ú–´–ô –ë–ê–õ–ê–ù–° CRYPTOBOT:');
    console.log(`  –ü–æ—Å—Ç—É–ø–∏–ª–æ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${depositsGross.toFixed(2)} USDT`);
    console.log(`  –í—ã–≤–µ–¥–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º: ${withdrawalsNet.toFixed(2)} USDT`);
    console.log(`  –û–∂–∏–¥–∞–µ–º—ã–π –æ—Å—Ç–∞—Ç–æ–∫: ${expectedCryptoBotBalance.toFixed(2)} USDT`);
    console.log(`  –§–∞–∫—Ç–∏—á–µ—Å–∫–∏–π –±–∞–ª–∞–Ω—Å: 3.28 USDT`);
    console.log(`  –†–∞—Å—Ö–æ–∂–¥–µ–Ω–∏–µ: ${(expectedCryptoBotBalance - 3.28).toFixed(2)} USDT\n`);

    // 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏–∫—É operationalBalance
    console.log('üîß –ü–†–ê–í–ò–õ–¨–ù–´–ô –†–ê–°–ß–ï–¢ –û–ü–ï–†–ê–¢–ò–í–ù–û–ì–û –ë–ê–õ–ê–ù–°–ê:');
    
    // –û–ø–µ—Ä–∞—Ç–∏–≤–Ω—ã–π –±–∞–ª–∞–Ω—Å = –ø—Ä–∏–±—ã–ª—å –æ—Ç –∏–≥—Ä + –∫–æ–º–∏—Å—Å–∏–∏ —Å –¥—É—ç–ª–µ–π - –ø—Ä–æ–º–æ–∫–æ–¥—ã
    // –ù–ï –≤–∫–ª—é—á–∞–µ–º –∫–æ–º–∏—Å—Å–∏–∏ CryptoBot (—ç—Ç–æ —Ä–∞—Å—Ö–æ–¥—ã –≤–Ω–µ—à–Ω–µ–≥–æ —Å–µ—Ä–≤–∏—Å–∞)
    const gameProfit = (finance?.totalBets || 0) - (finance?.totalWins || 0);
    const duelCommissions = finance?.commissionBreakdown?.duels || 0;
    const promocodeExpenses = finance?.totalPromocodeExpenses || 0;
    
    const correctOperationalBalance = gameProfit + duelCommissions - promocodeExpenses;
    
    console.log(`  –ü—Ä–∏–±—ã–ª—å –æ—Ç –∏–≥—Ä: ${gameProfit.toFixed(2)} USDT`);
    console.log(`  –ö–æ–º–∏—Å—Å–∏–∏ —Å –¥—É—ç–ª–µ–π: ${duelCommissions.toFixed(2)} USDT`);
    console.log(`  –†–∞—Å—Ö–æ–¥—ã –Ω–∞ –ø—Ä–æ–º–æ–∫–æ–¥—ã: ${promocodeExpenses.toFixed(2)} USDT`);
    console.log(`  –ü–†–ê–í–ò–õ–¨–ù–´–ô –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω—ã–π –±–∞–ª–∞–Ω—Å: ${correctOperationalBalance.toFixed(2)} USDT`);
    console.log(`  –¢–ï–ö–£–©–ò–ô –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω—ã–π –±–∞–ª–∞–Ω—Å: ${(finance?.operationalBalance || 0).toFixed(2)} USDT`);
    console.log(`  –†–∞–∑–Ω–∏—Ü–∞: ${(correctOperationalBalance - (finance?.operationalBalance || 0)).toFixed(2)} USDT\n`);

    // 6. –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞
    console.log('üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ü–†–û–ë–õ–ï–ú:');
    
    if (Math.abs(expectedCryptoBotBalance - 3.28) > 0.1) {
      console.log(`  ‚ùå –†–∞—Å—Ö–æ–∂–¥–µ–Ω–∏–µ —Å CryptoBot: ${(expectedCryptoBotBalance - 3.28).toFixed(2)} USDT`);
    }
    
    if (Math.abs(correctOperationalBalance - (finance?.operationalBalance || 0)) > 0.1) {
      console.log(`  ‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π operationalBalance: —Ä–∞–∑–Ω–∏—Ü–∞ ${(correctOperationalBalance - (finance?.operationalBalance || 0)).toFixed(2)} USDT`);
    }
    
    if (Math.abs(realUserBalance - (finance?.totalUserBalance || 0)) > 0.1) {
      console.log(`  ‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π totalUserBalance: —Ä–∞–∑–Ω–∏—Ü–∞ ${(realUserBalance - (finance?.totalUserBalance || 0)).toFixed(2)} USDT`);
    }

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ:', error);
  }
}

async function main() {
  await connectDB();
  await analyzeCommissionLogic();
  await mongoose.disconnect();
  console.log('üîå –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –ë–î –∑–∞–∫—Ä—ã—Ç–æ');
  process.exit(0);
}

main().catch(error => {
  console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
  process.exit(1);
});
// bot/src/commands/promocode.command.js
const { sendMessage } = require('../services/notification.service');
const { activatePromoCode } = require('../services/api.service');

async function promocodeCommand(ctx) {
  try {
    const userId = ctx.from.id;
    const args = ctx.message.text.split(' ');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–µ—Ä–µ–¥–∞–Ω –ª–∏ –ø—Ä–æ–º–æ–∫–æ–¥
    if (args.length < 2) {
      return ctx.reply(
        'üéÅ <b>–ê–∫—Ç–∏–≤–∞—Ü–∏—è –ø—Ä–æ–º–æ–∫–æ–¥–∞</b>\n\n' +
        '–î–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ø—Ä–æ–º–æ–∫–æ–¥–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É:\n' +
        '<code>/promocode –í–ê–®_–ü–†–û–ú–û–ö–û–î</code>\n\n' +
        '–ü—Ä–∏–º–µ—Ä: <code>/promocode WELCOME2024</code>\n\n' +
        'üí° –ü—Ä–æ–º–æ–∫–æ–¥—ã –¥–∞—é—Ç —Ä–∞–∑–ª–∏—á–Ω—ã–µ –±–æ–Ω—É—Å—ã:\n' +
        '‚Ä¢ üí∞ –ë–æ–Ω—É—Å –Ω–∞ –±–∞–ª–∞–Ω—Å\n' +
        '‚Ä¢ üéÆ –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –∏–≥—Ä—ã\n' +
        '‚Ä¢ üìà –ë–æ–Ω—É—Å –∫ –¥–µ–ø–æ–∑–∏—Ç—É\n' +
        '‚Ä¢ üèÜ VIP —Å—Ç–∞—Ç—É—Å',
        { parse_mode: 'HTML' }
      );
    }
    
    const promoCode = args[1].toUpperCase();
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø–æ–ø—ã—Ç–∫–µ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏
    const waitMessage = await ctx.reply(
      `üîÑ –ê–∫—Ç–∏–≤–∏—Ä—É—é –ø—Ä–æ–º–æ–∫–æ–¥ <code>${promoCode}</code>...`,
      { parse_mode: 'HTML' }
    );
    
    try {
      // –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –ø—Ä–æ–º–æ–∫–æ–¥ —á–µ—Ä–µ–∑ API
      const result = await activatePromoCode(userId, promoCode);
      
      if (result.success) {
        const { bonus, transactionId } = result.data;
        
        // –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è
        await ctx.deleteMessage(waitMessage.message_id);
        
        // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —É—Å–ø–µ—à–Ω–æ–π –∞–∫—Ç–∏–≤–∞—Ü–∏–∏
        let successMessage = 'üéâ <b>–ü—Ä–æ–º–æ–∫–æ–¥ —É—Å–ø–µ—à–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!</b>\n\n';
        successMessage += `üéÅ –ö–æ–¥: <code>${promoCode}</code>\n`;
        
        // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ–Ω—É—Å–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞
        switch (bonus.type) {
          case 'balance':
            successMessage += `üí∞ –ë–æ–Ω—É—Å: +${bonus.value} USDT –Ω–∞ –±–∞–ª–∞–Ω—Å\n`;
            break;
          case 'freespins':
            successMessage += `üéÆ –ë–æ–Ω—É—Å: ${bonus.value} –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö –∏–≥—Ä\n`;
            break;
          case 'deposit':
            successMessage += `üìà –ë–æ–Ω—É—Å: +${bonus.value}% –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –¥–µ–ø–æ–∑–∏—Ç—É\n`;
            break;
          case 'vip':
            successMessage += `üèÜ –ë–æ–Ω—É—Å: VIP —Å—Ç–∞—Ç—É—Å –Ω–∞ ${bonus.value} –¥–Ω–µ–π\n`;
            break;
        }
        
        if (bonus.description) {
          successMessage += `üìù ${bonus.description}\n`;
        }
        
        successMessage += `\nüîó ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: <code>${transactionId}</code>\n\n`;
        successMessage += '‚ú® –ë–æ–Ω—É—Å —É–∂–µ –ø—Ä–∏–º–µ–Ω–µ–Ω –∫ –≤–∞—à–µ–º—É –∞–∫–∫–∞—É–Ω—Ç—É!';
        
        await ctx.reply(successMessage, { parse_mode: 'HTML' });
        
      } else {
        // –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è
        await ctx.deleteMessage(waitMessage.message_id);
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
        let errorMessage = '‚ùå <b>–ù–µ —É–¥–∞–ª–æ—Å—å –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥</b>\n\n';
        errorMessage += `üéÅ –ö–æ–¥: <code>${promoCode}</code>\n`;
        errorMessage += `üìù –ü—Ä–∏—á–∏–Ω–∞: ${result.message}\n\n`;
        
        // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–¥—Å–∫–∞–∑–∫–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –æ—à–∏–±–∫–∏
        if (result.message.includes('–Ω–µ –Ω–∞–π–¥–µ–Ω')) {
          errorMessage += 'üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –Ω–∞–ø–∏—Å–∞–Ω–∏—è –ø—Ä–æ–º–æ–∫–æ–¥–∞';
        } else if (result.message.includes('—É–∂–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω')) {
          errorMessage += 'üí° –ö–∞–∂–¥—ã–π –ø—Ä–æ–º–æ–∫–æ–¥ –º–æ–∂–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑';
        } else if (result.message.includes('–∏—Å—Ç–µ–∫')) {
          errorMessage += 'üí° –°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è –ø—Ä–æ–º–æ–∫–æ–¥–∞ –∑–∞–∫–æ–Ω—á–∏–ª—Å—è';
        } else if (result.message.includes('–ø—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç')) {
          errorMessage += 'üí° –î–æ—Å—Ç–∏–≥–Ω—É—Ç –ª–∏–º–∏—Ç –∞–∫—Ç–∏–≤–∞—Ü–∏–π –¥–ª—è —ç—Ç–æ–≥–æ –ø—Ä–æ–º–æ–∫–æ–¥–∞';
        }
        
        await ctx.reply(errorMessage, { parse_mode: 'HTML' });
      }
      
    } catch (apiError) {
      console.error('–û—à–∏–±–∫–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ø—Ä–æ–º–æ–∫–æ–¥–∞ —á–µ—Ä–µ–∑ API:', apiError);
      
      // –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è
      await ctx.deleteMessage(waitMessage.message_id);
      
      await ctx.reply(
        '‚ö†Ô∏è <b>–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞</b>\n\n' +
        '–ù–µ —É–¥–∞–ª–æ—Å—å –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥ –∏–∑-–∑–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –æ—à–∏–±–∫–∏.\n' +
        '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç.\n\n' +
        '–ï—Å–ª–∏ –ø—Ä–æ–±–ª–µ–º–∞ –ø–æ–≤—Ç–æ—Ä—è–µ—Ç—Å—è, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É.',
        { parse_mode: 'HTML' }
      );
    }
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ promocode:', error);
    
    await ctx.reply(
      '‚ùå <b>–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞</b>\n\n' +
      '–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –∫–æ–º–∞–Ω–¥—É –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ø—Ä–æ–º–æ–∫–æ–¥–∞.\n' +
      '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É.',
      { parse_mode: 'HTML' }
    );
  }
}

module.exports = promocodeCommand;
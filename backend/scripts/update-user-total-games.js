// backend/scripts/update-user-total-games.js
// –°–∫—Ä–∏–ø—Ç –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–ª—è totalGames —É –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π

const mongoose = require('mongoose');
require('dotenv').config();

// –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
const connectDB = async () => {
  try {
    await mongoose.connect(process.env.MONGODB_URI || 'mongodb://localhost:27017/greenlight');
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ MongoDB:', error);
    process.exit(1);
  }
};

// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥–µ–ª–∏
const User = require('../src/models/user.model');
const Game = require('../src/models/game.model');

async function updateUserTotalGames() {
  try {
    console.log('üîÑ –ù–∞—á–∏–Ω–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ totalGames –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...');
    
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    const users = await User.find({}).select('_id totalGames');
    console.log(`üìä –ù–∞–π–¥–µ–Ω–æ ${users.length} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π`);
    
    let updated = 0;
    let skipped = 0;
    
    for (const user of users) {
      // –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–≥—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      const actualTotalGames = await Game.countDocuments({ user: user._id });
      
      if (user.totalGames !== actualTotalGames) {
        await User.updateOne(
          { _id: user._id },
          { $set: { totalGames: actualTotalGames } }
        );
        console.log(`‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${user._id}: ${user.totalGames} ‚Üí ${actualTotalGames} –∏–≥—Ä`);
        updated++;
      } else {
        skipped++;
      }
    }
    
    console.log(`\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:`);
    console.log(`‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ: ${updated} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π`);
    console.log(`‚è≠Ô∏è –ü—Ä–æ–ø—É—â–µ–Ω–æ: ${skipped} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π`);
    console.log(`üìà –í—Å–µ–≥–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: ${users.length} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π`);
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ totalGames:', error);
  }
}

async function main() {
  await connectDB();
  await updateUserTotalGames();
  
  console.log('üèÅ –°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à–µ–Ω');
  process.exit(0);
}

main().catch(error => {
  console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
  process.exit(1);
});
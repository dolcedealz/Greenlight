// frontend/src/components/events/EventDetails.js
import React, { useState, useEffect } from 'react';
import '../../styles/EventDetails.css';
const EventDetails = ({ event, onOutcomeSelect, formatTimeLeft }) => {
  const [timeLeft, setTimeLeft] = useState('');
  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –∫–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É
  useEffect(() => {
    const updateTime = () => {
      setTimeLeft(formatTimeLeft(event.bettingEndsAt));
    };
    updateTime();
    const interval = setInterval(updateTime, 1000);
    return () => clearInterval(interval);
  }, [event.bettingEndsAt, formatTimeLeft]);
  // –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ—Ü–µ–Ω—Ç–∞ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Å—Ç–∞–≤–æ–∫
  const getOutcomePercentage = (outcome) => {
    if (event.totalPool === 0) return 0;
    return ((outcome.totalBets / event.totalPool) * 100).toFixed(1);
  };
  // –ü–æ–ª—É—á–µ–Ω–∏–µ —Ü–≤–µ—Ç–∞ –¥–ª—è –ø–æ–ª–æ—Å—ã –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤
  const getPercentageBarColor = (percentage) => {
    if (percentage > 60) return '#ff3b30';
    if (percentage > 40) return '#ff9500';
    return '#0ba84a';
  };
  // –†–µ–Ω–¥–µ—Ä —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Å–æ–±—ã—Ç–∏—è
  const renderEventStats = () => (
    <div className="event-stats">
      <div className="stat-item">
        <span className="stat-label">–û–±—â–∏–π –ø—É–ª</span>
        <span className="stat-value">{event.totalPool.toFixed(2)} USDT</span>
      </div>
      <div className="stat-item">
        <span className="stat-label">–í—Å–µ–≥–æ —Å—Ç–∞–≤–æ–∫</span>
        <span className="stat-value">
          {event.outcomes.reduce((sum, outcome) => sum + outcome.betsCount, 0)}
        </span>
      </div>
      <div className="stat-item">
        <span className="stat-label">–ú–∏–Ω. —Å—Ç–∞–≤–∫–∞</span>
        <span className="stat-value">{event.minBet} USDT</span>
      </div>
      <div className="stat-item">
        <span className="stat-label">–ú–∞–∫—Å. —Å—Ç–∞–≤–∫–∞</span>
        <span className="stat-value">{event.maxBet} USDT</span>
      </div>
    </div>
  );
  // –†–µ–Ω–¥–µ—Ä –≤—Ä–µ–º–µ–Ω–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
  const renderTimeInfo = () => (
    <div className="time-info">
      <div className="time-item">
        <span className="time-label">–ù–∞—á–∞–ª–æ —Å–æ–±—ã—Ç–∏—è:</span>
        <span className="time-value">
          {new Date(event.startTime).toLocaleString('ru-RU')}
        </span>
      </div>
      <div className="time-item">
        <span className="time-label">–û–∫–æ–Ω—á–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è:</span>
        <span className="time-value">
          {new Date(event.endTime).toLocaleString('ru-RU')}
        </span>
      </div>
      <div className="time-item">
        <span className="time-label">–ü—Ä–∏–µ–º —Å—Ç–∞–≤–æ–∫ –¥–æ:</span>
        <span className="time-value">
          {new Date(event.bettingEndsAt).toLocaleString('ru-RU')}
        </span>
      </div>
      <div className="time-item countdown">
        <span className="time-label">–û—Å—Ç–∞–ª–æ—Å—å –≤—Ä–µ–º–µ–Ω–∏:</span>
        <span className="time-value countdown-value">{timeLeft}</span>
      </div>
    </div>
  );
  return (
    <div className="event-details">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å–æ–±—ã—Ç–∏—è */}
      <div className="event-details-header">
        <h2 className="event-title">{event.title}</h2>
        <div className={`event-status status-${event.status}`}>
          {event.status === 'active' ? '–ê–∫—Ç–∏–≤–Ω–æ' : '–ù–µ–∞–∫—Ç–∏–≤–Ω–æ'}
        </div>
      </div>
      {/* –û–ø–∏—Å–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è */}
      <div className="event-description">
        <p>{event.description}</p>
      </div>
      {/* –í—Ä–µ–º–µ–Ω–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
      <div className="event-section">
        <h3 className="section-title">‚è∞ –í—Ä–µ–º–µ–Ω–Ω—ã–µ —Ä–∞–º–∫–∏</h3>
        {renderTimeInfo()}
      </div>
      {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–æ–±—ã—Ç–∏—è */}
      <div className="event-section">
        <h3 className="section-title">üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</h3>
        {renderEventStats()}
      </div>
      {/* –ò—Å—Ö–æ–¥—ã –¥–ª—è —Å—Ç–∞–≤–æ–∫ */}
      <div className="event-section">
        <h3 className="section-title">üéØ –°–¥–µ–ª–∞—Ç—å —Å—Ç–∞–≤–∫—É</h3>
        <div className="outcomes-betting">
          {event.outcomes.map((outcome) => {
            const odds = event.currentOdds[outcome.id];
            const percentage = getOutcomePercentage(outcome);
            const barColor = getPercentageBarColor(percentage);
            return (
              <div key={outcome.id} className="outcome-betting-item">
                <div className="outcome-header">
                  <div className="outcome-name">{outcome.name}</div>
                  <div className="outcome-odds">√ó{odds.toFixed(2)}</div>
                </div>
                <div className="outcome-info">
                  <div className="outcome-bets-info">
                    <span>{outcome.betsCount} —Å—Ç–∞–≤–æ–∫</span>
                    <span>{outcome.totalBets.toFixed(2)} USDT</span>
                  </div>
                  <div className="outcome-percentage">{percentage}%</div>
                </div>
                {/* –í–∏–∑—É–∞–ª—å–Ω–∞—è –ø–æ–ª–æ—Å–∞ –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤ */}
                <div className="percentage-bar">
                  <div 
                    className="percentage-fill"
                    style={{ 
                      width: `${percentage}%`,
                      backgroundColor: barColor
                    }}
                  />
                </div>
                {/* –ö–Ω–æ–ø–∫–∞ —Å—Ç–∞–≤–∫–∏ */}
                <button 
                  className="bet-button"
                  onClick={() => onOutcomeSelect(event, outcome.id)}
                  disabled={event.status !== 'active' || timeLeft === '–ó–∞–≤–µ—Ä—à–µ–Ω–æ'}
                >
                  {event.status !== 'active' ? '–ù–µ–∞–∫—Ç–∏–≤–Ω–æ' : 
                   timeLeft === '–ó–∞–≤–µ—Ä—à–µ–Ω–æ' ? '–í—Ä–µ–º—è –∏—Å—Ç–µ–∫–ª–æ' : 
                   '–ü–æ—Å—Ç–∞–≤–∏—Ç—å'}
                </button>
              </div>
            );
          })}
        </div>
      </div>
      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–º–∏—Å—Å–∏–∏ */}
      <div className="event-section">
        <h3 className="section-title">‚ÑπÔ∏è –í–∞–∂–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h3>
        <div className="event-info">
          <div className="info-item">
            <span className="info-label">–ö–æ–º–∏—Å—Å–∏—è –∫–∞–∑–∏–Ω–æ:</span>
            <span className="info-value">{event.houseEdge}%</span>
          </div>
          <div className="info-item">
            <span className="info-label">–ü—Ä–∏–Ω—Ü–∏–ø —Ä–∞–±–æ—Ç—ã:</span>
            <span className="info-value">
              –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã –∑–∞–≤–∏—Å—è—Ç –æ—Ç —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Å—Ç–∞–≤–æ–∫
            </span>
          </div>
          <div className="info-item">
            <span className="info-label">–í—ã–ø–ª–∞—Ç—ã:</span>
            <span className="info-value">
              –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Å–æ–±—ã—Ç–∏—è
            </span>
          </div>
        </div>
      </div>
      {/* –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ */}
      {timeLeft === '–ó–∞–≤–µ—Ä—à–µ–Ω–æ' && (
        <div className="event-warning">
          ‚ö†Ô∏è –í—Ä–µ–º—è –¥–ª—è —Ä–∞–∑–º–µ—â–µ–Ω–∏—è —Å—Ç–∞–≤–æ–∫ –∏—Å—Ç–µ–∫–ª–æ
        </div>
      )}
    </div>
  );
};
export default EventDetails;
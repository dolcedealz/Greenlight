// frontend/src/screens/ReferralScreen.js
import React, { useState, useEffect } from 'react';
import { Header } from '../components/layout';
import { ReferralsList, EarningsHistory, PayoutModal } from '../components/referral';
import { referralApi } from '../services/api';
import { showNotification, showConfirmation } from '../utils/telegram';
import useTactileFeedback from '../hooks/useTactileFeedback';
import '../styles/ReferralScreen.css';

const ReferralScreen = ({ balance, onBalanceUpdate }) => {
  const [loading, setLoading] = useState(true);
  const [partnerData, setPartnerData] = useState(null);
  const [activeTab, setActiveTab] = useState('overview');
  const [showPayoutModal, setShowPayoutModal] = useState(false);
  const [refreshing, setRefreshing] = useState(false);

  const { 
    buttonPressFeedback, 
    selectionChanged, 
    successNotification,
    errorNotification 
  } = useTactileFeedback();

  // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
  useEffect(() => {
    fetchPartnerData();
  }, []);

  // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–∞—Ä—Ç–Ω–µ—Ä–∞
  const fetchPartnerData = async () => {
    try {
      setLoading(true);
      const response = await referralApi.getPartnerStats();
      
      if (response.data.success) {
        setPartnerData(response.data.data);
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –ø–∞—Ä—Ç–Ω–µ—Ä–∞:', error);
      showNotification('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö');
    } finally {
      setLoading(false);
    }
  };

  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
  const handleRefresh = async () => {
    if (refreshing) return;
    
    buttonPressFeedback();
    setRefreshing(true);
    await fetchPartnerData();
    setRefreshing(false);
  };

  // –°–º–µ–Ω–∞ –≤–∫–ª–∞–¥–∫–∏
  const handleTabChange = (tab) => {
    selectionChanged();
    setActiveTab(tab);
  };

  // –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–∏
  const copyReferralLink = () => {
    if (!partnerData) return;
    
    buttonPressFeedback();
    const link = `https://t.me/Greenlightgames_bot?start=${partnerData.partner.referralCode}`;
    
    navigator.clipboard.writeText(link)
      .then(() => {
        successNotification();
        showNotification('–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞!');
      })
      .catch(() => {
        errorNotification();
        showNotification('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Å—Å—ã–ª–∫—É');
      });
  };

  // –ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Å—Å—ã–ª–∫–æ–π
  const shareReferralLink = () => {
    if (!partnerData) return;
    
    buttonPressFeedback();
    const link = `https://t.me/Greenlightgames_bot?start=${partnerData.partner.referralCode}`;
    const text = `üé∞ –ò–≥—Ä–∞–π –≤ Greenlight Casino –∏ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π!\n\nüí∞ –ë–æ–Ω—É—Å –∑–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é\nüéÆ –õ—É—á—à–∏–µ –∏–≥—Ä—ã\nüí∏ –ë—ã—Å—Ç—Ä—ã–µ –≤—ã–ø–ª–∞—Ç—ã\n\n–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Å—è –ø–æ –º–æ–µ–π —Å—Å—ã–ª–∫–µ:`;
    
    if (window.Telegram?.WebApp) {
      window.Telegram.WebApp.openTelegramLink(
        `https://t.me/share/url?url=${encodeURIComponent(link)}&text=${encodeURIComponent(text)}`
      );
    }
  };

  // –°–æ–∑–¥–∞–Ω–∏–µ –≤—ã–ø–ª–∞—Ç—ã
  const handleCreatePayout = async (amount) => {
    try {
      buttonPressFeedback();
      
      const response = await referralApi.createPayout(amount);
      
      if (response.data.success) {
        successNotification();
        showNotification(`–í—ã–ø–ª–∞—Ç–∞ ${amount} USDT –ø–µ—Ä–µ–≤–µ–¥–µ–Ω–∞ –Ω–∞ –æ—Å–Ω–æ–≤–Ω–æ–π –±–∞–ª–∞–Ω—Å!`);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ
        await fetchPartnerData();
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –±–∞–ª–∞–Ω—Å
        if (onBalanceUpdate) {
          onBalanceUpdate();
        }
        
        setShowPayoutModal(false);
      }
    } catch (error) {
      errorNotification();
      showNotification(error.response?.data?.message || '–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –≤—ã–ø–ª–∞—Ç—ã');
    }
  };

  // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É—Ä–æ–≤–Ω—è
  const getLevelDisplay = (level) => {
    const levels = {
      bronze: { name: '–ë—Ä–æ–Ω–∑–∞', icon: 'ü•â', color: '#CD7F32' },
      silver: { name: '–°–µ—Ä–µ–±—Ä–æ', icon: 'ü•à', color: '#C0C0C0' },
      gold: { name: '–ó–æ–ª–æ—Ç–æ', icon: 'ü•á', color: '#FFD700' },
      platinum: { name: '–ü–ª–∞—Ç–∏–Ω–∞', icon: 'üíé', color: '#E5E4E2' },
      vip: { name: 'VIP', icon: 'üåü', color: '#9400D3' }
    };
    
    return levels[level] || { name: level, icon: 'üéØ', color: '#0ba84a' };
  };

  // –†–µ–Ω–¥–µ—Ä –∑–∞–≥–æ–ª–æ–≤–∫–∞
  const renderHeader = () => (
    <div className="referral-header">
      <h1 className="referral-title">üë• –ü–∞—Ä—Ç–Ω–µ—Ä—Å–∫–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞</h1>
      <button 
        className={`refresh-button ${refreshing ? 'refreshing' : ''}`}
        onClick={handleRefresh}
        disabled={refreshing}
      >
        üîÑ
      </button>
    </div>
  );

  // –†–µ–Ω–¥–µ—Ä —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
  const renderOverview = () => {
    if (!partnerData) return null;
    
    const levelInfo = getLevelDisplay(partnerData.partner.level);
    const progress = partnerData.partner.progress;
    
    return (
      <div className="referral-overview">
        {/* –ö–∞—Ä—Ç–æ—á–∫–∞ —É—Ä–æ–≤–Ω—è */}
        <div className="level-card" style={{ borderColor: levelInfo.color }}>
          <div className="level-header">
            <div className="level-icon">{levelInfo.icon}</div>
            <div className="level-info">
              <h3>{levelInfo.name}</h3>
              <p className="commission-rate">{partnerData.stats.commissionPercent}% –∫–æ–º–∏—Å—Å–∏—è</p>
            </div>
          </div>
          
          {progress.nextLevel && (
            <div className="level-progress">
              <div className="progress-info">
                <span>–î–æ {getLevelDisplay(progress.nextLevel).name}</span>
                <span>{progress.current}/{progress.current + progress.needed} –∞–∫—Ç–∏–≤–Ω—ã—Ö</span>
              </div>
              <div className="progress-bar">
                <div 
                  className="progress-fill" 
                  style={{ 
                    width: `${progress.progress}%`,
                    backgroundColor: levelInfo.color 
                  }}
                />
              </div>
            </div>
          )}
        </div>

        {/* –ë–∞–ª–∞–Ω—Å */}
        <div className="referral-balance-card">
          <div className="balance-header">
            <h3>üí∞ –†–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å</h3>
            <button 
              className="payout-button"
              onClick={() => setShowPayoutModal(true)}
              disabled={partnerData.stats.referralBalance < 10}
            >
              –í—ã–≤–µ—Å—Ç–∏
            </button>
          </div>
          <div className="balance-amount">
            {partnerData.stats.referralBalance.toFixed(2)} USDT
          </div>
          <div className="balance-stats">
            <div className="stat-item">
              <span>–í—Å–µ–≥–æ –∑–∞—Ä–∞–±–æ—Ç–∞–Ω–æ</span>
              <span>{partnerData.stats.totalEarned.toFixed(2)} USDT</span>
            </div>
            <div className="stat-item">
              <span>–í—ã–≤–µ–¥–µ–Ω–æ</span>
              <span>{partnerData.stats.totalWithdrawn.toFixed(2)} USDT</span>
            </div>
          </div>
        </div>

        {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤ */}
        <div className="stats-grid">
          <div className="stat-card">
            <div className="stat-icon">üë•</div>
            <div className="stat-content">
              <div className="stat-value">{partnerData.stats.totalReferrals}</div>
              <div className="stat-label">–í—Å–µ–≥–æ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤</div>
            </div>
          </div>
          
          <div className="stat-card">
            <div className="stat-icon">üî•</div>
            <div className="stat-content">
              <div className="stat-value">{partnerData.stats.activeReferrals}</div>
              <div className="stat-label">–ê–∫—Ç–∏–≤–Ω—ã—Ö</div>
            </div>
          </div>
          
          <div className="stat-card">
            <div className="stat-icon">üíé</div>
            <div className="stat-content">
              <div className="stat-value">{partnerData.stats.referralsWithDeposits}</div>
              <div className="stat-label">–° –¥–µ–ø–æ–∑–∏—Ç–∞–º–∏</div>
            </div>
          </div>
          
          <div className="stat-card">
            <div className="stat-icon">üìà</div>
            <div className="stat-content">
              <div className="stat-value">
                {partnerData.stats.periodEarned 
                  ? `+${partnerData.stats.periodEarned.toFixed(2)}` 
                  : '0.00'
                } USDT
              </div>
              <div className="stat-label">–ó–∞ —Å–µ–≥–æ–¥–Ω—è</div>
            </div>
          </div>
        </div>

        {/* –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞ */}
        <div className="referral-link-card">
          <h3>üîó –í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞</h3>
          <div className="link-container">
            <input 
              type="text" 
              value={`https://t.me/Greenlightgames_bot?start=${partnerData.partner.referralCode}`}
              readOnly
            />
            <button onClick={copyReferralLink}>üìã</button>
          </div>
          <div className="link-actions">
            <button className="share-button" onClick={shareReferralLink}>
              üì§ –ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Å—Å—ã–ª–∫–æ–π
            </button>
          </div>
          <div className="referral-code">
            –í–∞—à –∫–æ–¥: <span>{partnerData.partner.referralCode}</span>
          </div>
        </div>

        {/* –ü—Ä–æ–º–æ-–º–∞—Ç–µ—Ä–∏–∞–ª—ã */}
        <div className="promo-section">
          <h3>üì¢ –ü—Ä–æ–º–æ-–º–∞—Ç–µ—Ä–∏–∞–ª—ã</h3>
          <div className="promo-text">
            <p>üé∞ <strong>Greenlight Casino</strong> - –ª—É—á—à–µ–µ –∫—Ä–∏–ø—Ç–æ-–∫–∞–∑–∏–Ω–æ –≤ Telegram!</p>
            <ul>
              <li>üí∞ –ë–æ–Ω—É—Å—ã –Ω–æ–≤—ã–º –∏–≥—Ä–æ–∫–∞–º</li>
              <li>üéÆ –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∏–≥—Ä—ã —Å RTP 95%</li>
              <li>üí∏ –ú–æ–º–µ–Ω—Ç–∞–ª—å–Ω—ã–µ –≤—ã–ø–ª–∞—Ç—ã –≤ USDT</li>
              <li>üî• –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–µ —Ç—É—Ä–Ω–∏—Ä—ã</li>
            </ul>
            <p>–ü—Ä–∏–≥–ª–∞—à–∞–π –¥—Ä—É–∑–µ–π –∏ –ø–æ–ª—É—á–∞–π <strong>{partnerData.stats.commissionPercent}%</strong> —Å –∏—Ö –ø—Ä–æ–∏–≥—Ä—ã—à–µ–π!</p>
          </div>
          <button className="copy-promo-button" onClick={() => {
            navigator.clipboard.writeText(
              `üé∞ Greenlight Casino - –ª—É—á—à–µ–µ –∫—Ä–∏–ø—Ç–æ-–∫–∞–∑–∏–Ω–æ –≤ Telegram!\n\n` +
              `üí∞ –ë–æ–Ω—É—Å—ã –Ω–æ–≤—ã–º –∏–≥—Ä–æ–∫–∞–º\n` +
              `üéÆ –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∏–≥—Ä—ã —Å RTP 95%\n` +
              `üí∏ –ú–æ–º–µ–Ω—Ç–∞–ª—å–Ω—ã–µ –≤—ã–ø–ª–∞—Ç—ã –≤ USDT\n` +
              `üî• –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–µ —Ç—É—Ä–Ω–∏—Ä—ã\n\n` +
              `–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Å—è –ø–æ –º–æ–µ–π —Å—Å—ã–ª–∫–µ:\n` +
              `https://t.me/Greenlightgames_bot?start=${partnerData.partner.referralCode}`
            );
            showNotification('–ü—Ä–æ–º–æ-—Ç–µ–∫—Å—Ç —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω!');
          }}>
            üìã –ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç
          </button>
        </div>
      </div>
    );
  };

  // –†–µ–Ω–¥–µ—Ä –≤–∫–ª–∞–¥–æ–∫
  const renderTabs = () => (
    <div className="referral-tabs">
      <button 
        className={`tab-button ${activeTab === 'overview' ? 'active' : ''}`}
        onClick={() => handleTabChange('overview')}
      >
        üìä –û–±–∑–æ—Ä
      </button>
      <button 
        className={`tab-button ${activeTab === 'referrals' ? 'active' : ''}`}
        onClick={() => handleTabChange('referrals')}
      >
        üë• –†–µ—Ñ–µ—Ä–∞–ª—ã
      </button>
      <button 
        className={`tab-button ${activeTab === 'earnings' ? 'active' : ''}`}
        onClick={() => handleTabChange('earnings')}
      >
        üí∞ –ù–∞—á–∏—Å–ª–µ–Ω–∏—è
      </button>
    </div>
  );

  // –†–µ–Ω–¥–µ—Ä –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –≤–∫–ª–∞–¥–∫–∏
  const renderTabContent = () => {
    switch (activeTab) {
      case 'overview':
        return renderOverview();
      case 'referrals':
        return <ReferralsList />;
      case 'earnings':
        return <EarningsHistory />;
      default:
        return null;
    }
  };

  if (loading) {
    return (
      <div className="referral-screen">
        <Header balance={balance} />
        {renderHeader()}
        <div className="referral-loading">
          <div className="loader"></div>
          <p>–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–∞—Ä—Ç–Ω–µ—Ä–∞...</p>
        </div>
      </div>
    );
  }

  return (
    <div className="referral-screen">
      <Header balance={balance} />
      {renderHeader()}
      {renderTabs()}
      
      <div className="referral-content">
        {renderTabContent()}
      </div>

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –≤—ã–ø–ª–∞—Ç—ã */}
      {showPayoutModal && partnerData && (
        <PayoutModal
          referralBalance={partnerData.stats.referralBalance}
          onConfirm={handleCreatePayout}
          onClose={() => setShowPayoutModal(false)}
        />
      )}
    </div>
  );
};

export default ReferralScreen;
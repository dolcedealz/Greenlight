// frontend/src/components/common/ErrorBoundary.js
import React from 'react';
import Logger from '../../utils/logger';
import '../../styles/ErrorBoundary.css';

class ErrorBoundary extends React.Component {
  constructor(props) {
    super(props);
    this.state = { hasError: false, error: null, errorInfo: null };
  }

  static getDerivedStateFromError(error) {
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ç–∞–∫, —á—Ç–æ–±—ã —Å–ª–µ–¥—É—é—â–∏–π —Ä–µ–Ω–¥–µ—Ä –ø–æ–∫–∞–∑–∞–ª fallback UI
    return { hasError: true };
  }

  componentDidCatch(error, errorInfo) {
    // –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É
    Logger.error('Error Boundary caught an error:', error, errorInfo);
    
    this.setState({
      error: error,
      errorInfo: errorInfo
    });

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—à–∏–±–∫—É –≤ —Å–µ—Ä–≤–∏—Å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ (–µ—Å–ª–∏ –µ—Å—Ç—å)
    // –ù–∞–ø—Ä–∏–º–µ—Ä: Sentry.captureException(error);
  }

  handleReload = () => {
    window.location.reload();
  };

  render() {
    if (this.state.hasError) {
      // Fallback UI
      return (
        <div className="error-boundary">
          <div className="error-boundary-content">
            <h2>üö® –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫</h2>
            <p>–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏.</p>
            
            {process.env.NODE_ENV === 'development' && this.state.error && (
              <details className="error-details">
                <summary>–ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –æ—à–∏–±–∫–∏ (—Ç–æ–ª—å–∫–æ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)</summary>
                <pre>{this.state.error && this.state.error.toString()}</pre>
                <pre>{this.state.errorInfo.componentStack}</pre>
              </details>
            )}
            
            <div className="error-actions">
              <button onClick={this.handleReload} className="btn btn-primary">
                –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É
              </button>
              
              {window.Telegram?.WebApp && (
                <button 
                  onClick={() => window.Telegram.WebApp.close()} 
                  className="btn btn-secondary"
                >
                  –ó–∞–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
                </button>
              )}
            </div>
          </div>
        </div>
      );
    }

    return this.props.children;
  }
}

export default ErrorBoundary;
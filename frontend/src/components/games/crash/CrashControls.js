// frontend/src/components/games/crash/CrashControls.js
import React from 'react';
import useTactileFeedback from '../../../hooks/useTactileFeedback';
import '../../../styles/CrashControls.css';

const CrashControls = ({
  betAmount,
  setBetAmount,
  autoCashOut,
  setAutoCashOut,
  autoCashOutEnabled,
  setAutoCashOutEnabled,
  balance,
  gameState,
  hasBet,
  cashedOut,
  userBet,
  userCashOutMultiplier,
  loading,
  currentMultiplier,
  autoWithdrawn = false,
  isApproachingAutoCashOut = false
}) => {
  
  const { 
    buttonPressFeedback, 
    selectionChanged, 
    gameActionFeedback, 
    importantActionFeedback 
  } = useTactileFeedback();
  
  // –ö–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞–≤–∫–∏
  const handleBetAmountChange = (e) => {
    const inputValue = e.target.value;
    
    if (inputValue === '') {
      setBetAmount('');
      return;
    }
    
    const value = parseFloat(inputValue);
    if (!isNaN(value) && value >= 0 && value <= balance) {
      setBetAmount(value);
      buttonPressFeedback();
    }
  };
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∞–≤—Ç–æ–≤—ã–≤–æ–¥–∞
  const handleAutoCashOutChange = (e) => {
    const inputValue = e.target.value;
    
    if (inputValue === '') {
      setAutoCashOut('');
      return;
    }
    
    const value = parseFloat(inputValue);
    if (!isNaN(value) && value >= 1.01 && value <= 1000) {
      setAutoCashOut(value);
      buttonPressFeedback();
    }
  };
  
  // –ë—ã—Å—Ç—Ä—ã–µ —Å—Ç–∞–≤–∫–∏
  const handleQuickBet = (multiplier) => {
    if (gameState !== 'waiting' || hasBet || loading) return;
    
    buttonPressFeedback();
    const quickBet = Math.min(balance, Math.max(0.1, Math.floor(balance * multiplier * 100) / 100));
    setBetAmount(quickBet);
  };
  
  // –ë—ã—Å—Ç—Ä—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –∞–≤—Ç–æ–≤—ã–≤–æ–¥–∞
  const handleQuickAutoCashOut = (value) => {
    if (gameState === 'flying' && hasBet) return;
    
    selectionChanged();
    setAutoCashOut(value);
  };
  
  // –£–õ–£–ß–®–ï–ù–ù–ê–Ø —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–æ–≥–æ –≤—ã–∏–≥—Ä—ã—à–∞ —Å —É—á–µ—Ç–æ–º –∞–≤—Ç–æ–≤—ã–≤–æ–¥–∞
  const getPotentialWin = () => {
    if (gameState === 'flying' && hasBet) {
      if (cashedOut && userCashOutMultiplier > 0) {
        // –ï—Å–ª–∏ —É–∂–µ –≤—ã–≤–µ–ª–∏, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—É—é —Å—É–º–º—É
        return (userBet.amount * userCashOutMultiplier).toFixed(2);
      }
      // –ï—Å–ª–∏ –µ—â–µ –Ω–µ –≤—ã–≤–µ–ª–∏ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π –≤–æ–∑–º–æ–∂–Ω—ã–π –≤—ã–∏–≥—Ä—ã—à
      return (userBet.amount * currentMultiplier).toFixed(2);
    }
    // –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –£—á–∏—Ç—ã–≤–∞–µ–º –≤–∫–ª—é—á–µ–Ω –ª–∏ –∞–≤—Ç–æ–≤—ã–≤–æ–¥
    if (autoCashOutEnabled && autoCashOut > 0) {
      return (betAmount * autoCashOut).toFixed(2);
    } else {
      // –ï—Å–ª–∏ –∞–≤—Ç–æ–≤—ã–≤–æ–¥ –≤—ã–∫–ª—é—á–µ–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä—É—á–Ω–æ–π —Ä–µ–∂–∏–º
      return '???.??';
    }
  };
  
  // –£–õ–£–ß–®–ï–ù–ù–ê–Ø —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–π –ø—Ä–∏–±—ã–ª–∏
  const getCurrentProfit = () => {
    if (gameState === 'flying' && hasBet) {
      if (cashedOut && userCashOutMultiplier > 0) {
        // –ï—Å–ª–∏ —É–∂–µ –≤—ã–≤–µ–ª–∏, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—É—é –ø—Ä–∏–±—ã–ª—å
        return ((userBet.amount * userCashOutMultiplier) - userBet.amount).toFixed(2);
      }
      // –ï—Å–ª–∏ –µ—â–µ –Ω–µ –≤—ã–≤–µ–ª–∏ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â—É—é –ø—Ä–∏–±—ã–ª—å
      return (parseFloat(getPotentialWin()) - userBet.amount).toFixed(2);
    }
    
    // –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –£—á–∏—Ç—ã–≤–∞–µ–º –≤–∫–ª—é—á–µ–Ω –ª–∏ –∞–≤—Ç–æ–≤—ã–≤–æ–¥
    if (autoCashOutEnabled && autoCashOut > 0) {
      return (parseFloat(getPotentialWin()) - betAmount).toFixed(2);
    } else {
      return '???.??';
    }
  };
  
  // –ú–æ–∂–Ω–æ –ª–∏ –∏–∑–º–µ–Ω—è—Ç—å —Å—Ç–∞–≤–∫—É
  const canEditBet = gameState === 'waiting' && !hasBet && !loading;
  
  // –ú–æ–∂–Ω–æ –ª–∏ –∏–∑–º–µ–Ω—è—Ç—å –∞–≤—Ç–æ–≤—ã–≤–æ–¥
  const canEditAutoCashOut = (gameState === 'waiting' || gameState === 'crashed') && !loading;
  
  // –ù–û–í–ê–Ø —Ñ—É–Ω–∫—Ü–∏—è: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∞–≤—Ç–æ–≤—ã–≤–æ–¥–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
  const getAutoCashOutStatus = () => {
    if (!autoCashOutEnabled) {
      return '–†—É—á–Ω–æ–π —Ä–µ–∂–∏–º - –Ω–∞–∂–∏–º–∞–π—Ç–µ "–í—ã–≤–µ—Å—Ç–∏"';
    }
    
    if (gameState === 'flying' && hasBet) {
      if (cashedOut) {
        if (autoWithdrawn) {
          return `‚úÖ –ê–≤—Ç–æ–≤—ã–≤–µ–¥–µ–Ω–æ –ø—Ä–∏ ${userCashOutMultiplier.toFixed(2)}x`;
        } else {
          return `‚úÖ –í—ã–≤–µ–¥–µ–Ω–æ –ø—Ä–∏ ${userCashOutMultiplier.toFixed(2)}x`;
        }
      } else {
        if (isApproachingAutoCashOut && userBet && userBet.autoCashOut > 0) {
          return `‚ö° –°–∫–æ—Ä–æ –∞–≤—Ç–æ–≤—ã–≤–æ–¥ –ø—Ä–∏ ${userBet.autoCashOut}x!`;
        } else if (userBet && userBet.autoCashOut > 0) {
          return `üéØ –ê–≤—Ç–æ–≤—ã–≤–æ–¥ –ø—Ä–∏ ${userBet.autoCashOut}x`;
        } else {
          return `–¢–µ–∫—É—â–∏–π –≤—ã–∏–≥—Ä—ã—à: ${getPotentialWin()} USDT`;
        }
      }
    }
    
    if (autoCashOut > 0) {
      return `–ü—Ä–∏ ${autoCashOut}x: ${getPotentialWin()} USDT`;
    }
    
    return '–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –º–Ω–æ–∂–∏—Ç–µ–ª—å –∞–≤—Ç–æ–≤—ã–≤–æ–¥–∞';
  };
  
  return (
    <div className="crash-controls">
      <div className="controls-row">
        {/* –õ–µ–≤–∞—è –ø–∞–Ω–µ–ª—å - –°—Ç–∞–≤–∫–∞ */}
        <div className="control-panel bet-panel">
          <div className="panel-header">
            <span className="panel-title">üí∞ –°—Ç–∞–≤–∫–∞</span>
            <span className="balance-info">–ë–∞–ª–∞–Ω—Å: {balance.toFixed(2)} USDT</span>
          </div>
          
          <div className="input-group">
            <input
              type="number"
              min="0.1"
              max={balance}
              step="0.1"
              value={betAmount}
              onChange={handleBetAmountChange}
              disabled={!canEditBet}
              className="amount-input"
              placeholder="0.00"
            />
            <span className="input-suffix">USDT</span>
          </div>
          
          <div className="quick-buttons">
            <button 
              onClick={() => handleQuickBet(0.1)} 
              disabled={!canEditBet}
              className="quick-btn"
            >
              10%
            </button>
            <button 
              onClick={() => handleQuickBet(0.25)} 
              disabled={!canEditBet}
              className="quick-btn"
            >
              25%
            </button>
            <button 
              onClick={() => handleQuickBet(0.5)} 
              disabled={!canEditBet}
              className="quick-btn"
            >
              50%
            </button>
            <button 
              onClick={() => handleQuickBet(1)} 
              disabled={!canEditBet}
              className="quick-btn"
            >
              MAX
            </button>
          </div>
        </div>
        
        {/* –ü—Ä–∞–≤–∞—è –ø–∞–Ω–µ–ª—å - –ê–≤—Ç–æ–≤—ã–≤–æ–¥ */}
        <div className="control-panel auto-panel">
          <div className="panel-header">
            <div className="auto-header-row">
              <span className="panel-title">üéØ –ê–≤—Ç–æ–≤—ã–≤–æ–¥</span>
              <label className="auto-toggle">
                <input
                  type="checkbox"
                  checked={autoCashOutEnabled}
                  onChange={(e) => {
                    setAutoCashOutEnabled(e.target.checked);
                    selectionChanged();
                  }}
                  disabled={gameState === 'flying' && hasBet}
                />
                <span className="toggle-slider"></span>
                <span className="toggle-label">
                  {autoCashOutEnabled ? '–í–∫–ª' : '–í—ã–∫–ª'}
                </span>
              </label>
            </div>
            <span className="potential-win">
              {getAutoCashOutStatus()}
            </span>
          </div>
          
          <div className={`input-group ${!autoCashOutEnabled ? 'disabled' : ''}`}>
            <input
              type="number"
              min="1.01"
              step="0.01"
              value={autoCashOut}
              onChange={handleAutoCashOutChange}
              disabled={!autoCashOutEnabled || !canEditAutoCashOut}
              className="multiplier-input"
              placeholder="2.00"
            />
            <span className="input-suffix">x</span>
          </div>
          
          <div className="quick-buttons">
            <button 
              onClick={() => handleQuickAutoCashOut(1.25)} 
              disabled={!autoCashOutEnabled || !canEditAutoCashOut}
              className="quick-btn"
            >
              1.25x
            </button>
            <button 
              onClick={() => handleQuickAutoCashOut(1.5)} 
              disabled={!autoCashOutEnabled || !canEditAutoCashOut}
              className="quick-btn"
            >
              1.5x
            </button>
            <button 
              onClick={() => handleQuickAutoCashOut(2)} 
              disabled={!autoCashOutEnabled || !canEditAutoCashOut}
              className="quick-btn"
            >
              2x
            </button>
            <button 
              onClick={() => handleQuickAutoCashOut(3)} 
              disabled={!autoCashOutEnabled || !canEditAutoCashOut}
              className="quick-btn"
            >
              3x
            </button>
          </div>
        </div>
      </div>
      
      {/* –£–õ–£–ß–®–ï–ù–ù–ê–Ø –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–µ–∫—É—â–µ–π —Å—Ç–∞–≤–∫–µ */}
      {hasBet && userBet && (
        <div className="current-bet-info">
          <div className="bet-info-row">
            <span>üí∞ –í–∞—à–∞ —Å—Ç–∞–≤–∫–∞:</span>
            <span className="bet-amount">{userBet.amount} USDT</span>
          </div>
          
          {/* –£–õ–£–ß–®–ï–ù–ù–ê–Ø –ª–æ–≥–∏–∫–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ –≤—ã–∏–≥—Ä—ã—à–∞ */}
          {gameState === 'flying' && (
            <>
              {!cashedOut ? (
                <>
                  <div className="bet-info-row">
                    <span>üöÄ –¢–µ–∫—É—â–∏–π –≤—ã–∏–≥—Ä—ã—à:</span>
                    <span className="current-win">{getPotentialWin()} USDT</span>
                  </div>
                  <div className="bet-info-row">
                    <span>üíé –ü—Ä–∏–±—ã–ª—å:</span>
                    <span className="current-win">+{getCurrentProfit()} USDT</span>
                  </div>
                  <div className="bet-info-row">
                    <span>üìà –ú–Ω–æ–∂–∏—Ç–µ–ª—å:</span>
                    <span className="current-win">{currentMultiplier.toFixed(2)}x</span>
                  </div>
                </>
              ) : (
                <>
                  <div className="bet-info-row">
                    <span>{autoWithdrawn ? 'ü§ñ –ê–≤—Ç–æ–≤—ã–≤–µ–¥–µ–Ω–æ:' : '‚úÖ –í—ã–≤–µ–¥–µ–Ω–æ:'}</span>
                    <span className="current-win">{getPotentialWin()} USDT</span>
                  </div>
                  <div className="bet-info-row">
                    <span>üéâ –ü—Ä–∏–±—ã–ª—å:</span>
                    <span className="current-win">+{getCurrentProfit()} USDT</span>
                  </div>
                  <div className="bet-info-row">
                    <span>üìä –ü—Ä–∏ –º–Ω–æ–∂–∏—Ç–µ–ª–µ:</span>
                    <span className="current-win">{userCashOutMultiplier.toFixed(2)}x</span>
                  </div>
                  <div className="bet-info-row">
                    <span>üìà –ò–≥—Ä–∞ –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç—Å—è:</span>
                    <span className="multiplier-value">{currentMultiplier.toFixed(2)}x</span>
                  </div>
                </>
              )}
            </>
          )}
          
          {/* –£–õ–£–ß–®–ï–ù–ù–ê–Ø –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∞–≤—Ç–æ–≤—ã–≤–æ–¥–µ */}
          {!cashedOut && (
            <>
              {autoCashOutEnabled && userBet.autoCashOut > 0 ? (
                <div className="bet-info-row">
                  <span>üéØ –ê–≤—Ç–æ–≤—ã–≤–æ–¥ –ø—Ä–∏:</span>
                  <span className={`auto-cashout ${isApproachingAutoCashOut ? 'approaching' : ''}`}>
                    {userBet.autoCashOut}x
                    {isApproachingAutoCashOut && ' ‚ö° –°–∫–æ—Ä–æ!'}
                  </span>
                </div>
              ) : (
                <div className="bet-info-row">
                  <span>‚úã –†–µ–∂–∏–º:</span>
                  <span className="manual-mode">–†—É—á–Ω–æ–π –≤—ã–≤–æ–¥</span>
                </div>
              )}
            </>
          )}
        </div>
      )}
      
      {/* –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –∏–≥—Ä—ã */}
      <div className="game-state-info">
        <div className="state-indicator">
          <span className="state-label">üéÆ –°–æ—Å—Ç–æ—è–Ω–∏–µ:</span>
          <span className={`state-value ${gameState}`}>
            {gameState === 'waiting' && '‚è≥ –ü—Ä–∏–µ–º —Å—Ç–∞–≤–æ–∫ (7 —Å–µ–∫)'}
            {gameState === 'flying' && 'üöÄ –ü–æ–ª–µ—Ç (–º–Ω–æ–∂–∏—Ç–µ–ª—å —Ä–∞—Å—Ç–µ—Ç)'}
            {gameState === 'crashed' && 'üí• –ö—Ä–∞—à (–ø–∞—É–∑–∞ 3 —Å–µ–∫)'}
          </span>
        </div>
        
        {/* –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–Ω–æ–∂–∏—Ç–µ–ª—å –≤–æ –≤—Ä–µ–º—è –ø–æ–ª–µ—Ç–∞ */}
        {gameState === 'flying' && (
          <div className="multiplier-info">
            <span className="multiplier-label">üî• –¢–µ–∫—É—â–∏–π –º–Ω–æ–∂–∏—Ç–µ–ª—å:</span>
            <span className="multiplier-value">{currentMultiplier.toFixed(2)}x</span>
          </div>
        )}
        
        {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –±–µ–∑ —Å—Ç–∞–≤–æ–∫ */}
        {gameState === 'flying' && !hasBet && (
          <div className="multiplier-info">
            <span className="multiplier-label">‚ö†Ô∏è –°—Ç–∞—Ç—É—Å:</span>
            <span className="multiplier-value">–ù–∞–±–ª—é–¥–µ–Ω–∏–µ (–±–µ–∑ —Å—Ç–∞–≤–∫–∏)</span>
          </div>
        )}
        
        {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–∏ –∏–≥—Ä—ã –ø–æ—Å–ª–µ –∫–µ—à–∞—É—Ç–∞ */}
        {gameState === 'flying' && cashedOut && (
          <div className="multiplier-info">
            <span className="multiplier-label">üëÄ –ù–∞–±–ª—é–¥–µ–Ω–∏–µ:</span>
            <span className="multiplier-value">–ì—Ä–∞—Ñ–∏–∫ —Ä–∞—Å—Ç–µ—Ç –¥–∞–ª—å—à–µ</span>
          </div>
        )}
      </div>
      
      {/* –£–õ–£–ß–®–ï–ù–ù–´–ô –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä —Å–∫–æ—Ä–æ—Å—Ç–∏ —Ä–æ—Å—Ç–∞ */}
      {gameState === 'flying' && (
        <div className="game-state-info">
          <div className="state-indicator">
            <span className="state-label">‚ö° –°–∫–æ—Ä–æ—Å—Ç—å —Ä–æ—Å—Ç–∞:</span>
            <span className="state-value flying">
              {currentMultiplier < 2 ? 'üêå –ú–µ–¥–ª–µ–Ω–Ω–æ (–±–µ–∑–æ–ø–∞—Å–Ω–æ)' : 
               currentMultiplier < 5 ? 'üèÉ –£—Å–∫–æ—Ä—è–µ—Ç—Å—è (–æ—Å—Ç–æ—Ä–æ–∂–Ω–æ)' : 
               currentMultiplier < 10 ? 'üöÄ –ë—ã—Å—Ç—Ä–æ (–æ–ø–∞—Å–Ω–æ)' : '‚ö° –û—á–µ–Ω—å –±—ã—Å—Ç—Ä–æ (–†–ò–°–ö!)'}
            </span>
          </div>
        </div>
      )}
      
      {/* –ù–û–í–û–ï: –ü–æ–¥—Å–∫–∞–∑–∫–∏ –¥–ª—è –Ω–æ–≤—ã—Ö –∏–≥—Ä–æ–∫–æ–≤ */}
      {gameState === 'waiting' && !hasBet && (
        <div className="game-state-info">
          <div className="state-indicator">
            <span className="state-label">üí° –ü–æ–¥—Å–∫–∞–∑–∫–∞:</span>
            <span className="state-value">
              {autoCashOutEnabled ? 
                `–ê–≤—Ç–æ–≤—ã–≤–æ–¥ –ø—Ä–∏ ${autoCashOut}x –ø–æ–º–æ–∂–µ—Ç –∑–∞—â–∏—Ç–∏—Ç—å –ø—Ä–∏–±—ã–ª—å` :
                '–í–∫–ª—é—á–∏—Ç–µ –∞–≤—Ç–æ–≤—ã–≤–æ–¥ –¥–ª—è –∑–∞—â–∏—Ç—ã –æ—Ç –ø–æ—Ç–µ—Ä—å'}
            </span>
          </div>
        </div>
      )}
      
      {/* –£–õ–£–ß–®–ï–ù–ù–û–ï –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –æ –ø—Ä–∏–±–ª–∏–∂–µ–Ω–∏–∏ –∞–≤—Ç–æ–≤—ã–≤–æ–¥–∞ */}
      {isApproachingAutoCashOut && hasBet && !cashedOut && (
        <div className="game-state-info approaching-auto-info">
          <div className="state-indicator">
            <span className="state-label">‚ö° –í–Ω–∏–º–∞–Ω–∏–µ:</span>
            <span className="state-value approaching">
              –ú–Ω–æ–∂–∏—Ç–µ–ª—å –ø—Ä–∏–±–ª–∏–∂–∞–µ—Ç—Å—è –∫ {userBet.autoCashOut}x! –ê–≤—Ç–æ–≤—ã–≤–æ–¥ —Å–∫–æ—Ä–æ —Å—Ä–∞–±–æ—Ç–∞–µ—Ç!
            </span>
          </div>
        </div>
      )}
      
      {/* –ù–û–í–û–ï: –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± —É—Å–ø–µ—à–Ω–æ–º –∞–≤—Ç–æ–≤—ã–≤–æ–¥–µ */}
      {cashedOut && autoWithdrawn && gameState === 'flying' && (
        <div className="game-state-info">
          <div className="state-indicator">
            <span className="state-label">ü§ñ –ê–≤—Ç–æ–≤—ã–≤–æ–¥:</span>
            <span className="state-value">
              –°—Ä–∞–±–æ—Ç–∞–ª –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏ {userCashOutMultiplier.toFixed(2)}x! 
              –í–∞—à–∏ —Å—Ä–µ–¥—Å—Ç–≤–∞ –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏.
            </span>
          </div>
        </div>
      )}
    </div>
  );
};

export default CrashControls;

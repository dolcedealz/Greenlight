// src/handlers/index.js
const { Markup } = require('telegraf');

/**
 * –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –∏ callback
 * @param {Object} bot - –≠–∫–∑–µ–º–ø–ª—è—Ä Telegraf
 */
function registerHandlers(bot) {
  // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
  bot.hears('üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', (ctx) => {
    // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –∑–∞–ø—Ä–æ—Å –∫ API –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    const mockStats = {
      users: 1245,
      activeToday: 189,
      totalGames: 8912,
      totalBets: 250450.25,
      totalWins: 237927.74,
      profit: 12522.51
    };
    
    ctx.reply(
      `üìä *–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã*\n\n` +
      `üë• –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${mockStats.users}\n` +
      `üë§ –ê–∫—Ç–∏–≤–Ω—ã—Ö —Å–µ–≥–æ–¥–Ω—è: ${mockStats.activeToday}\n` +
      `üéÆ –í—Å–µ–≥–æ –∏–≥—Ä: ${mockStats.totalGames}\n` +
      `üí∞ –û–±—â–∞—è —Å—É–º–º–∞ —Å—Ç–∞–≤–æ–∫: ${mockStats.totalBets.toFixed(2)} USDT\n` +
      `üí∏ –û–±—â–∞—è —Å—É–º–º–∞ –≤—ã–ø–ª–∞—Ç: ${mockStats.totalWins.toFixed(2)} USDT\n` +
      `üìà –ü—Ä–∏–±—ã–ª—å —Å–∏—Å—Ç–µ–º—ã: ${mockStats.profit.toFixed(2)} USDT`,
      { parse_mode: 'Markdown' }
    );
  });
  
  bot.hears('üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏', (ctx) => {
    ctx.reply(
      'üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:',
      Markup.inlineKeyboard([
        [Markup.button.callback('üìã –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π', 'users_list')],
        [Markup.button.callback('üîç –ù–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', 'user_search')],
        [Markup.button.callback('üîí –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞/–†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞', 'user_block')]
      ])
    );
  });
  
  bot.hears('üéÆ –ò–≥—Ä—ã', (ctx) => {
    ctx.reply(
      'üéÆ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–≥—Ä–∞–º–∏\n\n–í—ã–±–µ—Ä–∏—Ç–µ –∏–≥—Ä—É:',
      Markup.inlineKeyboard([
        [
          Markup.button.callback('üé∞ –°–ª–æ—Ç—ã', 'game_slots'),
          Markup.button.callback('üí£ –ú–∏–Ω—ã', 'game_mines')
        ],
        [
          Markup.button.callback('üìà –ö—Ä–∞—à', 'game_crash'),
          Markup.button.callback('ü™ô –ú–æ–Ω–µ—Ç–∫–∞', 'game_coin')
        ],
        [Markup.button.callback('üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∏–≥—Ä–∞–º', 'games_stats')]
      ])
    );
  });
  
  bot.hears('üîÆ –°–æ–±—ã—Ç–∏—è', (ctx) => {
    ctx.reply(
      'üîÆ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è–º–∏\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:',
      Markup.inlineKeyboard([
        [Markup.button.callback('üìã –°–ø–∏—Å–æ–∫ —Å–æ–±—ã—Ç–∏–π', 'events_list')],
        [Markup.button.callback('‚ûï –°–æ–∑–¥–∞—Ç—å —Å–æ–±—ã—Ç–∏–µ', 'event_create')],
        [Markup.button.callback('üìù –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–±—ã—Ç–∏–µ', 'event_edit')]
      ])
    );
  });
  
  bot.hears('üí∞ –§–∏–Ω–∞–Ω—Å—ã', (ctx) => {
    ctx.reply(
      'üí∞ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ñ–∏–Ω–∞–Ω—Å–∞–º–∏\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:',
      Markup.inlineKeyboard([
        [Markup.button.callback('üìã –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏', 'transactions_list')],
        [Markup.button.callback('üì• –î–µ–ø–æ–∑–∏—Ç—ã', 'deposits_list')],
        [Markup.button.callback('üì§ –í—ã–≤–æ–¥—ã', 'withdrawals_list')]
      ])
    );
  });
  
  bot.hears('‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏', (ctx) => {
    ctx.reply(
      '‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã\n\n–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:',
      Markup.inlineKeyboard([
        [Markup.button.callback('üéÆ –ò–≥—Ä—ã', 'settings_games')],
        [Markup.button.callback('üí∞ –ö–æ–º–∏—Å—Å–∏–∏', 'settings_fees')],
        [Markup.button.callback('üë• –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞', 'settings_referral')]
      ])
    );
  });
  
  // –û–±—Ä–∞–±–æ—Ç–∫–∞ callback –∑–∞–ø—Ä–æ—Å–æ–≤
  bot.action(/^events_(.+)$/, (ctx) => {
    const action = ctx.match[1];
    ctx.answerCbQuery();
    
    if (action === 'list') {
      ctx.reply('üìã –°–ø–∏—Å–æ–∫ —Å–æ–±—ã—Ç–∏–π –±—É–¥–µ—Ç –∑–¥–µ—Å—å...');
    } else if (action === 'create') {
      ctx.reply('‚ûï –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Å–æ–±—ã—Ç–∏—è –±—É–¥–µ—Ç –∑–¥–µ—Å—å...');
    }
  });
  
  bot.action(/^game_(.+)$/, (ctx) => {
    const game = ctx.match[1];
    ctx.answerCbQuery();
    
    ctx.reply(`üéÆ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–≥—Ä—ã ${game} –±—É–¥—É—Ç –∑–¥–µ—Å—å...`);
  });
  
  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
  bot.on('text', (ctx) => {
    ctx.reply('–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã –∏–ª–∏ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –±–æ—Ç–æ–º. –î–ª—è —Å–ø—Ä–∞–≤–∫–∏ –≤–≤–µ–¥–∏—Ç–µ /help');
  });

  return bot;
}

module.exports = {
  registerHandlers
};
// bot/src/commands/withdraw.command.js
const { Markup } = require('telegraf');
const config = require('../config');

/**
 * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /withdraw
 * @param {Object} ctx - –ö–æ–Ω—Ç–µ–∫—Å—Ç Telegraf
 */
async function withdrawCommand(ctx) {
  try {
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Å—É–º–º—ã –≤—ã–≤–æ–¥–∞
    await ctx.reply(
      'üí∏ –í—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤\n\n' +
      'üìã –£—Å–ª–æ–≤–∏—è –≤—ã–≤–æ–¥–∞:\n' +
      '‚Ä¢ –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞: 1 USDT\n' +
      '‚Ä¢ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞: 10,000 USDT\n' +
      '‚Ä¢ –î–æ 300 USDT - –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏\n' +
      '‚Ä¢ –°–≤—ã—à–µ 300 USDT - —Ç—Ä–µ–±—É–µ—Ç –æ–¥–æ–±—Ä–µ–Ω–∏—è\n' +
      '‚Ä¢ –í—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏: 5-15 –º–∏–Ω—É—Ç\n\n' +
      '–í—ã–±–µ—Ä–∏—Ç–µ —Å—É–º–º—É –¥–ª—è –≤—ã–≤–æ–¥–∞:',
      Markup.inlineKeyboard([
        [
          Markup.button.callback('10 USDT', 'withdraw:10'),
          Markup.button.callback('20 USDT', 'withdraw:20'),
          Markup.button.callback('50 USDT', 'withdraw:50')
        ],
        [
          Markup.button.callback('100 USDT', 'withdraw:100'),
          Markup.button.callback('500 USDT', 'withdraw:500'),
          Markup.button.callback('1000 USDT', 'withdraw:1000')
        ],
        [
          Markup.button.callback('–î—Ä—É–≥–∞—è —Å—É–º–º–∞', 'withdraw:custom'),
          Markup.button.callback('üìã –ò—Å—Ç–æ—Ä–∏—è –≤—ã–≤–æ–¥–æ–≤', 'withdrawals_history')
        ]
      ])
    );
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–æ–º–∞–Ω–¥—ã /withdraw:', error);
    await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
  }
}

module.exports = withdrawCommand;
// admin/src/commands/index.js
const { Markup } = require('telegraf');
const axios = require('axios');

// –ü–æ–ª—É—á–∞–µ–º API URL –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
const apiUrl = process.env.API_URL || 'http://localhost:3001/api';

/**
 * –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –∞–¥–º–∏–Ω-–±–æ—Ç–∞
 * @param {Object} bot - –≠–∫–∑–µ–º–ø–ª—è—Ä Telegraf
 */
function registerCommands(bot) {
  // –ö–æ–º–∞–Ω–¥–∞ /start
  bot.command('start', (ctx) => {
    const { id, first_name } = ctx.from;
    console.log(`–ê–¥–º–∏–Ω ${first_name} (${id}) –∑–∞–ø—É—Å—Ç–∏–ª –∞–¥–º–∏–Ω-–±–æ—Ç–∞`);
    
    ctx.reply(
      `üëã –ü—Ä–∏–≤–µ—Ç, ${first_name}!\n\n–≠—Ç–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–π –±–æ—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è Greenlight Casino.\n\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º–æ–π.`,
      Markup.keyboard([
        ['üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', 'üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏'],
        ['üéÆ –ò–≥—Ä—ã', 'üîÆ –°–æ–±—ã—Ç–∏—è'],
        ['üí∞ –§–∏–Ω–∞–Ω—Å—ã', '‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏']
      ]).resize()
    );
  });
  
  // –ö–æ–º–∞–Ω–¥–∞ /stats - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
  bot.command('stats', (ctx) => {
    ctx.reply('üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã\n\n–û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±—É–¥–µ—Ç –∑–¥–µ—Å—å...');
  });
  
  // –ö–æ–º–∞–Ω–¥–∞ /users - –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
  bot.command('users', (ctx) => {
    ctx.reply('üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏\n\n–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –±—É–¥–µ—Ç –∑–¥–µ—Å—å...');
  });
  
  // –ö–æ–º–∞–Ω–¥–∞ /games - –∏–≥—Ä—ã
  bot.command('games', (ctx) => {
    ctx.reply('üéÆ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–≥—Ä–∞–º–∏\n\n–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–≥—Ä –±—É–¥—É—Ç –∑–¥–µ—Å—å...');
  });
  
  // –ö–æ–º–∞–Ω–¥–∞ /events - —Å–æ–±—ã—Ç–∏—è
  bot.command('events', (ctx) => {
    ctx.reply(
      'üîÆ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è–º–∏\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:',
      Markup.inlineKeyboard([
        [Markup.button.callback('üìã –°–ø–∏—Å–æ–∫ —Å–æ–±—ã—Ç–∏–π', 'events_list')],
        [Markup.button.callback('‚ûï –°–æ–∑–¥–∞—Ç—å —Å–æ–±—ã—Ç–∏–µ', 'event_create')],
        [Markup.button.callback('üìù –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–±—ã—Ç–∏–µ', 'event_edit')]
      ])
    );
  });
  
  // –ö–æ–º–∞–Ω–¥–∞ /finance - —Ñ–∏–Ω–∞–Ω—Å—ã
  bot.command('finance', (ctx) => {
    ctx.reply('üí∞ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ñ–∏–Ω–∞–Ω—Å–∞–º–∏\n\n–§–∏–Ω–∞–Ω—Å–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –±—É–¥–µ—Ç –∑–¥–µ—Å—å...');
  });
  
  // –ö–æ–º–∞–Ω–¥–∞ /settings - –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
  bot.command('settings', (ctx) => {
    ctx.reply('‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã\n\n–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±—É–¥—É—Ç –∑–¥–µ—Å—å...');
  });
  
  // –ö–æ–º–∞–Ω–¥–∞ /help
  bot.command('help', (ctx) => {
    ctx.reply(
      'üîç –°–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º:\n\n' +
      '/start - –ù–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º\n' +
      '/stats - –ü—Ä–æ—Å–º–æ—Ç—Ä —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Å–∏—Å—Ç–µ–º—ã\n' +
      '/users - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏\n' +
      '/games - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–≥—Ä–∞–º–∏\n' +
      '/events - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è–º–∏\n' +
      '/finance - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ñ–∏–Ω–∞–Ω—Å–∞–º–∏\n' +
      '/settings - –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã\n' +
      '/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É\n\n' +
      '--- –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —à–∞–Ω—Å–∞–º–∏ ---\n' +
      '/set_win_chance - –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–∞–∑–æ–≤—ã–π —à–∞–Ω—Å –≤—ã–∏–≥—Ä—ã—à–∞\n' +
      '/set_user_chance - –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —à–∞–Ω—Å –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n' +
      '/get_chance_settings - –ü–æ–∫–∞–∑–∞—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —à–∞–Ω—Å–æ–≤\n' +
      '/get_user_chance - –ü–æ–∫–∞–∑–∞—Ç—å —à–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è'
    );
  });

  // –ù–û–í–´–ï –ö–û–ú–ê–ù–î–´ –î–õ–Ø –£–ü–†–ê–í–õ–ï–ù–ò–Ø –®–ê–ù–°–ê–ú–ò
  
  // –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–∞–∑–æ–≤—ã–º —à–∞–Ω—Å–æ–º –≤—ã–∏–≥—Ä—ã—à–∞
  bot.command('set_win_chance', async (ctx) => {
    try {
      const args = ctx.message.text.split(' ');
      if (args.length < 3) {
        return ctx.reply('–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /set_win_chance [gameType] [—à–∞–Ω—Å]\n–ü—Ä–∏–º–µ—Ä: /set_win_chance coin 0.475');
      }
      
      const gameType = args[1].toLowerCase();
      const winChance = parseFloat(args[2]);
      
      if (isNaN(winChance) || winChance < 0 || winChance > 1) {
        return ctx.reply('–®–∞–Ω—Å –≤—ã–∏–≥—Ä—ã—à–∞ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º –æ—Ç 0 –¥–æ 1');
      }
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ API
      const response = await axios.post(`${apiUrl}/admin/win-chance/base`, {
        gameType,
        winChance
      }, {
        headers: { Authorization: `Bearer ${process.env.ADMIN_API_TOKEN}` }
      });
      
      if (response.data.success) {
        ctx.reply(`‚úÖ –ë–∞–∑–æ–≤—ã–π —à–∞–Ω—Å –≤—ã–∏–≥—Ä—ã—à–∞ –¥–ª—è ${gameType} —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ ${winChance * 100}%`);
      } else {
        ctx.reply(`‚ùå –û—à–∏–±–∫–∞: ${response.data.message}`);
      }
    } catch (error) {
      ctx.reply(`‚ùå –û—à–∏–±–∫–∞: ${error.message}`);
      console.error(error);
    }
  });

  // –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–º —à–∞–Ω—Å–æ–º –≤—ã–∏–≥—Ä—ã—à–∞
  bot.command('set_user_chance', async (ctx) => {
    try {
      const args = ctx.message.text.split(' ');
      if (args.length < 4) {
        return ctx.reply('–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /set_user_chance [userId] [gameType] [–º–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä]\n–ü—Ä–∏–º–µ—Ä: /set_user_chance 612a3b4c5d6e7f8910111213 coin 10');
      }
      
      const userId = args[1];
      const gameType = args[2].toLowerCase();
      const modifierPercent = parseFloat(args[3]);
      
      if (isNaN(modifierPercent)) {
        return ctx.reply('–ú–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º (–≤ –ø—Ä–æ—Ü–µ–Ω—Ç–Ω—ã—Ö –ø—É–Ω–∫—Ç–∞—Ö)');
      }
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ API
      const response = await axios.post(`${apiUrl}/admin/win-chance/user`, {
        userId,
        gameType,
        modifierPercent
      }, {
        headers: { Authorization: `Bearer ${process.env.ADMIN_API_TOKEN}` }
      });
      
      if (response.data.success) {
        const { effectiveWinChance } = response.data.data;
        ctx.reply(
          `‚úÖ –ú–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä —à–∞–Ω—Å–∞ –≤—ã–∏–≥—Ä—ã—à–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:\n` +
          `ID: ${userId}\n` +
          `–ò–≥—Ä–∞: ${gameType}\n` +
          `–ú–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä: ${modifierPercent > 0 ? '+' : ''}${modifierPercent}%\n` +
          `–≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–π —à–∞–Ω—Å: ${(effectiveWinChance * 100).toFixed(2)}%`
        );
      } else {
        ctx.reply(`‚ùå –û—à–∏–±–∫–∞: ${response.data.message}`);
      }
    } catch (error) {
      ctx.reply(`‚ùå –û—à–∏–±–∫–∞: ${error.message}`);
      console.error(error);
    }
  });

  // –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—É—â–∏—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫ —à–∞–Ω—Å–æ–≤
  bot.command('get_chance_settings', async (ctx) => {
    try {
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ API
      const response = await axios.get(`${apiUrl}/admin/win-chance/settings`, {
        headers: { Authorization: `Bearer ${process.env.ADMIN_API_TOKEN}` }
      });
      
      if (response.data.success) {
        const { gameSettings } = response.data.data;
        let message = '‚öôÔ∏è –¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —à–∞–Ω—Å–æ–≤ –≤—ã–∏–≥—Ä—ã—à–∞:\n\n';
        
        for (const [gameType, settings] of Object.entries(gameSettings)) {
          message += `üìå ${gameType.toUpperCase()}:\n`;
          message += `  ‚Ä¢ –ë–∞–∑–æ–≤—ã–π —à–∞–Ω—Å: ${(settings.baseWinChance * 100).toFixed(2)}%\n`;
          message += `  ‚Ä¢ –ú–Ω–æ–∂–∏—Ç–µ–ª—å: x${settings.multiplier}\n`;
          message += `  ‚Ä¢ –û–∂–∏–¥–∞–µ–º—ã–π RTP: ${(settings.baseWinChance * settings.multiplier * 100).toFixed(2)}%\n\n`;
        }
        
        ctx.reply(message);
      } else {
        ctx.reply(`‚ùå –û—à–∏–±–∫–∞: ${response.data.message}`);
      }
    } catch (error) {
      ctx.reply(`‚ùå –û—à–∏–±–∫–∞: ${error.message}`);
      console.error(error);
    }
  });

  // –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —à–∞–Ω—Å–æ–≤ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  bot.command('get_user_chance', async (ctx) => {
    try {
      const args = ctx.message.text.split(' ');
      if (args.length < 3) {
        return ctx.reply('–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /get_user_chance [userId] [gameType]\n–ü—Ä–∏–º–µ—Ä: /get_user_chance 612a3b4c5d6e7f8910111213 coin');
      }
      
      const userId = args[1];
      const gameType = args[2].toLowerCase();
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ API
      const response = await axios.get(`${apiUrl}/admin/win-chance/user`, {
        params: { userId, gameType },
        headers: { Authorization: `Bearer ${process.env.ADMIN_API_TOKEN}` }
      });
      
      if (response.data.success) {
        const data = response.data.data;
        ctx.reply(
          `üë§ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —à–∞–Ω—Å–∞—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:\n` +
          `ID: ${data.userId}\n` +
          `–ò–º—è: ${data.firstName} ${data.lastName}\n` +
          `Username: ${data.username || '–Ω–µ—Ç'}\n` +
          `–ò–≥—Ä–∞: ${data.gameType}\n` +
          `–ë–∞–∑–æ–≤—ã–π —à–∞–Ω—Å: ${(data.baseWinChance * 100).toFixed(2)}%\n` +
          `–ú–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä: ${data.modifierPercent > 0 ? '+' : ''}${data.modifierPercent}%\n` +
          `–≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–π —à–∞–Ω—Å: ${(data.effectiveWinChance * 100).toFixed(2)}%`
        );
      } else {
        ctx.reply(`‚ùå –û—à–∏–±–∫–∞: ${response.data.message}`);
      }
    } catch (error) {
      ctx.reply(`‚ùå –û—à–∏–±–∫–∞: ${error.message}`);
      console.error(error);
    }
  });

  return bot;
}

module.exports = {
  registerCommands
};
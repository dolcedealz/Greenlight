// –°–æ–∑–¥–∞—Ç—å —Ñ–∞–π–ª bot/src/services/notification.service.js

const { Telegraf } = require('telegraf');
const config = require('../config');

class NotificationService {
  constructor() {
    this.bot = new Telegraf(config.botToken);
  }
  
  /**
   * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ–¥–æ–±—Ä–µ–Ω–∏–∏ –≤—ã–≤–æ–¥–∞
   */
  async notifyWithdrawalApproved(telegramId, withdrawalData) {
    try {
      await this.bot.telegram.sendMessage(
        telegramId,
        `‚úÖ –í–∞—à –∑–∞–ø—Ä–æ—Å –Ω–∞ –≤—ã–≤–æ–¥ –æ–¥–æ–±—Ä–µ–Ω!\n\n` +
        `üíµ –°—É–º–º–∞: ${withdrawalData.amount} USDT\n` +
        `üì§ –ü–æ–ª—É—á–∞—Ç–µ–ª—å: @${withdrawalData.recipient}\n` +
        `‚è≥ –°—Ç–∞—Ç—É—Å: –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è\n\n` +
        `–°—Ä–µ–¥—Å—Ç–≤–∞ –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ —Ç–µ—á–µ–Ω–∏–µ 5-15 –º–∏–Ω—É—Ç.`
      );
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:', error);
    }
  }
  
  /**
   * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–∏ –≤—ã–≤–æ–¥–∞
   */
  async notifyWithdrawalRejected(telegramId, withdrawalData) {
    try {
      await this.bot.telegram.sendMessage(
        telegramId,
        `‚ùå –í–∞—à –∑–∞–ø—Ä–æ—Å –Ω–∞ –≤—ã–≤–æ–¥ –æ—Ç–∫–ª–æ–Ω–µ–Ω\n\n` +
        `üíµ –°—É–º–º–∞: ${withdrawalData.amount} USDT\n` +
        `üì§ –ü–æ–ª—É—á–∞—Ç–µ–ª—å: @${withdrawalData.recipient}\n` +
        `üìù –ü—Ä–∏—á–∏–Ω–∞: ${withdrawalData.rejectionReason}\n\n` +
        `–°—Ä–µ–¥—Å—Ç–≤–∞ –≤–æ–∑–≤—Ä–∞—â–µ–Ω—ã –Ω–∞ –≤–∞—à –±–∞–ª–∞–Ω—Å.`
      );
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:', error);
    }
  }
  
  /**
   * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –≤—ã–≤–æ–¥–∞
   */
  async notifyWithdrawalCompleted(telegramId, withdrawalData) {
    try {
      await this.bot.telegram.sendMessage(
        telegramId,
        `‚úÖ –í—ã–≤–æ–¥ —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω!\n\n` +
        `üíµ –°—É–º–º–∞: ${withdrawalData.amount} USDT\n` +
        `üì§ –ü–æ–ª—É—á–∞—Ç–µ–ª—å: @${withdrawalData.recipient}\n` +
        `üîó ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: ${withdrawalData.cryptoBotData.transferId}\n\n` +
        `–°–ø–∞—Å–∏–±–æ –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ Greenlight Casino!`
      );
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:', error);
    }
  }

  /**
   * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –º–∞—Å—Å–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
   * @param {Array} users - –ú–∞—Å—Å–∏–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π [{telegramId, username}]
   * @param {String} message - –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
   * @param {Object} options - –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–ø—Ü–∏–∏
   */
  async sendMassNotification(users, message, options = {}) {
    const { priority = 'normal', batchSize = 30 } = options;
    
    console.log(`üì¢ –ù–∞—á–∏–Ω–∞–µ–º –º–∞—Å—Å–æ–≤—É—é —Ä–∞—Å—Å—ã–ª–∫—É –¥–ª—è ${users.length} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π`);
    
    let successCount = 0;
    let failedCount = 0;
    const failedUsers = [];
    
    // –†–∞–∑–±–∏–≤–∞–µ–º –Ω–∞ –±–∞—Ç—á–∏ –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è –ª–∏–º–∏—Ç–æ–≤ Telegram API
    for (let i = 0; i < users.length; i += batchSize) {
      const batch = users.slice(i, i + batchSize);
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –±–∞—Ç—á —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π –º–µ–∂–¥—É –±–∞—Ç—á–∞–º–∏
      await Promise.all(
        batch.map(async (user) => {
          try {
            await this.bot.telegram.sendMessage(
              user.telegramId,
              `üì¢ ${message}`,
              {
                parse_mode: 'HTML',
                disable_notification: priority !== 'high'
              }
            );
            successCount++;
          } catch (error) {
            failedCount++;
            failedUsers.push({
              telegramId: user.telegramId,
              username: user.username,
              error: error.message
            });
            
            // –õ–æ–≥–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –∫—Ä–∏—Ç–∏—á–Ω—ã–µ –æ—à–∏–±–∫–∏
            if (!error.message.includes('bot was blocked') && 
                !error.message.includes('user is deactivated')) {
              console.error(`‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–ª—è ${user.telegramId}:`, error.message);
            }
          }
        })
      );
      
      // –ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –±–∞—Ç—á–∞–º–∏ (1 —Å–µ–∫—É–Ω–¥–∞)
      if (i + batchSize < users.length) {
        await new Promise(resolve => setTimeout(resolve, 1000));
      }
      
      // –õ–æ–≥–∏—Ä—É–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –∫–∞–∂–¥—ã–µ 100 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
      if ((i + batchSize) % 100 === 0 || i + batchSize >= users.length) {
        console.log(`üìä –ü—Ä–æ–≥—Ä–µ—Å—Å: ${Math.min(i + batchSize, users.length)}/${users.length}`);
      }
    }
    
    console.log(`‚úÖ –†–∞—Å—Å—ã–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –£—Å–ø–µ—à–Ω–æ: ${successCount}, –û—à–∏–±–æ–∫: ${failedCount}`);
    
    return {
      total: users.length,
      success: successCount,
      failed: failedCount,
      failedUsers: failedUsers.slice(0, 10) // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–µ 10 –æ—à–∏–±–æ–∫
    };
  }
}

module.exports = new NotificationService();
// frontend/src/components/games/mines/MinesGrid.js
import React from 'react';
import '../../../styles/MinesGrid.css';

/// frontend/src/components/games/mines/MinesGrid.js
const MinesGrid = ({ grid, revealed, onCellClick, gameActive, gameOver }) => {
  // –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç–ª–∞–¥–æ—á–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
  console.log("–†–µ–Ω–¥–µ—Ä MinesGrid, gameActive:", gameActive);
  
  const handleCellClick = (rowIndex, colIndex) => {
    console.log(`MinesGrid: –∫–ª–∏–∫ –Ω–∞ —è—á–µ–π–∫–µ [${rowIndex}, ${colIndex}], gameActive: ${gameActive}`);
    
    // –ï—Å–ª–∏ –∏–≥—Ä–∞ –∞–∫—Ç–∏–≤–Ω–∞ –∏ —è—á–µ–π–∫–∞ –Ω–µ –æ—Ç–∫—Ä—ã—Ç–∞, –≤—ã–∑—ã–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
    const index = rowIndex * 5 + colIndex;
    if (gameActive && !revealed[index]) {
      onCellClick(rowIndex, colIndex);
    } else {
      console.log(`MinesGrid: –∫–ª–∏–∫ –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω, gameActive: ${gameActive}, revealed: ${revealed[index]}`);
    }
  };

  return (
    <div className={`mines-grid ${gameOver ? 'game-over' : ''}`}>
      {grid.map((row, rowIndex) => (
        <div key={rowIndex} className="mines-row">
          {row.map((cell, colIndex) => {
            const index = rowIndex * 5 + colIndex;
            const isRevealed = revealed[index];
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –¥–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
            return (
              <div
                key={colIndex}
                className={`mines-cell ${isRevealed ? 'revealed' : ''} ${isRevealed && cell === 'mine' ? 'mine' : ''} ${isRevealed && cell !== 'mine' ? 'gem' : ''}`}
                onClick={() => handleCellClick(rowIndex, colIndex)}
              >
                {isRevealed && cell === 'mine' && <span className="mine-icon">üí£</span>}
                {isRevealed && cell !== 'mine' && <span className="gem-icon">üíé</span>}
              </div>
            );
          })}
        </div>
      ))}
    </div>
  );
};

export default MinesGrid;
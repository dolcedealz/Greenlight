// frontend/src/components/games/coin/CoinFlip.js - –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø –ë–ï–ó –î–í–û–ô–ù–û–ô –ê–ù–ò–ú–ê–¶–ò–ò
import React, { useState, useRef, useEffect, useCallback } from 'react';
import '../../../styles/CoinFlip.css';

const CoinFlip = ({ flipping, result, onAnimationComplete }) => {
  const coinRef = useRef(null);
  const [currentSide, setCurrentSide] = useState('heads');
  const [animationState, setAnimationState] = useState('idle');
  const [isAnimating, setIsAnimating] = useState(false); // –§–ª–∞–≥ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –¥–≤–æ–π–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞
  
  // –°—Ç–∞–±–∏–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∞–Ω–∏–º–∞—Ü–∏–∏
  const handleAnimationEnd = useCallback(() => {
    console.log('ü™ô –ê–ù–ò–ú–ê–¶–ò–Ø: –ó–∞–≤–µ—Ä—à–µ–Ω–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é');
    setAnimationState('completed');
    setIsAnimating(false);
    
    // –£–≤–µ–¥–æ–º–ª—è–µ–º —Ä–æ–¥–∏—Ç–µ–ª—è –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏
    if (onAnimationComplete) {
      onAnimationComplete(true);
    }
  }, [onAnimationComplete]);
  
  // –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –ª–æ–≥–∏–∫–∞ –∞–Ω–∏–º–∞—Ü–∏–∏ - –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –¥–≤–æ–π–Ω–æ–π –∑–∞–ø—É—Å–∫
  useEffect(() => {
    // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –ø–æ–≤—Ç–æ—Ä–Ω—ã–π –∑–∞–ø—É—Å–∫ –µ—Å–ª–∏ –∞–Ω–∏–º–∞—Ü–∏—è —É–∂–µ –∏–¥–µ—Ç
    if (isAnimating) {
      console.log('ü™ô –ê–ù–ò–ú–ê–¶–ò–Ø: –£–∂–µ –∑–∞–ø—É—â–µ–Ω–∞, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º');
      return;
    }
    
    if (flipping && result !== null) {
      console.log('ü™ô –ê–ù–ò–ú–ê–¶–ò–Ø: –ù–ê–ß–ò–ù–ê–ï–ú –ù–û–í–£–Æ –∞–Ω–∏–º–∞—Ü–∏—é, —Ä–µ–∑—É–ª—å—Ç–∞—Ç:', result);
      
      const coin = coinRef.current;
      if (!coin) return;
      
      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ –∞–Ω–∏–º–∞—Ü–∏–∏
      setIsAnimating(true);
      setAnimationState('flipping');
      
      // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—Å–µ –∫–ª–∞—Å—Å—ã
      coin.className = 'coin';
      coin.classList.add('start-position', currentSide);
      
      // –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é
      setTimeout(() => {
        coin.classList.remove('start-position');
        coin.classList.add('flipping', currentSide);
        
        console.log(`ü™ô –ê–ù–ò–ú–ê–¶–ò–Ø: CSS –∞–Ω–∏–º–∞—Ü–∏—è –∑–∞–ø—É—â–µ–Ω–∞ —Å –∫–ª–∞—Å—Å–∞–º–∏: flipping, ${currentSide}`);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–Ω—å
        const shadow = document.querySelector('.coin-shadow');
        if (shadow) {
          shadow.className = 'coin-shadow flipping';
        }
      }, 50);
      
      // –°–ò–ù–•–†–û–ù–ò–ó–ò–†–û–í–ê–ù–ù–û–ï –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ - —Å–æ–∫—Ä–∞—â–∞–µ–º –≤—Ä–µ–º—è –¥–æ 2000ms
      setTimeout(() => {
        // –£–±–∏—Ä–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        coin.classList.remove('flipping', currentSide);
        coin.classList.add('final-result', result);
        
        setCurrentSide(result);
        setAnimationState('showing');
        
        console.log('ü™ô –ê–ù–ò–ú–ê–¶–ò–Ø: –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —Ñ–∏–Ω–∞–ª—å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç:', result);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–Ω—å
        const shadow = document.querySelector('.coin-shadow');
        if (shadow) {
          shadow.className = 'coin-shadow completed';
        }
        
        // –ó–∞–≤–µ—Ä—à–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –∏ —É–≤–µ–¥–æ–º–ª—è–µ–º —Ä–æ–¥–∏—Ç–µ–ª—è —Å—Ä–∞–∑—É
        setTimeout(() => {
          handleAnimationEnd();
        }, 300); // –ö–æ—Ä–æ—Ç–∫–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –ø–ª–∞–≤–Ω–æ—Å—Ç–∏
        
      }, 1800); // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º —Å CSS –∞–Ω–∏–º–∞—Ü–∏–µ–π (1.5s + –Ω–µ–±–æ–ª—å—à–æ–π –±—É—Ñ–µ—Ä)
      
    } else if (!flipping && animationState !== 'idle') {
      // –°–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è
      console.log('ü™ô –ê–ù–ò–ú–ê–¶–ò–Ø: –°–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è');
      const coin = coinRef.current;
      if (coin) {
        coin.className = 'coin';
        coin.classList.add('final-result', currentSide);
      }
      
      const shadow = document.querySelector('.coin-shadow');
      if (shadow) {
        shadow.className = 'coin-shadow idle';
      }
      
      setAnimationState('idle');
      setIsAnimating(false);
    }
  }, [flipping, result]); // –£–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–∏–µ dependencies
  
  return (
    <div className="coin-flip-container">
      {/* –î–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã */}
      <div className="coin-atmosphere">
        <div className="particle particle-1"></div>
        <div className="particle particle-2"></div>
        <div className="particle particle-3"></div>
        <div className="particle particle-4"></div>
      </div>
      
      {/* –¢–µ–Ω—å –º–æ–Ω–µ—Ç—ã */}
      <div className={`coin-shadow ${animationState}`}></div>
      
      {/* –û—Å–Ω–æ–≤–Ω–∞—è –º–æ–Ω–µ—Ç–∞ */}
      <div className="coin-wrapper">
        <div className="coin" ref={coinRef}>
          {/* –°—Ç–æ—Ä–æ–Ω–∞ "–û—Ä—ë–ª" */}
          <div className="coin-side heads">
            <div className="coin-face">
              <div className="coin-inner-ring">
                <div className="coin-center">
                  <span className="coin-symbol">‚Çø</span>
                  <div className="coin-text">HEADS</div>
                </div>
              </div>
              <div className="coin-sparkles">
                <div className="sparkle sparkle-1"></div>
                <div className="sparkle sparkle-2"></div>
                <div className="sparkle sparkle-3"></div>
              </div>
            </div>
          </div>
          
          {/* –°—Ç–æ—Ä–æ–Ω–∞ "–†–µ—à–∫–∞" */}
          <div className="coin-side tails">
            <div className="coin-face">
              <div className="coin-inner-ring">
                <div className="coin-center">
                  <span className="coin-symbol">üíé</span>
                  <div className="coin-text">TAILS</div>
                </div>
              </div>
              <div className="coin-sparkles">
                <div className="sparkle sparkle-1"></div>
                <div className="sparkle sparkle-2"></div>
                <div className="sparkle sparkle-3"></div>
              </div>
            </div>
          </div>
        </div>
      </div>
      
      {/* –°—Ç–∞—Ç—É—Å –∞–Ω–∏–º–∞—Ü–∏–∏ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –≤–æ –≤—Ä–µ–º—è –ø–æ–¥–±—Ä–∞—Å—ã–≤–∞–Ω–∏—è */}
      {animationState === 'flipping' && (
        <div className="flip-status">
          <div className="flip-text">–ü–æ–¥–±—Ä–∞—Å—ã–≤–∞–µ–º –º–æ–Ω–µ—Ç—É...</div>
          <div className="flip-dots">
            <span></span>
            <span></span>
            <span></span>
          </div>
        </div>
      )}
    </div>
  );
};

export default CoinFlip;

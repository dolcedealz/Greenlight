// –†–ê–°–°–õ–ï–î–û–í–ê–ù–ò–ï –ü–û–î–û–ó–†–ò–¢–ï–õ–¨–ù–´–• –ê–ö–ö–ê–£–ù–¢–û–í
const { 
  User, Game, Transaction, ReferralEarning, ReferralPayout,
  EventBet, CrashRound, DuelRound, Duel, Event, Deposit, Withdrawal 
} = require('./src/models');
const mongoose = require('mongoose');

async function investigateSuspiciousAccounts() {
  try {
    await mongoose.connect(process.env.MONGODB_URI || 'mongodb://localhost:27017/greenlight');
    console.log('üîó –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ\n');
    
    console.log('üïµÔ∏è === –†–ê–°–°–õ–ï–î–û–í–ê–ù–ò–ï –ü–û–î–û–ó–†–ò–¢–ï–õ–¨–ù–´–• –ê–ö–ö–ê–£–ù–¢–û–í ===\n');
    
    // –ù–∞–π–¥–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–º–∏ –±–∞–ª–∞–Ω—Å–∞–º–∏
    const allUsers = await User.find({});
    const suspiciousAccounts = [];
    
    for (const user of allUsers) {
      const transactions = await Transaction.find({ user: user._id }).sort({ createdAt: 1 });
      const games = await Game.find({ user: user._id });
      const deposits = await Deposit.find({ user: user._id });
      const withdrawals = await Withdrawal.find({ user: user._id });
      
      const transactionBalance = transactions.reduce((sum, t) => sum + t.amount, 0);
      const totalDeposits = deposits.reduce((sum, d) => sum + d.amount, 0);
      const totalWithdrawals = withdrawals.reduce((sum, w) => sum + w.amount, 0);
      
      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å
      let initialBalance = 0;
      let balanceSource = 'zero';
      
      if (transactions.length > 0) {
        const firstTx = transactions[0];
        if (firstTx.balanceBefore > 0 && firstTx.type !== 'deposit') {
          initialBalance = firstTx.balanceBefore;
          if (firstTx.amount < 0) initialBalance += Math.abs(firstTx.amount);
          balanceSource = 'first_transaction';
        }
      }
      
      const expectedBalance = initialBalance + transactionBalance;
      const balanceDifference = user.balance - expectedBalance;
      
      // –ö—Ä–∏—Ç–µ—Ä–∏–∏ –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
      const isSuspicious = (
        // –ë–æ–ª—å—à–∞—è —Ä–∞–∑–Ω–∏—Ü–∞ –≤ –±–∞–ª–∞–Ω—Å–µ
        Math.abs(balanceDifference) > 10 ||
        // –ë–æ–ª—å—à–æ–π –±–∞–ª–∞–Ω—Å –±–µ–∑ –∏–≥—Ä
        (user.balance > 50 && games.length === 0 && totalDeposits === 0) ||
        // –û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å
        user.balance < 0 ||
        // –ë–æ–ª—å—à–µ –≤—ã–≤–æ–¥–æ–≤ —á–µ–º –¥–µ–ø–æ–∑–∏—Ç–æ–≤ + –≤—ã–∏–≥—Ä—ã—à–µ–π
        totalWithdrawals > (totalDeposits + Math.max(0, transactionBalance))
      );
      
      if (isSuspicious) {
        suspiciousAccounts.push({
          user,
          transactions,
          games,
          deposits,
          withdrawals,
          analysis: {
            currentBalance: user.balance,
            initialBalance,
            balanceSource,
            transactionBalance,
            expectedBalance,
            balanceDifference,
            totalDeposits,
            totalWithdrawals,
            totalGames: games.length,
            suspicionReasons: []
          }
        });
        
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—Ä–∏—á–∏–Ω—ã –ø–æ–¥–æ–∑—Ä–µ–Ω–∏–π
        const account = suspiciousAccounts[suspiciousAccounts.length - 1];
        if (Math.abs(balanceDifference) > 10) {
          account.analysis.suspicionReasons.push(`–†–∞–∑–Ω–∏—Ü–∞ –≤ –±–∞–ª–∞–Ω—Å–µ: ${balanceDifference.toFixed(2)} USDT`);
        }
        if (user.balance > 50 && games.length === 0 && totalDeposits === 0) {
          account.analysis.suspicionReasons.push(`–ë–æ–ª—å—à–æ–π –±–∞–ª–∞–Ω—Å –±–µ–∑ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏: ${user.balance} USDT`);
        }
        if (user.balance < 0) {
          account.analysis.suspicionReasons.push(`–û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å: ${user.balance} USDT`);
        }
        if (totalWithdrawals > (totalDeposits + Math.max(0, transactionBalance))) {
          account.analysis.suspicionReasons.push(`–í—ã–≤–æ–¥—ã –ø—Ä–µ–≤—ã—à–∞—é—Ç –¥–µ–ø–æ–∑–∏—Ç—ã + –≤—ã–∏–≥—Ä—ã—à–∏`);
        }
      }
    }
    
    console.log(`üö® –ù–∞–π–¥–µ–Ω–æ –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤: ${suspiciousAccounts.length}\n`);
    
    // –î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –∫–∞–∂–¥–æ–≥–æ –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞
    for (const account of suspiciousAccounts) {
      const { user, transactions, games, deposits, withdrawals, analysis } = account;
      
      console.log(`üïµÔ∏è === –ê–ù–ê–õ–ò–ó: ${user.username || user.telegramId} ===`);
      console.log(`ID: ${user._id}`);
      console.log(`–°–æ–∑–¥–∞–Ω: ${user.createdAt?.toISOString() || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}`);
      console.log(`–ü–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: ${user.lastActivity?.toISOString() || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}`);
      
      console.log(`\nüìä –§–ò–ù–ê–ù–°–û–í–´–ï –î–ê–ù–ù–´–ï:`);
      console.log(`   –¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: ${analysis.currentBalance} USDT`);
      console.log(`   –ù–∞—á–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å: ${analysis.initialBalance} USDT (–∏—Å—Ç–æ—á–Ω–∏–∫: ${analysis.balanceSource})`);
      console.log(`   –ë–∞–ª–∞–Ω—Å –∏–∑ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π: ${analysis.transactionBalance.toFixed(2)} USDT`);
      console.log(`   –û–∂–∏–¥–∞–µ–º—ã–π –±–∞–ª–∞–Ω—Å: ${analysis.expectedBalance.toFixed(2)} USDT`);
      console.log(`   –†–∞–∑–Ω–∏—Ü–∞: ${analysis.balanceDifference.toFixed(2)} USDT`);
      
      console.log(`\nüí∞ –î–ï–ü–û–ó–ò–¢–´ –ò –í–´–í–û–î–´:`);
      console.log(`   –î–µ–ø–æ–∑–∏—Ç–æ–≤: ${deposits.length} –Ω–∞ —Å—É–º–º—É ${analysis.totalDeposits} USDT`);
      console.log(`   –í—ã–≤–æ–¥–æ–≤: ${withdrawals.length} –Ω–∞ —Å—É–º–º—É ${analysis.totalWithdrawals} USDT`);
      
      console.log(`\nüéÆ –ò–ì–†–û–í–ê–Ø –ê–ö–¢–ò–í–ù–û–°–¢–¨:`);
      console.log(`   –ò–≥—Ä —Å—ã–≥—Ä–∞–Ω–æ: ${analysis.totalGames}`);
      console.log(`   –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${user.totalGames} –∏–≥—Ä, ${user.totalWagered} —Å—Ç–∞–≤–æ–∫, ${user.totalWon} –≤—ã–∏–≥—Ä—ã—à–µ–π`);
      
      if (games.length > 0) {
        const gamesByType = games.reduce((acc, game) => {
          acc[game.gameType] = (acc[game.gameType] || 0) + 1;
          return acc;
        }, {});
        console.log(`   –ü–æ —Ç–∏–ø–∞–º –∏–≥—Ä:`, gamesByType);
        
        const winRate = (games.filter(g => g.win).length / games.length * 100).toFixed(1);
        const totalProfit = games.reduce((sum, g) => sum + g.profit, 0);
        console.log(`   –í–∏–Ω—Ä–µ–π—Ç: ${winRate}%`);
        console.log(`   –û–±—â–∞—è –ø—Ä–∏–±—ã–ª—å/—É–±—ã—Ç–æ–∫: ${totalProfit.toFixed(2)} USDT`);
      }
      
      console.log(`\nü§ù –†–ï–§–ï–†–ê–õ–¨–ù–ê–Ø –°–ò–°–¢–ï–ú–ê:`);
      console.log(`   –†–µ—Ñ–µ—Ä–µ—Ä: ${user.referrer ? '–î–∞' : '–ù–µ—Ç'}`);
      console.log(`   –ü–∞—Ä—Ç–Ω–µ—Ä—Å–∫–∏–π —É—Ä–æ–≤–µ–Ω—å: ${user.partnerLevel || 'none'}`);
      console.log(`   –†–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å: ${user.referralStats?.referralBalance || 0} USDT`);
      console.log(`   –í—Å–µ–≥–æ –∑–∞—Ä–∞–±–æ—Ç–∞–Ω–æ: ${user.referralStats?.totalEarned || 0} USDT`);
      
      console.log(`\nüìú –ò–°–¢–û–†–ò–Ø –¢–†–ê–ù–ó–ê–ö–¶–ò–ô (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 10):`);
      const recentTransactions = transactions.slice(-10);
      if (recentTransactions.length === 0) {
        console.log(`   –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –Ω–µ—Ç`);
      } else {
        recentTransactions.forEach((tx, i) => {
          console.log(`   ${i + 1}. ${tx.createdAt.toISOString().split('T')[0]} | ${tx.type} | ${tx.amount} USDT | ${tx.balanceBefore} ‚Üí ${tx.balanceAfter}`);
          if (tx.description) console.log(`      "${tx.description}"`);
        });
      }
      
      console.log(`\nüö© –ü–†–ò–ß–ò–ù–´ –ü–û–î–û–ó–†–ï–ù–ò–ô:`);
      analysis.suspicionReasons.forEach(reason => {
        console.log(`   ‚ùå ${reason}`);
      });
      
      console.log(`\nüí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:`);
      
      if (analysis.balanceDifference > 100 && games.length === 0) {
        console.log(`   üîç –í–´–°–û–ö–ò–ô –ü–†–ò–û–†–ò–¢–ï–¢: –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∏—Å—Ç–æ—á–Ω–∏–∫ –±–∞–ª–∞–Ω—Å–∞ ${analysis.currentBalance} USDT`);
        console.log(`   üìã –î–µ–π—Å—Ç–≤–∏—è: –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ª–æ–≥–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –Ω–∞ —Ä—É—á–Ω—ã–µ –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è`);
      }
      
      if (analysis.balanceDifference < -50) {
        console.log(`   ‚ö†Ô∏è  –í–æ–∑–º–æ–∂–Ω–∞—è –Ω–µ—Ö–≤–∞—Ç–∫–∞ —Å—Ä–µ–¥—Å—Ç–≤: ${Math.abs(analysis.balanceDifference).toFixed(2)} USDT`);
        console.log(`   üìã –î–µ–π—Å—Ç–≤–∏—è: –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–µ –±—ã–ª–æ –ª–∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫ –ø—Ä–∏ –≤—ã–≤–æ–¥–∞—Ö`);
      }
      
      if (games.length === 0 && transactions.length > 0) {
        console.log(`   ü§î –¢–æ–ª—å–∫–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –±–µ–∑ –∏–≥—Ä - –≤–æ–∑–º–æ–∂–Ω–æ —Ç–µ—Å—Ç–æ–≤—ã–π –∞–∫–∫–∞—É–Ω—Ç`);
      }
      
      if (user.balance < 0) {
        console.log(`   üö® –ö–†–ò–¢–ò–ß–ù–û: –û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å —Ç—Ä–µ–±—É–µ—Ç –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è`);
      }
      
      // –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª—è —Å–ª—É—á–∞—è aastaxovv
      if (analysis.balanceDifference > 500 && games.length === 0) {
        console.log(`   üéØ –°–õ–£–ß–ê–ô –¢–ò–ü–ê AASTAXOVV: Phantom balance`);
        console.log(`   üìã –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:`);
        console.log(`      - –û—à–∏–±–∫–∞ –≤ —Å–∫—Ä–∏–ø—Ç–µ –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è`);
        console.log(`      - –î—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –±–∞–ª–∞–Ω—Å–∞`);
        console.log(`      - –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π —Å–±–æ–π –≤ —Å–∏—Å—Ç–µ–º–µ –¥–µ–ø–æ–∑–∏—Ç–æ–≤`);
        console.log(`   üîß –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ: –°–±—Ä–æ—Å–∏—Ç—å –±–∞–ª–∞–Ω—Å –¥–æ –æ–∂–∏–¥–∞–µ–º–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è`);
      }
      
      console.log(`\n${'='.repeat(80)}\n`);
    }
    
    // –û–±—â–∏–µ –≤—ã–≤–æ–¥—ã
    console.log(`üìà === –û–ë–©–ò–ô –ê–ù–ê–õ–ò–ó –ü–û–î–û–ó–†–ò–¢–ï–õ–¨–ù–´–• –ê–ö–ö–ê–£–ù–¢–û–í ===`);
    
    const totalPhantomBalance = suspiciousAccounts
      .filter(acc => acc.analysis.balanceDifference > 10)
      .reduce((sum, acc) => sum + acc.analysis.balanceDifference, 0);
      
    const accountsWithPhantomBalance = suspiciousAccounts
      .filter(acc => acc.analysis.balanceDifference > 10).length;
    
    const accountsWithNegativeBalance = suspiciousAccounts
      .filter(acc => acc.user.balance < 0).length;
      
    const inactiveAccountsWithBalance = suspiciousAccounts
      .filter(acc => acc.games.length === 0 && acc.user.balance > 50).length;
    
    console.log(`üí∏ –û–±—â–∏–π phantom balance: ${totalPhantomBalance.toFixed(2)} USDT`);
    console.log(`üëª –ê–∫–∫–∞—É–Ω—Ç–æ–≤ —Å phantom balance: ${accountsWithPhantomBalance}`);
    console.log(`‚ùå –ê–∫–∫–∞—É–Ω—Ç–æ–≤ —Å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º –±–∞–ª–∞–Ω—Å–æ–º: ${accountsWithNegativeBalance}`);
    console.log(`üò¥ –ù–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤ —Å –±–∞–ª–∞–Ω—Å–æ–º: ${inactiveAccountsWithBalance}`);
    
    if (totalPhantomBalance > 100) {
      console.log(`\nüö® –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –ü–†–û–ë–õ–ï–ú–ê: –û–±–Ω–∞—Ä—É–∂–µ–Ω –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω—ã–π phantom balance!`);
      console.log(`üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: –°—Ä–æ—á–Ω–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –±–∞–ª–∞–Ω—Å—ã –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤`);
    }
    
    console.log('\n‚úÖ –†–∞—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ');
    
    return {
      suspiciousAccounts,
      summary: {
        totalSuspicious: suspiciousAccounts.length,
        totalPhantomBalance: totalPhantomBalance,
        accountsWithPhantomBalance,
        accountsWithNegativeBalance,
        inactiveAccountsWithBalance
      }
    };
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–∏:', error);
    throw error;
  } finally {
    mongoose.disconnect();
  }
}

investigateSuspiciousAccounts().catch(console.error);
// frontend/src/screens/ProfileScreen.js
import React, { useState, useEffect } from 'react';
import { Header } from '../components/layout';
import { userApi, gameApi } from '../services';
import { showNotification } from '../utils/telegram';
import '../styles/ProfileScreen.css';

const ProfileScreen = () => {
  const [userData, setUserData] = useState(null);
  const [transactions, setTransactions] = useState([]);
  const [stats, setStats] = useState(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);
  const [activeTab, setActiveTab] = useState('profile');
  
  // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  useEffect(() => {
    const fetchUserData = async () => {
      try {
        setLoading(true);
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const profileResponse = await userApi.getUserProfile();
        setUserData(profileResponse.data.data);
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const transactionsResponse = await userApi.getTransactions({ limit: 20 });
        setTransactions(transactionsResponse.data.data.transactions);
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏–≥—Ä
        const statsResponse = await gameApi.getGameStats();
        setStats(statsResponse.data.data);
        
        setLoading(false);
      } catch (err) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ—Ñ–∏–ª—è:', err);
        setError('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
        setLoading(false);
      }
    };
    
    fetchUserData();
  }, []);
  
  // –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–≥–æ –∫–æ–¥–∞
  const copyReferralCode = () => {
    if (userData && userData.referralCode) {
      navigator.clipboard.writeText(`https://t.me/greenlight_casino_bot?start=${userData.referralCode}`)
        .then(() => {
          showNotification('–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞!');
        })
        .catch(err => {
          console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–∏:', err);
          showNotification('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Å—Å—ã–ª–∫—É');
        });
    }
  };
  
  // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç—ã
  const formatDate = (dateString) => {
    const date = new Date(dateString);
    return date.toLocaleDateString('ru-RU', {
      day: '2-digit',
      month: '2-digit',
      year: 'numeric',
      hour: '2-digit',
      minute: '2-digit'
    });
  };
  
  // –ü–æ–ª—É—á–∞–µ–º –∏–∫–æ–Ω–∫—É –¥–ª—è —Ç–∏–ø–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
  const getTransactionIcon = (type) => {
    switch (type) {
      case 'deposit': return 'üí∞';
      case 'withdrawal': return 'üí∏';
      case 'bet': return 'üéÆ';
      case 'win': return 'üèÜ';
      case 'referral': return 'üë•';
      case 'bonus': return 'üéÅ';
      default: return 'üìã';
    }
  };
  
  // –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–∏–ø–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
  const getTransactionName = (type) => {
    switch (type) {
      case 'deposit': return '–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ';
      case 'withdrawal': return '–í—ã–≤–æ–¥';
      case 'bet': return '–°—Ç–∞–≤–∫–∞';
      case 'win': return '–í—ã–∏–≥—Ä—ã—à';
      case 'referral': return '–†–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –±–æ–Ω—É—Å';
      case 'bonus': return '–ë–æ–Ω—É—Å';
      default: return type;
    }
  };
  
  // –†–µ–Ω–¥–µ—Ä –≤–∫–ª–∞–¥–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è
  const renderProfileTab = () => {
    if (!userData) return null;
    
    return (
      <div className="profile-tab">
        <div className="profile-info">
          <div className="profile-avatar">
            {userData.firstName.charAt(0)}{userData.lastName ? userData.lastName.charAt(0) : ''}
          </div>
          <div className="profile-details">
            <h2>{userData.firstName} {userData.lastName}</h2>
            {userData.username && <p className="username">@{userData.username}</p>}
            <p className="join-date">–ù–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ —Å {formatDate(userData.createdAt)}</p>
          </div>
        </div>
        
        <div className="profile-balance">
          <div className="balance-header">
            <h3>–ë–∞–ª–∞–Ω—Å</h3>
            <button className="action-button">–ü–æ–ø–æ–ª–Ω–∏—Ç—å</button>
          </div>
          <div className="balance-amount">{userData.balance.toFixed(2)} USDT</div>
          <div className="balance-actions">
            <button className="action-button">–ò—Å—Ç–æ—Ä–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π</button>
            <button className="action-button secondary">–í—ã–≤–µ—Å—Ç–∏</button>
          </div>
        </div>
        
        <div className="profile-stats">
          <h3>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</h3>
          <div className="stats-grid">
            <div className="stat-item">
              <span className="stat-label">–í—Å–µ–≥–æ –∏–≥—Ä</span>
              <span className="stat-value">{stats?.overall?.totalGames || 0}</span>
            </div>
            <div className="stat-item">
              <span className="stat-label">–ü—Ä–æ–≤–µ–¥–µ–Ω–æ</span>
              <span className="stat-value">{stats?.overall?.totalBet?.toFixed(2) || '0.00'} USDT</span>
            </div>
            <div className="stat-item">
              <span className="stat-label">–í—ã–∏–≥—Ä–∞–Ω–æ</span>
              <span className="stat-value">{stats?.overall?.totalWin?.toFixed(2) || '0.00'} USDT</span>
            </div>
            <div className="stat-item">
              <span className="stat-label">–ü—Ä–æ—Ñ–∏—Ç</span>
              <span className={`stat-value ${(stats?.overall?.totalWin - stats?.overall?.totalLoss) >= 0 ? 'positive' : 'negative'}`}>
                {((stats?.overall?.totalWin || 0) - (stats?.overall?.totalLoss || 0)).toFixed(2)} USDT
              </span>
            </div>
          </div>
        </div>
        
        <div className="profile-referral">
          <h3>–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞</h3>
          <p className="referral-description">
            –ü—Ä–∏–≥–ª–∞—à–∞–π—Ç–µ –¥—Ä—É–∑–µ–π –∏ –ø–æ–ª—É—á–∞–π—Ç–µ 10% –æ—Ç –∏—Ö –¥–µ–ø–æ–∑–∏—Ç–æ–≤!
          </p>
          <div className="referral-code">
            <div className="code">{userData.referralCode}</div>
            <button className="copy-button" onClick={copyReferralCode}>–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Å—Å—ã–ª–∫—É</button>
          </div>
          <div className="referral-stats">
            <div className="referral-item">
              <span className="referral-label">–ü—Ä–∏–≥–ª–∞—à–µ–Ω–æ –¥—Ä—É–∑–µ–π</span>
              <span className="referral-value">{userData.referralCount}</span>
            </div>
            <div className="referral-item">
              <span className="referral-label">–ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ</span>
              <span className="referral-value">{userData.referralEarnings?.toFixed(2) || '0.00'} USDT</span>
            </div>
          </div>
        </div>
      </div>
    );
  };
  
  // –†–µ–Ω–¥–µ—Ä –≤–∫–ª–∞–¥–∫–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
  const renderTransactionsTab = () => {
    return (
      <div className="transactions-tab">
        <h3>–ò—Å—Ç–æ—Ä–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π</h3>
        
        {transactions.length === 0 ? (
          <div className="no-transactions">
            <p>–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π</p>
          </div>
        ) : (
          <div className="transactions-list">
            {transactions.map(transaction => (
              <div key={transaction._id} className="transaction-item">
                <div className="transaction-icon">
                  {getTransactionIcon(transaction.type)}
                </div>
                <div className="transaction-details">
                  <div className="transaction-header">
                    <span className="transaction-type">{getTransactionName(transaction.type)}</span>
                    <span className={`transaction-amount ${transaction.amount >= 0 ? 'positive' : 'negative'}`}>
                      {transaction.amount >= 0 ? '+' : ''}{transaction.amount.toFixed(2)} USDT
                    </span>
                  </div>
                  <div className="transaction-info">
                    <span className="transaction-date">{formatDate(transaction.createdAt)}</span>
                    <span className="transaction-balance">–ë–∞–ª–∞–Ω—Å: {transaction.balanceAfter.toFixed(2)} USDT</span>
                  </div>
                  {transaction.description && (
                    <div className="transaction-description">{transaction.description}</div>
                  )}
                </div>
              </div>
            ))}
          </div>
        )}
      </div>
    );
  };
  
  // –†–µ–Ω–¥–µ—Ä –≤–∫–ª–∞–¥–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
  const renderStatsTab = () => {
    if (!stats) return null;
    
    return (
      <div className="stats-tab">
        <h3>–î–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</h3>
        
        <div className="game-stats-summary">
          <div className="summary-item">
            <span className="summary-label">–í—Å–µ–≥–æ –∏–≥—Ä</span>
            <span className="summary-value">{stats.overall.totalGames}</span>
          </div>
          <div className="summary-item">
            <span className="summary-label">–í—ã–∏–≥—Ä—ã—à–∏</span>
            <span className="summary-value">{stats.overall.winCount} ({(stats.overall.winRate * 100).toFixed(1)}%)</span>
          </div>
          <div className="summary-item">
            <span className="summary-label">–û–±—â–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç</span>
            <span className={`summary-value ${(stats.overall.totalWin - stats.overall.totalLoss) >= 0 ? 'positive' : 'negative'}`}>
              {((stats.overall.totalWin || 0) - (stats.overall.totalLoss || 0)).toFixed(2)} USDT
            </span>
          </div>
        </div>
        
        <div className="game-stats-details">
          <h4>–ü–æ —Ç–∏–ø–∞–º –∏–≥—Ä</h4>
          
          {Object.keys(stats.byGameType).map(gameType => {
            const gameStats = stats.byGameType[gameType];
            return (
              <div key={gameType} className="game-stat-item">
                <div className="game-stat-header">
                  <h5>{
                    gameType === 'coin' ? '–ú–æ–Ω–µ—Ç–∫–∞' :
                    gameType === 'mines' ? '–ú–∏–Ω—ã' :
                    gameType === 'crash' ? '–ö—Ä–∞—à' :
                    gameType === 'slots' ? '–°–ª–æ—Ç—ã' : gameType
                  }</h5>
                  <span className="game-stat-count">{gameStats.totalGames} –∏–≥—Ä</span>
                </div>
                <div className="game-stat-details">
                  <div className="game-stat-detail">
                    <span>–°—Ç–∞–≤–∫–∏:</span>
                    <span>{gameStats.totalBet.toFixed(2)} USDT</span>
                  </div>
                  <div className="game-stat-detail">
                    <span>–í—ã–∏–≥—Ä—ã—à–∏:</span>
                    <span>{gameStats.winCount} ({(gameStats.winRate * 100).toFixed(1)}%)</span>
                  </div>
                  <div className="game-stat-detail">
                    <span>–†–µ–∑—É–ª—å—Ç–∞—Ç:</span>
                    <span className={`${(gameStats.totalWin - gameStats.totalLoss) >= 0 ? 'positive' : 'negative'}`}>
                      {(gameStats.totalWin - gameStats.totalLoss).toFixed(2)} USDT
                    </span>
                  </div>
                </div>
              </div>
            );
          })}
        </div>
      </div>
    );
  };
  
  // –†–µ–Ω–¥–µ—Ä –≤–∫–ª–∞–¥–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫
  const renderSettingsTab = () => {
    return (
      <div className="settings-tab">
        <h3>–ù–∞—Å—Ç—Ä–æ–π–∫–∏</h3>
        
        <div className="settings-section">
          <h4>–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</h4>
          <div className="setting-item">
            <span className="setting-label">–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –≤—ã–∏–≥—Ä—ã—à–∞—Ö</span>
            <label className="toggle">
              <input type="checkbox" defaultChecked />
              <span className="slider"></span>
            </label>
          </div>
          <div className="setting-item">
            <span className="setting-label">–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –¥–µ–ø–æ–∑–∏—Ç–∞—Ö</span>
            <label className="toggle">
              <input type="checkbox" defaultChecked />
              <span className="slider"></span>
            </label>
          </div>
          <div className="setting-item">
            <span className="setting-label">–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –≤—ã–≤–æ–¥–∞—Ö</span>
            <label className="toggle">
              <input type="checkbox" defaultChecked />
              <span className="slider"></span>
            </label>
          </div>
        </div>
        
        <div className="settings-section">
          <h4>–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ</h4>
          <div className="setting-item">
            <span className="setting-label">–ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ</span>
            <label className="toggle">
              <input type="checkbox" defaultChecked />
              <span className="slider"></span>
            </label>
          </div>
          <div className="setting-item">
            <span className="setting-label">–ü–æ–∫–∞–∑—ã–≤–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏–≥—Ä</span>
            <label className="toggle">
              <input type="checkbox" defaultChecked />
              <span className="slider"></span>
            </label>
          </div>
        </div>
        
        <div className="settings-section">
          <h4>–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å</h4>
          <div className="setting-item">
            <span className="setting-label">–ü—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Å—Ç–Ω–æ—Å—Ç–∏ –∏–≥—Ä—ã</span>
            <label className="toggle">
              <input type="checkbox" defaultChecked />
              <span className="slider"></span>
            </label>
          </div>
        </div>
        
        <div className="settings-section">
          <h4>–û –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏</h4>
          <div className="about-item">
            <span className="about-label">–í–µ—Ä—Å–∏—è</span>
            <span className="about-value">1.0.0</span>
          </div>
          <div className="about-item">
            <span className="about-label">–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫</span>
            <span className="about-value">Greenlight Team</span>
          </div>
          <div className="about-links">
            <a href="https://t.me/greenlight_news" target="_blank" rel="noopener noreferrer">–ö–∞–Ω–∞–ª Telegram</a>
            <a href="https://t.me/greenlight_support" target="_blank" rel="noopener noreferrer">–ü–æ–¥–¥–µ—Ä–∂–∫–∞</a>
          </div>
        </div>
      </div>
    );
  };
  
  // –†–µ–Ω–¥–µ—Ä –∞–∫—Ç–∏–≤–Ω–æ–π –≤–∫–ª–∞–¥–∫–∏
  const renderActiveTab = () => {
    switch (activeTab) {
      case 'profile':
        return renderProfileTab();
      case 'transactions':
        return renderTransactionsTab();
      case 'stats':
        return renderStatsTab();
      case 'settings':
        return renderSettingsTab();
      default:
        return renderProfileTab();
    }
  };
  
  return (
    <div className="profile-screen">
      <Header balance={userData?.balance || 0} />
      
      <div className="profile-header">
        <h1 className="profile-title">–ü—Ä–æ—Ñ–∏–ª—å</h1>
      </div>
      
      {loading ? (
        <div className="profile-loading">
          <div className="loader"></div>
          <p>–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ—Ñ–∏–ª—è...</p>
        </div>
      ) : error ? (
        <div className="profile-error">
          <p>{error}</p>
          <button onClick={() => window.location.reload()}>–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞</button>
        </div>
      ) : (
        <>
          <div className="profile-tabs">
            <button 
              className={`tab-button ${activeTab === 'profile' ? 'active' : ''}`} 
              onClick={() => setActiveTab('profile')}
            >
              –ü—Ä–æ—Ñ–∏–ª—å
            </button>
            <button 
              className={`tab-button ${activeTab === 'transactions' ? 'active' : ''}`} 
              onClick={() => setActiveTab('transactions')}
            >
              –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
            </button>
            <button 
              className={`tab-button ${activeTab === 'stats' ? 'active' : ''}`} 
              onClick={() => setActiveTab('stats')}
            >
              –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
            </button>
            <button 
              className={`tab-button ${activeTab === 'settings' ? 'active' : ''}`} 
              onClick={() => setActiveTab('settings')}
            >
              –ù–∞—Å—Ç—Ä–æ–π–∫–∏
            </button>
          </div>
          
          <div className="profile-content">
            {renderActiveTab()}
          </div>
        </>
      )}
    </div>
  );
};

export default ProfileScreen;
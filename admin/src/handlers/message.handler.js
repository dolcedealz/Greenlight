// admin/src/handlers/message.handler.js

// Import command modules
const eventsCommands = require('../commands/events.command');
const usersCommands = require('../commands/users.command');
const transactionsCommands = require('../commands/transactions.command');
const promoCommands = require('../commands/promo.command');

/**
 * –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –∞–¥–º–∏–Ω-–±–æ—Ç–∞
 * @param {Object} bot - –≠–∫–∑–µ–º–ø–ª—è—Ä Telegraf
 */
function registerMessageHandlers(bot) {
  console.log('üîÑ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è message handlers...');

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
  bot.on('text', async (ctx) => {
    const text = ctx.message.text.trim();
    
    try {
      // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å–æ–±—ã—Ç–∏—è
      if (ctx.session?.creatingEvent) {
        await eventsCommands.handleEventCreation(ctx);
        return;
      }
      
      // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Å–æ–±—ã—Ç–∏—è
      if (ctx.session?.finishingEvent) {
        await eventsCommands.handleEventFinishing(ctx);
        return;
      }
      
      // –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      if (ctx.session?.searchingUser) {
        await usersCommands.handleUserSearch(ctx);
        return;
      }
      
      // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      if (ctx.session?.adjustingBalance) {
        await usersCommands.handleBalanceAdjustment(ctx);
        return;
      }
      
      // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è –≤—ã–≤–æ–¥–∞
      if (ctx.session?.rejectingWithdrawal) {
        await transactionsCommands.handleWithdrawalRejection(ctx);
        return;
      }
      
      // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–º–æ–∫–æ–¥–∞
      if (ctx.session?.creatingPromo) {
        await promoCommands.handlePromoCreation(ctx);
        return;
      }
      
      // –ö–æ–º–∞–Ω–¥—ã
      if (text.startsWith('/')) {
        const command = text.toLowerCase();
        
        switch (command) {
          case '/start':
            await ctx.reply(
              'üè† *–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å!*\n\n–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è:',
              {
                parse_mode: 'Markdown',
                reply_markup: {
                  inline_keyboard: [
                    [
                      { text: 'üí∞ –§–∏–Ω–∞–Ω—Å—ã', callback_data: 'finances_menu' },
                      { text: 'üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏', callback_data: 'users_menu' }
                    ],
                    [
                      { text: 'üí≥ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏', callback_data: 'transactions_menu' },
                      { text: 'üéØ –°–æ–±—ã—Ç–∏—è', callback_data: 'events_menu' }
                    ],
                    [
                      { text: 'üéÅ –ü—Ä–æ–º–æ–∫–æ–¥—ã', callback_data: 'promo_menu' },
                      { text: 'üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', callback_data: 'stats_menu' }
                    ]
                  ]
                }
              }
            );
            break;
            
          default:
            await ctx.reply(
              '‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –º–µ–Ω—é.'
            );
        }
        return;
      }
      
      // –ï—Å–ª–∏ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π —Å–µ—Å—Å–∏–∏ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–¥—Å–∫–∞–∑–∫—É
      await ctx.reply(
        '‚ùì –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –∏–ª–∏ /start –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.'
      );
      
    } catch (error) {
      console.error('ADMIN: –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è:', error);
      await ctx.reply('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è.');
    }
  });

  console.log('‚úÖ Message handlers –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã');
}

module.exports = registerMessageHandlers;
// backend/src/websocket/index.js
const CrashWebSocketHandlers = require('./crash.handlers');

function setupWebSocket(server) {
  const { Server } = require('socket.io');
  
  // –°–æ–∑–¥–∞–µ–º Socket.IO —Å–µ—Ä–≤–µ—Ä
  const io = new Server(server, {
    cors: {
      origin: '*',
      methods: ['GET', 'POST']
    }
  });
  
  // –û—Å–Ω–æ–≤–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
  io.on('connection', (socket) => {
    console.log(`WebSocket: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–¥–∫–ª—é—á–∏–ª—Å—è: ${socket.id}`);
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è
    socket.on('disconnect', () => {
      console.log(`WebSocket: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–∫–ª—é—á–∏–ª—Å—è: ${socket.id}`);
    });
    
    // –ë–∞–∑–æ–≤—ã–µ —Å–æ–±—ã—Ç–∏—è –¥–ª—è –≤—Å–µ—Ö –∏–≥—Ä
    socket.on('join_game', (gameType) => {
      socket.join(`game_${gameType}`);
      console.log(`WebSocket: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${socket.id} –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –∫ –∏–≥—Ä–µ ${gameType}`);
    });
    
    socket.on('leave_game', (gameType) => {
      socket.leave(`game_${gameType}`);
      console.log(`WebSocket: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${socket.id} –ø–æ–∫–∏–Ω—É–ª –∏–≥—Ä—É ${gameType}`);
    });
  });
  
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫—Ä–∞—à –∏–≥—Ä—ã
  const crashHandlers = new CrashWebSocketHandlers(io);
  
  console.log('‚úÖ WebSocket —Å–µ—Ä–≤–µ—Ä –Ω–∞—Å—Ç—Ä–æ–µ–Ω');
  console.log('üöÄ –ö—Ä–∞—à –∏–≥—Ä–∞ WebSocket –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã');
  
  return io;
}

module.exports = setupWebSocket;
